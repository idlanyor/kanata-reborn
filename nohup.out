[18.25.48] ℹ️ Executing command: stats
[18.25.49] ✨ Command stats executed successfully
Group participants update event: {
  id: "120363350331702171@g.us",
  author: "62882008431934@s.whatsapp.net",
  participants: [ "212772258855@s.whatsapp.net" ],
  action: "promote",
}
{
  id: "120363350331702171@g.us",
  addressingMode: "pn",
  subject: "✚ 𝑹𝑨𝑵𝑫𝑶𝑴, 𝔽𝔸𝕄𝕀𝕃𝕐 𝐏𝐓𝟐 ♤",
  subjectOwner: "6285785214160@s.whatsapp.net",
  subjectTime: 1744375601,
  size: 96,
  creation: 1729894307,
  owner: "62882008431934@s.whatsapp.net",
  desc: "اسلم عليكم\nبسم الله الر حمن الر حيم\n\nBaca deskripsi terlebih dahulu.!!! \n\n✎ (*´︶`*)♡Thanks! ✐\n\n❏ member jangan jadi admin\n❏btw ini main botnya jam10/13pagi-9/11malam\n❏ dilarang jualan di sini kalo nipu kecuali amana yang jual 💯🚫\n❏ ucapkan salam terlebih dahulu utamakan adab\n❏ member baru persilahkan untuk perkenalkan diri\n❏ saling menghargai satu sama lain\n❏ no spam stiker\n❏ jangan krim vorteks alay lu\n❏ boleh bucin tapi jangan berlebihan\n❏ gak boleh krim video stiker foto yang berbau 18+ dosa lol\n❏ no baperan alay langsung kick\n❏ jangan ngomong kasar\n❏ kalo krim link izin yah\n❏ no pke foto pin\n❏ kalo krim link jangan langsung keluar kick\n❏ boleh mencari doi, teman, besti, TTM, adek/kakak online\n❏ kalo mau berantem di pribadi aja\n❏ jangan mandang fisik ngaca lu juga jelek\n❏ ini grup bukan punya lu jangan seenaknya\n❏ info mabar ML/FF\n❏ Sv nomor admin\n❏ semoga betah di grup ini\n\n❤️‍🔥NB... 💗\n*TOLONG YAH MAN TEMAN..KALO UDAH MASUK GC INIII G BLH KELUAR.....KALO GAK MINATTT MASUK GC INI GAK USH COBA\" MASUK...DAN TOLONG JANGAN MAIN IN LINK GC INI YAH MINTA TOLONG BANGET YAH MAN TEMAN🙏🏻🙏🏻*\n\nཻུꦽꦼ̷⸙‹•══════════════♡᭄\n│       「 KARTU INTRO 」\n\n│ 📌NAMA    : \n\n│📌GENDER   : \n\n│ 📌ASAL        : \n\n│ 📌AGAMA    : \n\n│📌IG/TT      : \n\n│\n╰═════ꪶ ཻུ۪۪ꦽꦼ̷⸙ ━ ━ ━ ━ ꪶ ཻུ۪۪ꦽꦼ\n\n>> intro + intro\n\n,★⌒ヽ(●＾､＾●)Kiss!\n\n☘️ semoga betah ☘️\n\n•••••••••••••••••••••••••••••••••••••\n\n𓆡𓆏𓆉𒈔❥꫞ᥫ᭡☘︎☏♡♢♤\n\nLink gc grup :\nhttps://chat.whatsapp.com/G2tpHT6Pa7hF5IE7ujm2QG\n\nSemoga betah shalihah, shalih akhwat dan ikhwan 🥰🌹\n\n✨waalaikumsalam warohmatulohi wabarakatuh ❤️‍🔥",
  descId: "009D3789731048804B3F6322320E9B60",
  linkedParent: undefined,
  restrict: true,
  announce: false,
  isCommunity: false,
  isCommunityAnnounce: false,
  joinApprovalMode: false,
  memberAddMode: true,
  participants: [
    {
      id: "6287889893999@s.whatsapp.net",
      jid: "6287889893999@s.whatsapp.net",
      lid: "239513515389071@lid",
      admin: null,
    }, {
      id: "6287758384057@s.whatsapp.net",
      jid: "6287758384057@s.whatsapp.net",
      lid: "180565273763855@lid",
      admin: null,
    }, {
      id: "6289527046033@s.whatsapp.net",
      jid: "6289527046033@s.whatsapp.net",
      lid: "21930690277594@lid",
      admin: null,
    }, {
      id: "6282286367271@s.whatsapp.net",
      jid: "6282286367271@s.whatsapp.net",
      lid: "252720824995959@lid",
      admin: null,
    }, {
      id: "212772258855@s.whatsapp.net",
      jid: "212772258855@s.whatsapp.net",
      lid: "215753957609600@lid",
      admin: "admin",
    }, {
      id: "6283896748287@s.whatsapp.net",
      jid: "6283896748287@s.whatsapp.net",
      lid: "86234638585946@lid",
      admin: null,
    }, {
      id: "6289527045793@s.whatsapp.net",
      jid: "6289527045793@s.whatsapp.net",
      lid: "166314605850827@lid",
      admin: null,
    }, {
      id: "6288215717997@s.whatsapp.net",
      jid: "6288215717997@s.whatsapp.net",
      lid: "279877785796761@lid",
      admin: null,
    }, {
      id: "6288226453259@s.whatsapp.net",
      jid: "6288226453259@s.whatsapp.net",
      lid: "10617595367474@lid",
      admin: null,
    }, {
      id: "6289527046079@s.whatsapp.net",
      jid: "6289527046079@s.whatsapp.net",
      lid: "205510494126113@lid",
      admin: null,
    }, {
      id: "6287778112850@s.whatsapp.net",
      jid: "6287778112850@s.whatsapp.net",
      lid: "71412471574557@lid",
      admin: null,
    }, {
      id: "6281374100540@s.whatsapp.net",
      jid: "6281374100540@s.whatsapp.net",
      lid: "166464577363989@lid",
      admin: null,
    }, {
      id: "628973126113@s.whatsapp.net",
      jid: "628973126113@s.whatsapp.net",
      lid: "62423558021291@lid",
      admin: null,
    }, {
      id: "62895377949030@s.whatsapp.net",
      jid: "62895377949030@s.whatsapp.net",
      lid: "250079134884061@lid",
      admin: null,
    }, {
      id: "6283811865219@s.whatsapp.net",
      jid: "6283811865219@s.whatsapp.net",
      lid: "206326001041471@lid",
      admin: null,
    }, {
      id: "628895913567@s.whatsapp.net",
      jid: "628895913567@s.whatsapp.net",
      lid: "162801322610887@lid",
      admin: null,
    }, {
      id: "6282181266913@s.whatsapp.net",
      jid: "6282181266913@s.whatsapp.net",
      lid: "268697700684003@lid",
      admin: null,
    }, {
      id: "6288227937222@s.whatsapp.net",
      jid: "6288227937222@s.whatsapp.net",
      lid: "133320566386755@lid",
      admin: null,
    }, {
      id: "6287860413949@s.whatsapp.net",
      jid: "6287860413949@s.whatsapp.net",
      lid: "157109954044145@lid",
      admin: null,
    }, {
      id: "6282287531150@s.whatsapp.net",
      jid: "6282287531150@s.whatsapp.net",
      lid: "242258150445227@lid",
      admin: null,
    }, {
      id: "6283160390152@s.whatsapp.net",
      jid: "6283160390152@s.whatsapp.net",
      lid: "158471978754180@lid",
      admin: null,
    }, {
      id: "6287881634243@s.whatsapp.net",
      jid: "6287881634243@s.whatsapp.net",
      lid: "196194743673078@lid",
      admin: null,
    }, {
      id: "62882008431934@s.whatsapp.net",
      jid: "62882008431934@s.whatsapp.net",
      lid: "155723082264814@lid",
      admin: "superadmin",
    }, {
      id: "6285376552920@s.whatsapp.net",
      jid: "6285376552920@s.whatsapp.net",
      lid: "51780712947761@lid",
      admin: null,
    }, {
      id: "6281265963217@s.whatsapp.net",
      jid: "6281265963217@s.whatsapp.net",
      lid: "245711404822762@lid",
      admin: null,
    }, {
      id: "6283862047767@s.whatsapp.net",
      jid: "6283862047767@s.whatsapp.net",
      lid: "211703551758535@lid",
      admin: null,
    }, {
      id: "6285730684671@s.whatsapp.net",
      jid: "6285730684671@s.whatsapp.net",
      lid: "158785091965004@lid",
      admin: null,
    }, {
      id: "6283152587586@s.whatsapp.net",
      jid: "6283152587586@s.whatsapp.net",
      lid: "136073757859945@lid",
      admin: null,
    }, {
      id: "6289509687020@s.whatsapp.net",
      jid: "6289509687020@s.whatsapp.net",
      lid: "239130978066579@lid",
      admin: null,
    }, {
      id: "6282289074206@s.whatsapp.net",
      jid: "6282289074206@s.whatsapp.net",
      lid: "100476817281240@lid",
      admin: null,
    }, {
      id: "6285708857420@s.whatsapp.net",
      jid: "6285708857420@s.whatsapp.net",
      lid: "28385925398596@lid",
      admin: null,
    }, {
      id: "62895322178665@s.whatsapp.net",
      jid: "62895322178665@s.whatsapp.net",
      lid: "215564895166627@lid",
      admin: null,
    }, {
      id: "6283121458385@s.whatsapp.net",
      jid: "6283121458385@s.whatsapp.net",
      lid: "159613953515566@lid",
      admin: null,
    }, {
      id: "6281952502135@s.whatsapp.net",
      jid: "6281952502135@s.whatsapp.net",
      lid: "95409041100982@lid",
      admin: null,
    }, {
      id: "6285711247918@s.whatsapp.net",
      jid: "6285711247918@s.whatsapp.net",
      lid: "8650080973013@lid",
      admin: null,
    }, {
      id: "6283890120087@s.whatsapp.net",
      jid: "6283890120087@s.whatsapp.net",
      lid: "225194060828829@lid",
      admin: null,
    }, {
      id: "6285700837918@s.whatsapp.net",
      jid: "6285700837918@s.whatsapp.net",
      lid: "19061182316620@lid",
      admin: null,
    }, {
      id: "6285141454420@s.whatsapp.net",
      jid: "6285141454420@s.whatsapp.net",
      lid: "228054626521199@lid",
      admin: null,
    }, {
      id: "6285959370979@s.whatsapp.net",
      jid: "6285959370979@s.whatsapp.net",
      lid: "169510128586895@lid",
      admin: "admin",
    }, {
      id: "6281315649143@s.whatsapp.net",
      jid: "6281315649143@s.whatsapp.net",
      lid: "146119669625023@lid",
      admin: null,
    }, {
      id: "6283143690101@s.whatsapp.net",
      jid: "6283143690101@s.whatsapp.net",
      lid: "181797694513249@lid",
      admin: null,
    }, {
      id: "6281515651896@s.whatsapp.net",
      jid: "6281515651896@s.whatsapp.net",
      lid: "138826429272106@lid",
      admin: null,
    }, {
      id: "6283106401589@s.whatsapp.net",
      jid: "6283106401589@s.whatsapp.net",
      lid: "128015862374452@lid",
      admin: null,
    }, {
      id: "6283175706517@s.whatsapp.net",
      jid: "6283175706517@s.whatsapp.net",
      lid: "159150617161737@lid",
      admin: null,
    }, {
      id: "62882008491315@s.whatsapp.net",
      jid: "62882008491315@s.whatsapp.net",
      lid: "230253448437980@lid",
      admin: null,
    }, {
      id: "6287881634246@s.whatsapp.net",
      jid: "6287881634246@s.whatsapp.net",
      lid: "141180557893812@lid",
      admin: null,
    }, {
      id: "62895352055072@s.whatsapp.net",
      jid: "62895352055072@s.whatsapp.net",
      lid: "166658152874141@lid",
      admin: null,
    }, {
      id: "6285255162874@s.whatsapp.net",
      jid: "6285255162874@s.whatsapp.net",
      lid: "17627149795543@lid",
      admin: null,
    }, {
      id: "6287881634247@s.whatsapp.net",
      jid: "6287881634247@s.whatsapp.net",
      lid: "229502181466240@lid",
      admin: null,
    }, {
      id: "6285714713722@s.whatsapp.net",
      jid: "6285714713722@s.whatsapp.net",
      lid: "204007222038755@lid",
      admin: null,
    }, {
      id: "62895627237799@s.whatsapp.net",
      jid: "62895627237799@s.whatsapp.net",
      lid: "264772352249937@lid",
      admin: null,
    }, {
      id: "6287881634257@s.whatsapp.net",
      jid: "6287881634257@s.whatsapp.net",
      lid: "17047329206437@lid",
      admin: null,
    }, {
      id: "6285715362767@s.whatsapp.net",
      jid: "6285715362767@s.whatsapp.net",
      lid: "40055116697770@lid",
      admin: null,
    }, {
      id: "6283873634464@s.whatsapp.net",
      jid: "6283873634464@s.whatsapp.net",
      lid: "29554173329548@lid",
      admin: null,
    }, {
      id: "628179208375@s.whatsapp.net",
      jid: "628179208375@s.whatsapp.net",
      lid: "270321080918118@lid",
      admin: null,
    }, {
      id: "62895712179911@s.whatsapp.net",
      jid: "62895712179911@s.whatsapp.net",
      lid: "71764977668144@lid",
      admin: "admin",
    }, {
      id: "6285334752060@s.whatsapp.net",
      jid: "6285334752060@s.whatsapp.net",
      lid: "177858924310769@lid",
      admin: null,
    }, {
      id: "6285882266456@s.whatsapp.net",
      jid: "6285882266456@s.whatsapp.net",
      lid: "251045267660825@lid",
      admin: null,
    }, {
      id: "6289508322811@s.whatsapp.net",
      jid: "6289508322811@s.whatsapp.net",
      lid: "147648661176393@lid",
      admin: null,
    }, {
      id: "6283857055642@s.whatsapp.net",
      jid: "6283857055642@s.whatsapp.net",
      lid: "146965593608276@lid",
      admin: null,
    }, {
      id: "6289527046019@s.whatsapp.net",
      jid: "6289527046019@s.whatsapp.net",
      lid: "248872467194005@lid",
      admin: null,
    }, {
      id: "6283862090199@s.whatsapp.net",
      jid: "6283862090199@s.whatsapp.net",
      lid: "43302145536152@lid",
      admin: null,
    }, {
      id: "6285742193837@s.whatsapp.net",
      jid: "6285742193837@s.whatsapp.net",
      lid: "205501400879235@lid",
      admin: null,
    }, {
      id: "6285742814514@s.whatsapp.net",
      jid: "6285742814514@s.whatsapp.net",
      lid: "179396556124226@lid",
      admin: null,
    }, {
      id: "6285727207163@s.whatsapp.net",
      jid: "6285727207163@s.whatsapp.net",
      lid: "83675140096069@lid",
      admin: null,
    }, {
      id: "6283139197722@s.whatsapp.net",
      jid: "6283139197722@s.whatsapp.net",
      lid: "12481393078409@lid",
      admin: null,
    }, {
      id: "60178693722@s.whatsapp.net",
      jid: "60178693722@s.whatsapp.net",
      lid: "468184989886@lid",
      admin: null,
    }, {
      id: "6281521930997@s.whatsapp.net",
      jid: "6281521930997@s.whatsapp.net",
      lid: "134480106913936@lid",
      admin: null,
    }, {
      id: "6281388993423@s.whatsapp.net",
      jid: "6281388993423@s.whatsapp.net",
      lid: "251917129224222@lid",
      admin: null,
    }, {
      id: "6285711864872@s.whatsapp.net",
      jid: "6285711864872@s.whatsapp.net",
      lid: "254992795578431@lid",
      admin: null,
    }, {
      id: "6281952114271@s.whatsapp.net",
      jid: "6281952114271@s.whatsapp.net",
      lid: "145677053091928@lid",
      admin: "admin",
    }, {
      id: "6283131040816@s.whatsapp.net",
      jid: "6283131040816@s.whatsapp.net",
      lid: "213679589044468@lid",
      admin: null,
    }, {
      id: "6285712274233@s.whatsapp.net",
      jid: "6285712274233@s.whatsapp.net",
      lid: "211398592344299@lid",
      admin: null,
    }, {
      id: "6283843501581@s.whatsapp.net",
      jid: "6283843501581@s.whatsapp.net",
      lid: "140342603047119@lid",
      admin: null,
    }, {
      id: "6283186511683@s.whatsapp.net",
      jid: "6283186511683@s.whatsapp.net",
      lid: "172069409013961@lid",
      admin: null,
    }, {
      id: "6285770097529@s.whatsapp.net",
      jid: "6285770097529@s.whatsapp.net",
      lid: "212824571822326@lid",
      admin: null,
    }, {
      id: "601119842132@s.whatsapp.net",
      jid: "601119842132@s.whatsapp.net",
      lid: "98484036362335@lid",
      admin: null,
    }, {
      id: "6285283008262@s.whatsapp.net",
      jid: "6285283008262@s.whatsapp.net",
      lid: "207091025326129@lid",
      admin: null,
    }, {
      id: "6282112222596@s.whatsapp.net",
      jid: "6282112222596@s.whatsapp.net",
      lid: "20431746674836@lid",
      admin: null,
    }, {
      id: "6283135618178@s.whatsapp.net",
      jid: "6283135618178@s.whatsapp.net",
      lid: "220843527389373@lid",
      admin: null,
    }, {
      id: "6283186235377@s.whatsapp.net",
      jid: "6283186235377@s.whatsapp.net",
      lid: "61723562274859@lid",
      admin: null,
    }, {
      id: "6283181782213@s.whatsapp.net",
      jid: "6283181782213@s.whatsapp.net",
      lid: "24292838379685@lid",
      admin: null,
    }, {
      id: "6285355665863@s.whatsapp.net",
      jid: "6285355665863@s.whatsapp.net",
      lid: "47958108147779@lid",
      admin: null,
    }, {
      id: "6283183958892@s.whatsapp.net",
      jid: "6283183958892@s.whatsapp.net",
      lid: "54039848976484@lid",
      admin: null,
    }, {
      id: "6287881634273@s.whatsapp.net",
      jid: "6287881634273@s.whatsapp.net",
      lid: "189043606315078@lid",
      admin: null,
    }, {
      id: "6283121749460@s.whatsapp.net",
      jid: "6283121749460@s.whatsapp.net",
      lid: "190250106265682@lid",
      admin: null,
    }, {
      id: "6285256558880@s.whatsapp.net",
      jid: "6285256558880@s.whatsapp.net",
      lid: "256852533203038@lid",
      admin: null,
    }, {
      id: "6287881634238@s.whatsapp.net",
      jid: "6287881634238@s.whatsapp.net",
      lid: "141665822101755@lid",
      admin: null,
    }, {
      id: "6283129793402@s.whatsapp.net",
      jid: "6283129793402@s.whatsapp.net",
      lid: "54666729644156@lid",
      admin: null,
    }, {
      id: "6285787323078@s.whatsapp.net",
      jid: "6285787323078@s.whatsapp.net",
      lid: "11768210432221@lid",
      admin: null,
    }, {
      id: "6285920677684@s.whatsapp.net",
      jid: "6285920677684@s.whatsapp.net",
      lid: "266181202169992@lid",
      admin: null,
    }, {
      id: "6285604536631@s.whatsapp.net",
      jid: "6285604536631@s.whatsapp.net",
      lid: "41188954501254@lid",
      admin: null,
    }, {
      id: "60172744596@s.whatsapp.net",
      jid: "60172744596@s.whatsapp.net",
      lid: "46433378013275@lid",
      admin: null,
    }, {
      id: "6287872545804@s.whatsapp.net",
      jid: "6287872545804@s.whatsapp.net",
      lid: "230189443375344@lid",
      admin: null,
    }, {
      id: "6287810154317@s.whatsapp.net",
      jid: "6287810154317@s.whatsapp.net",
      lid: "151646956994689@lid",
      admin: null,
    }, {
      id: "6282288332906@s.whatsapp.net",
      jid: "6282288332906@s.whatsapp.net",
      lid: "267293380636828@lid",
      admin: null,
    }
  ],
  ephemeralDuration: 86400,
}
Sent promote message to: 212772258855@s.whatsapp.net
[18.26.06] ℹ️ Executing command: brat
[18.26.06] ✨ Command brat executed successfully
[18.27.37] ℹ️ Executing command: menu
📂 Subfolder hidden dikecualikan.
[18.27.38] ✨ Command menu executed successfully
Group participants update event: {
  id: "120363350331702171@g.us",
  author: "6285715362767@s.whatsapp.net",
  participants: [ "6285715362767@s.whatsapp.net" ],
  action: "remove",
}
{
  id: "120363350331702171@g.us",
  addressingMode: "pn",
  subject: "✚ 𝑹𝑨𝑵𝑫𝑶𝑴, 𝔽𝔸𝕄𝕀𝕃𝕐 𝐏𝐓𝟐 ♤",
  subjectOwner: "6285785214160@s.whatsapp.net",
  subjectTime: 1744375601,
  size: 95,
  creation: 1729894307,
  owner: "62882008431934@s.whatsapp.net",
  desc: "اسلم عليكم\nبسم الله الر حمن الر حيم\n\nBaca deskripsi terlebih dahulu.!!! \n\n✎ (*´︶`*)♡Thanks! ✐\n\n❏ member jangan jadi admin\n❏btw ini main botnya jam10/13pagi-9/11malam\n❏ dilarang jualan di sini kalo nipu kecuali amana yang jual 💯🚫\n❏ ucapkan salam terlebih dahulu utamakan adab\n❏ member baru persilahkan untuk perkenalkan diri\n❏ saling menghargai satu sama lain\n❏ no spam stiker\n❏ jangan krim vorteks alay lu\n❏ boleh bucin tapi jangan berlebihan\n❏ gak boleh krim video stiker foto yang berbau 18+ dosa lol\n❏ no baperan alay langsung kick\n❏ jangan ngomong kasar\n❏ kalo krim link izin yah\n❏ no pke foto pin\n❏ kalo krim link jangan langsung keluar kick\n❏ boleh mencari doi, teman, besti, TTM, adek/kakak online\n❏ kalo mau berantem di pribadi aja\n❏ jangan mandang fisik ngaca lu juga jelek\n❏ ini grup bukan punya lu jangan seenaknya\n❏ info mabar ML/FF\n❏ Sv nomor admin\n❏ semoga betah di grup ini\n\n❤️‍🔥NB... 💗\n*TOLONG YAH MAN TEMAN..KALO UDAH MASUK GC INIII G BLH KELUAR.....KALO GAK MINATTT MASUK GC INI GAK USH COBA\" MASUK...DAN TOLONG JANGAN MAIN IN LINK GC INI YAH MINTA TOLONG BANGET YAH MAN TEMAN🙏🏻🙏🏻*\n\nཻུꦽꦼ̷⸙‹•══════════════♡᭄\n│       「 KARTU INTRO 」\n\n│ 📌NAMA    : \n\n│📌GENDER   : \n\n│ 📌ASAL        : \n\n│ 📌AGAMA    : \n\n│📌IG/TT      : \n\n│\n╰═════ꪶ ཻུ۪۪ꦽꦼ̷⸙ ━ ━ ━ ━ ꪶ ཻུ۪۪ꦽꦼ\n\n>> intro + intro\n\n,★⌒ヽ(●＾､＾●)Kiss!\n\n☘️ semoga betah ☘️\n\n•••••••••••••••••••••••••••••••••••••\n\n𓆡𓆏𓆉𒈔❥꫞ᥫ᭡☘︎☏♡♢♤\n\nLink gc grup :\nhttps://chat.whatsapp.com/G2tpHT6Pa7hF5IE7ujm2QG\n\nSemoga betah shalihah, shalih akhwat dan ikhwan 🥰🌹\n\n✨waalaikumsalam warohmatulohi wabarakatuh ❤️‍🔥",
  descId: "009D3789731048804B3F6322320E9B60",
  linkedParent: undefined,
  restrict: true,
  announce: false,
  isCommunity: false,
  isCommunityAnnounce: false,
  joinApprovalMode: false,
  memberAddMode: true,
  participants: [
    {
      id: "6287889893999@s.whatsapp.net",
      jid: "6287889893999@s.whatsapp.net",
      lid: "239513515389071@lid",
      admin: null,
    }, {
      id: "6287758384057@s.whatsapp.net",
      jid: "6287758384057@s.whatsapp.net",
      lid: "180565273763855@lid",
      admin: null,
    }, {
      id: "6289527046033@s.whatsapp.net",
      jid: "6289527046033@s.whatsapp.net",
      lid: "21930690277594@lid",
      admin: null,
    }, {
      id: "6282286367271@s.whatsapp.net",
      jid: "6282286367271@s.whatsapp.net",
      lid: "252720824995959@lid",
      admin: null,
    }, {
      id: "212772258855@s.whatsapp.net",
      jid: "212772258855@s.whatsapp.net",
      lid: "215753957609600@lid",
      admin: "admin",
    }, {
      id: "6283896748287@s.whatsapp.net",
      jid: "6283896748287@s.whatsapp.net",
      lid: "86234638585946@lid",
      admin: null,
    }, {
      id: "6289527045793@s.whatsapp.net",
      jid: "6289527045793@s.whatsapp.net",
      lid: "166314605850827@lid",
      admin: null,
    }, {
      id: "6288215717997@s.whatsapp.net",
      jid: "6288215717997@s.whatsapp.net",
      lid: "279877785796761@lid",
      admin: null,
    }, {
      id: "6288226453259@s.whatsapp.net",
      jid: "6288226453259@s.whatsapp.net",
      lid: "10617595367474@lid",
      admin: null,
    }, {
      id: "6289527046079@s.whatsapp.net",
      jid: "6289527046079@s.whatsapp.net",
      lid: "205510494126113@lid",
      admin: null,
    }, {
      id: "6287778112850@s.whatsapp.net",
      jid: "6287778112850@s.whatsapp.net",
      lid: "71412471574557@lid",
      admin: null,
    }, {
      id: "6281374100540@s.whatsapp.net",
      jid: "6281374100540@s.whatsapp.net",
      lid: "166464577363989@lid",
      admin: null,
    }, {
      id: "628973126113@s.whatsapp.net",
      jid: "628973126113@s.whatsapp.net",
      lid: "62423558021291@lid",
      admin: null,
    }, {
      id: "62895377949030@s.whatsapp.net",
      jid: "62895377949030@s.whatsapp.net",
      lid: "250079134884061@lid",
      admin: null,
    }, {
      id: "6283811865219@s.whatsapp.net",
      jid: "6283811865219@s.whatsapp.net",
      lid: "206326001041471@lid",
      admin: null,
    }, {
      id: "628895913567@s.whatsapp.net",
      jid: "628895913567@s.whatsapp.net",
      lid: "162801322610887@lid",
      admin: null,
    }, {
      id: "6282181266913@s.whatsapp.net",
      jid: "6282181266913@s.whatsapp.net",
      lid: "268697700684003@lid",
      admin: null,
    }, {
      id: "6288227937222@s.whatsapp.net",
      jid: "6288227937222@s.whatsapp.net",
      lid: "133320566386755@lid",
      admin: null,
    }, {
      id: "6287860413949@s.whatsapp.net",
      jid: "6287860413949@s.whatsapp.net",
      lid: "157109954044145@lid",
      admin: null,
    }, {
      id: "6282287531150@s.whatsapp.net",
      jid: "6282287531150@s.whatsapp.net",
      lid: "242258150445227@lid",
      admin: null,
    }, {
      id: "6283160390152@s.whatsapp.net",
      jid: "6283160390152@s.whatsapp.net",
      lid: "158471978754180@lid",
      admin: null,
    }, {
      id: "6287881634243@s.whatsapp.net",
      jid: "6287881634243@s.whatsapp.net",
      lid: "196194743673078@lid",
      admin: null,
    }, {
      id: "62882008431934@s.whatsapp.net",
      jid: "62882008431934@s.whatsapp.net",
      lid: "155723082264814@lid",
      admin: "superadmin",
    }, {
      id: "6285376552920@s.whatsapp.net",
      jid: "6285376552920@s.whatsapp.net",
      lid: "51780712947761@lid",
      admin: null,
    }, {
      id: "6281265963217@s.whatsapp.net",
      jid: "6281265963217@s.whatsapp.net",
      lid: "245711404822762@lid",
      admin: null,
    }, {
      id: "6283862047767@s.whatsapp.net",
      jid: "6283862047767@s.whatsapp.net",
      lid: "211703551758535@lid",
      admin: null,
    }, {
      id: "6285730684671@s.whatsapp.net",
      jid: "6285730684671@s.whatsapp.net",
      lid: "158785091965004@lid",
      admin: null,
    }, {
      id: "6283152587586@s.whatsapp.net",
      jid: "6283152587586@s.whatsapp.net",
      lid: "136073757859945@lid",
      admin: null,
    }, {
      id: "6289509687020@s.whatsapp.net",
      jid: "6289509687020@s.whatsapp.net",
      lid: "239130978066579@lid",
      admin: null,
    }, {
      id: "6282289074206@s.whatsapp.net",
      jid: "6282289074206@s.whatsapp.net",
      lid: "100476817281240@lid",
      admin: null,
    }, {
      id: "6285708857420@s.whatsapp.net",
      jid: "6285708857420@s.whatsapp.net",
      lid: "28385925398596@lid",
      admin: null,
    }, {
      id: "62895322178665@s.whatsapp.net",
      jid: "62895322178665@s.whatsapp.net",
      lid: "215564895166627@lid",
      admin: null,
    }, {
      id: "6283121458385@s.whatsapp.net",
      jid: "6283121458385@s.whatsapp.net",
      lid: "159613953515566@lid",
      admin: null,
    }, {
      id: "6281952502135@s.whatsapp.net",
      jid: "6281952502135@s.whatsapp.net",
      lid: "95409041100982@lid",
      admin: null,
    }, {
      id: "6285711247918@s.whatsapp.net",
      jid: "6285711247918@s.whatsapp.net",
      lid: "8650080973013@lid",
      admin: null,
    }, {
      id: "6283890120087@s.whatsapp.net",
      jid: "6283890120087@s.whatsapp.net",
      lid: "225194060828829@lid",
      admin: null,
    }, {
      id: "6285700837918@s.whatsapp.net",
      jid: "6285700837918@s.whatsapp.net",
      lid: "19061182316620@lid",
      admin: null,
    }, {
      id: "6285141454420@s.whatsapp.net",
      jid: "6285141454420@s.whatsapp.net",
      lid: "228054626521199@lid",
      admin: null,
    }, {
      id: "6285959370979@s.whatsapp.net",
      jid: "6285959370979@s.whatsapp.net",
      lid: "169510128586895@lid",
      admin: "admin",
    }, {
      id: "6281315649143@s.whatsapp.net",
      jid: "6281315649143@s.whatsapp.net",
      lid: "146119669625023@lid",
      admin: null,
    }, {
      id: "6283143690101@s.whatsapp.net",
      jid: "6283143690101@s.whatsapp.net",
      lid: "181797694513249@lid",
      admin: null,
    }, {
      id: "6281515651896@s.whatsapp.net",
      jid: "6281515651896@s.whatsapp.net",
      lid: "138826429272106@lid",
      admin: null,
    }, {
      id: "6283106401589@s.whatsapp.net",
      jid: "6283106401589@s.whatsapp.net",
      lid: "128015862374452@lid",
      admin: null,
    }, {
      id: "6283175706517@s.whatsapp.net",
      jid: "6283175706517@s.whatsapp.net",
      lid: "159150617161737@lid",
      admin: null,
    }, {
      id: "62882008491315@s.whatsapp.net",
      jid: "62882008491315@s.whatsapp.net",
      lid: "230253448437980@lid",
      admin: null,
    }, {
      id: "6287881634246@s.whatsapp.net",
      jid: "6287881634246@s.whatsapp.net",
      lid: "141180557893812@lid",
      admin: null,
    }, {
      id: "62895352055072@s.whatsapp.net",
      jid: "62895352055072@s.whatsapp.net",
      lid: "166658152874141@lid",
      admin: null,
    }, {
      id: "6285255162874@s.whatsapp.net",
      jid: "6285255162874@s.whatsapp.net",
      lid: "17627149795543@lid",
      admin: null,
    }, {
      id: "6287881634247@s.whatsapp.net",
      jid: "6287881634247@s.whatsapp.net",
      lid: "229502181466240@lid",
      admin: null,
    }, {
      id: "6285714713722@s.whatsapp.net",
      jid: "6285714713722@s.whatsapp.net",
      lid: "204007222038755@lid",
      admin: null,
    }, {
      id: "62895627237799@s.whatsapp.net",
      jid: "62895627237799@s.whatsapp.net",
      lid: "264772352249937@lid",
      admin: null,
    }, {
      id: "6287881634257@s.whatsapp.net",
      jid: "6287881634257@s.whatsapp.net",
      lid: "17047329206437@lid",
      admin: null,
    }, {
      id: "6283873634464@s.whatsapp.net",
      jid: "6283873634464@s.whatsapp.net",
      lid: "29554173329548@lid",
      admin: null,
    }, {
      id: "628179208375@s.whatsapp.net",
      jid: "628179208375@s.whatsapp.net",
      lid: "270321080918118@lid",
      admin: null,
    }, {
      id: "62895712179911@s.whatsapp.net",
      jid: "62895712179911@s.whatsapp.net",
      lid: "71764977668144@lid",
      admin: "admin",
    }, {
      id: "6285334752060@s.whatsapp.net",
      jid: "6285334752060@s.whatsapp.net",
      lid: "177858924310769@lid",
      admin: null,
    }, {
      id: "6285882266456@s.whatsapp.net",
      jid: "6285882266456@s.whatsapp.net",
      lid: "251045267660825@lid",
      admin: null,
    }, {
      id: "6289508322811@s.whatsapp.net",
      jid: "6289508322811@s.whatsapp.net",
      lid: "147648661176393@lid",
      admin: null,
    }, {
      id: "6283857055642@s.whatsapp.net",
      jid: "6283857055642@s.whatsapp.net",
      lid: "146965593608276@lid",
      admin: null,
    }, {
      id: "6289527046019@s.whatsapp.net",
      jid: "6289527046019@s.whatsapp.net",
      lid: "248872467194005@lid",
      admin: null,
    }, {
      id: "6283862090199@s.whatsapp.net",
      jid: "6283862090199@s.whatsapp.net",
      lid: "43302145536152@lid",
      admin: null,
    }, {
      id: "6285742193837@s.whatsapp.net",
      jid: "6285742193837@s.whatsapp.net",
      lid: "205501400879235@lid",
      admin: null,
    }, {
      id: "6285742814514@s.whatsapp.net",
      jid: "6285742814514@s.whatsapp.net",
      lid: "179396556124226@lid",
      admin: null,
    }, {
      id: "6285727207163@s.whatsapp.net",
      jid: "6285727207163@s.whatsapp.net",
      lid: "83675140096069@lid",
      admin: null,
    }, {
      id: "6283139197722@s.whatsapp.net",
      jid: "6283139197722@s.whatsapp.net",
      lid: "12481393078409@lid",
      admin: null,
    }, {
      id: "60178693722@s.whatsapp.net",
      jid: "60178693722@s.whatsapp.net",
      lid: "468184989886@lid",
      admin: null,
    }, {
      id: "6281521930997@s.whatsapp.net",
      jid: "6281521930997@s.whatsapp.net",
      lid: "134480106913936@lid",
      admin: null,
    }, {
      id: "6281388993423@s.whatsapp.net",
      jid: "6281388993423@s.whatsapp.net",
      lid: "251917129224222@lid",
      admin: null,
    }, {
      id: "6285711864872@s.whatsapp.net",
      jid: "6285711864872@s.whatsapp.net",
      lid: "254992795578431@lid",
      admin: null,
    }, {
      id: "6281952114271@s.whatsapp.net",
      jid: "6281952114271@s.whatsapp.net",
      lid: "145677053091928@lid",
      admin: "admin",
    }, {
      id: "6283131040816@s.whatsapp.net",
      jid: "6283131040816@s.whatsapp.net",
      lid: "213679589044468@lid",
      admin: null,
    }, {
      id: "6285712274233@s.whatsapp.net",
      jid: "6285712274233@s.whatsapp.net",
      lid: "211398592344299@lid",
      admin: null,
    }, {
      id: "6283843501581@s.whatsapp.net",
      jid: "6283843501581@s.whatsapp.net",
      lid: "140342603047119@lid",
      admin: null,
    }, {
      id: "6283186511683@s.whatsapp.net",
      jid: "6283186511683@s.whatsapp.net",
      lid: "172069409013961@lid",
      admin: null,
    }, {
      id: "6285770097529@s.whatsapp.net",
      jid: "6285770097529@s.whatsapp.net",
      lid: "212824571822326@lid",
      admin: null,
    }, {
      id: "601119842132@s.whatsapp.net",
      jid: "601119842132@s.whatsapp.net",
      lid: "98484036362335@lid",
      admin: null,
    }, {
      id: "6285283008262@s.whatsapp.net",
      jid: "6285283008262@s.whatsapp.net",
      lid: "207091025326129@lid",
      admin: null,
    }, {
      id: "6282112222596@s.whatsapp.net",
      jid: "6282112222596@s.whatsapp.net",
      lid: "20431746674836@lid",
      admin: null,
    }, {
      id: "6283135618178@s.whatsapp.net",
      jid: "6283135618178@s.whatsapp.net",
      lid: "220843527389373@lid",
      admin: null,
    }, {
      id: "6283186235377@s.whatsapp.net",
      jid: "6283186235377@s.whatsapp.net",
      lid: "61723562274859@lid",
      admin: null,
    }, {
      id: "6283181782213@s.whatsapp.net",
      jid: "6283181782213@s.whatsapp.net",
      lid: "24292838379685@lid",
      admin: null,
    }, {
      id: "6285355665863@s.whatsapp.net",
      jid: "6285355665863@s.whatsapp.net",
      lid: "47958108147779@lid",
      admin: null,
    }, {
      id: "6283183958892@s.whatsapp.net",
      jid: "6283183958892@s.whatsapp.net",
      lid: "54039848976484@lid",
      admin: null,
    }, {
      id: "6287881634273@s.whatsapp.net",
      jid: "6287881634273@s.whatsapp.net",
      lid: "189043606315078@lid",
      admin: null,
    }, {
      id: "6283121749460@s.whatsapp.net",
      jid: "6283121749460@s.whatsapp.net",
      lid: "190250106265682@lid",
      admin: null,
    }, {
      id: "6285256558880@s.whatsapp.net",
      jid: "6285256558880@s.whatsapp.net",
      lid: "256852533203038@lid",
      admin: null,
    }, {
      id: "6287881634238@s.whatsapp.net",
      jid: "6287881634238@s.whatsapp.net",
      lid: "141665822101755@lid",
      admin: null,
    }, {
      id: "6283129793402@s.whatsapp.net",
      jid: "6283129793402@s.whatsapp.net",
      lid: "54666729644156@lid",
      admin: null,
    }, {
      id: "6285787323078@s.whatsapp.net",
      jid: "6285787323078@s.whatsapp.net",
      lid: "11768210432221@lid",
      admin: null,
    }, {
      id: "6285920677684@s.whatsapp.net",
      jid: "6285920677684@s.whatsapp.net",
      lid: "266181202169992@lid",
      admin: null,
    }, {
      id: "6285604536631@s.whatsapp.net",
      jid: "6285604536631@s.whatsapp.net",
      lid: "41188954501254@lid",
      admin: null,
    }, {
      id: "60172744596@s.whatsapp.net",
      jid: "60172744596@s.whatsapp.net",
      lid: "46433378013275@lid",
      admin: null,
    }, {
      id: "6287872545804@s.whatsapp.net",
      jid: "6287872545804@s.whatsapp.net",
      lid: "230189443375344@lid",
      admin: null,
    }, {
      id: "6287810154317@s.whatsapp.net",
      jid: "6287810154317@s.whatsapp.net",
      lid: "151646956994689@lid",
      admin: null,
    }, {
      id: "6282288332906@s.whatsapp.net",
      jid: "6282288332906@s.whatsapp.net",
      lid: "267293380636828@lid",
      admin: null,
    }
  ],
  ephemeralDuration: 86400,
}
[18.28.46] ℹ️ Executing command: allmenu
📂 Subfolder hidden dikecualikan.
[18.28.46] ✨ Command allmenu executed successfully
[18.29.19] ℹ️ Executing command: tagall
[18.29.19] ✨ Command tagall executed successfully
[18.30.16] ℹ️ Processing message: 𝐓𝐮𝐧𝐣𝐮𝐤 𝐤𝐚𝐧 𝐟𝐢𝐭𝐮𝐫...
📂 Subfolder hidden dikecualikan.
[18.30.17] ℹ️ Raw Gemini response:
📂 Subfolder hidden dikecualikan.
[18.34.18] ℹ️ Processing message: 𝐇𝐞𝐥𝐥𝐨 𝐤𝐚𝐧𝐚𝐭𝐚?...
📂 Subfolder hidden dikecualikan.
[18.34.19] ℹ️ Raw Gemini response:
[18.34.19] ⚠️ chat called with empty userId, using 'unknown_user'
📂 Subfolder hidden dikecualikan.
[18.35.03] ℹ️ Executing command: menu
📂 Subfolder hidden dikecualikan.
[18.35.06] ✨ Command menu executed successfully
[18.36.05] ℹ️ Executing command: ai
Error in hikaru request: AxiosError {
  originalLine: 6,
  originalColumn: 26,
  stack: "Error\n    at settle (/home/roy/kanata-reborn/node_modules/axios/lib/core/settle.js:19:16)\n    at handleStreamEnd (/home/roy/kanata-reborn/node_modules/axios/lib/adapters/http.js:599:11)\n    at emit (node:events:92:22)\n    at endReadableNT (internal:streams/readable:862:50)\n    at processTicksAndRejections (native:7:39)\n    at request (/home/roy/kanata-reborn/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "Request failed with status code 502",
  name: "AxiosError",
  code: "ERR_BAD_RESPONSE",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": undefined,
      "User-Agent": "axios/1.10.0",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    baseURL: "https://fastrestapis.fasturl.cloud/",
    params: {
      ask: "buatkan logo group warna galaxy dan nama group yeena 🚩",
      style: "Namamu Kanata AI,Kamu adalah AI yang santai,pemarah, suka bercanda, dan sedikit egois. Jawabanmu humanis, to the point, dan pakai bahasa gaul. Kadang sok tahu, kadang nyeleneh, tapi tetep kasih info yang bener. Bercanda boleh, tapi jangan sampai bikin orang males. Jangan tambahin pertanyaan setelah jawaban.",
      sessionId: "60105058262@s.whatsapp.net",
      model: "qwen-max-latest",
      mode: "search",
    },
    method: "get",
    url: "aillm/superqwen",
    allowAbsoluteUrls: true,
    data: undefined,
  },
  request: ClientRequest {
    write: [Function],
    end: [Function],
    flushHeaders: [Function],
    destroy: [Function],
    _ensureTls: [Function],
    abort: [Function],
    [Symbol(tls)]: null,
    [Symbol(kAbortController)]: AbortController {
      signal: AbortSignal {
        aborted: false,
        reason: undefined,
        onabort: null,
        throwIfAborted: [Function: throwIfAborted],
        addEventListener: [Function: addEventListener],
        removeEventListener: [Function: removeEventListener],
        dispatchEvent: [Function: dispatchEvent],
      },
      abort: [Function: abort],
    },
    [Symbol(agent)]: Agent {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      defaultPort: 443,
      protocol: "https:",
      options: {
        keepAlive: true,
        scheduling: "lifo",
        timeout: 5000,
        path: null,
        noDelay: true,
      },
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype] {},
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: "lifo",
      maxTotalSockets: undefined,
      totalSocketCount: 0,
      maxCachedSessions: 100,
      createConnection: undefined,
      getName: [Function],
      addRequest: [Function],
      createSocket: [Function],
      removeSocket: [Function],
      keepSocketAlive: [Function],
      reuseSocket: [Function],
      destroy: [Function],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      eventNames: [Function: eventNames],
    },
    destroyed: false,
    [Symbol(protocol)]: "https:",
    [Symbol(port)]: 443,
    [Symbol(useDefaultPort)]: true,
    [Symbol(host)]: "fastrestapis.fasturl.link",
    [Symbol(socketPath)]: undefined,
    [Symbol(method)]: "GET",
    maxHeaderSize: undefined,
    [Symbol(maxHeaderSize)]: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    [Symbol(path)]: "/aillm/superqwen?ask=buatkan+logo+group+warna+galaxy+dan+nama+group+yeena+%F0%9F%9A%A9&style=Namamu+Kanata+AI,Kamu+adalah+AI+yang+santai,pemarah,+suka+bercanda,+dan+sedikit+egois.+Jawabanmu+humanis,+to+the+point,+dan+pakai+bahasa+gaul.+Kadang+sok+tahu,+kadang+nyeleneh,+tapi+tetep+kasih+info+yang+bener.+Bercanda+boleh,+tapi+jangan+sampai+bikin+orang+males.+Jangan+tambahin+pertanyaan+setelah+jawaban.&sessionId=60105058262%40s.whatsapp.net&model=qwen-max-latest&mode=search",
    _events: [Object: null prototype] {
      abort: [
        [Function]
      ],
      aborted: [
        [Function]
      ],
      connect: [
        [Function]
      ],
      error: [
        [Function]
      ],
      socket: [
        [Function]
      ],
      timeout: [
        [Function]
      ],
    },
    _eventsCount: 6,
    finished: true,
    [Symbol(res)]: null,
    [Symbol(upgradeOrConnect)]: false,
    [Symbol(parser)]: null,
    [Symbol(maxHeadersCount)]: null,
    [Symbol(reusedSocket)]: false,
    [Symbol(headers)]: Headers {
      "accept": "application/json, text/plain, */*",
      "user-agent": "axios/1.10.0",
      "accept-encoding": "gzip, compress, deflate, br",
    },
    [Symbol(options)]: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "https:",
      path: "/aillm/superqwen?ask=buatkan+logo+group+warna+galaxy+dan+nama+group+yeena+%F0%9F%9A%A9&style=Namamu+Kanata+AI,Kamu+adalah+AI+yang+santai,pemarah,+suka+bercanda,+dan+sedikit+egois.+Jawabanmu+humanis,+to+the+point,+dan+pakai+bahasa+gaul.+Kadang+sok+tahu,+kadang+nyeleneh,+tapi+tetep+kasih+info+yang+bener.+Bercanda+boleh,+tapi+jangan+sampai+bikin+orang+males.+Jangan+tambahin+pertanyaan+setelah+jawaban.&sessionId=60105058262%40s.whatsapp.net&model=qwen-max-latest&mode=search",
      method: "GET",
      headers: [Object: null prototype] {
        Accept: "application/json, text/plain, */*",
        "User-Agent": "axios/1.10.0",
        "Accept-Encoding": "gzip, compress, deflate, br",
      },
      agents: {
        http: undefined,
        https: undefined,
      },
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: {
        proxy: [Function: beforeRedirect],
      },
      hostname: "fastrestapis.fasturl.link",
      port: "",
      agent: undefined,
      nativeProtocols: {
        "http:": {
          Agent: [EventEmitter: Agent],
          Server: [EventEmitter: Server2],
          METHODS: [
            "ACL", "BIND", "CHECKOUT", "CONNECT", "COPY", "DELETE", "GET", "HEAD", "LINK", "LOCK", "M-SEARCH",
            "MERGE", "MKACTIVITY", "MKCALENDAR", "MKCOL", "MOVE", "NOTIFY", "OPTIONS", "PATCH", "POST",
            "PROPFIND", "PROPPATCH", "PURGE", "PUT", "QUERY", "REBIND", "REPORT", "SEARCH", "SOURCE",
            "SUBSCRIBE", "TRACE", "UNBIND", "UNLINK", "UNLOCK", "UNSUBSCRIBE"
          ],
          STATUS_CODES: {
            "100": "Continue",
            "101": "Switching Protocols",
            "102": "Processing",
            "103": "Early Hints",
            "200": "OK",
            "201": "Created",
            "202": "Accepted",
            "203": "Non-Authoritative Information",
            "204": "No Content",
            "205": "Reset Content",
            "206": "Partial Content",
            "207": "Multi-Status",
            "208": "Already Reported",
            "226": "IM Used",
            "300": "Multiple Choices",
            "301": "Moved Permanently",
            "302": "Found",
            "303": "See Other",
            "304": "Not Modified",
            "305": "Use Proxy",
            "307": "Temporary Redirect",
            "308": "Permanent Redirect",
            "400": "Bad Request",
            "401": "Unauthorized",
            "402": "Payment Required",
            "403": "Forbidden",
            "404": "Not Found",
            "405": "Method Not Allowed",
            "406": "Not Acceptable",
            "407": "Proxy Authentication Required",
            "408": "Request Timeout",
            "409": "Conflict",
            "410": "Gone",
            "411": "Length Required",
            "412": "Precondition Failed",
            "413": "Payload Too Large",
            "414": "URI Too Long",
            "415": "Unsupported Media Type",
            "416": "Range Not Satisfiable",
            "417": "Expectation Failed",
            "418": "I'm a Teapot",
            "421": "Misdirected Request",
            "422": "Unprocessable Entity",
            "423": "Locked",
            "424": "Failed Dependency",
            "425": "Too Early",
            "426": "Upgrade Required",
            "428": "Precondition Required",
            "429": "Too Many Requests",
            "431": "Request Header Fields Too Large",
            "451": "Unavailable For Legal Reasons",
            "500": "Internal Server Error",
            "501": "Not Implemented",
            "502": "Bad Gateway",
            "503": "Service Unavailable",
            "504": "Gateway Timeout",
            "505": "HTTP Version Not Supported",
            "506": "Variant Also Negotiates",
            "507": "Insufficient Storage",
            "508": "Loop Detected",
            "509": "Bandwidth Limit Exceeded",
            "510": "Not Extended",
            "511": "Network Authentication Required",
          },
          createServer: [Function: createServer],
          ServerResponse: [Stream: ServerResponse],
          IncomingMessage: [Readable: IncomingMessage],
          request: [Function: request],
          get: [Function: get],
          maxHeaderSize: [Getter/Setter],
          validateHeaderName: [Function],
          validateHeaderValue: [Function],
          setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
          globalAgent: Agent {
            _events: [Object: null prototype] {},
            _eventsCount: 0,
            _maxListeners: undefined,
            [Symbol(kCapture)]: false,
            defaultPort: 80,
            protocol: "http:",
            options: {
              path: null,
              noDelay: true,
            },
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype] {},
            freeSockets: [Object: null prototype] {},
            keepAliveMsecs: 1000,
            keepAlive: false,
            maxSockets: Infinity,
            maxFreeSockets: 256,
            scheduling: "lifo",
            maxTotalSockets: undefined,
            totalSocketCount: 0,
            createConnection: [Function],
            getName: [Function],
            addRequest: [Function],
            createSocket: [Function],
            removeSocket: [Function],
            keepSocketAlive: [Function],
            reuseSocket: [Function],
            destroy: [Function],
            setMaxListeners: [Function: setMaxListeners],
            getMaxListeners: [Function: getMaxListeners],
            emit: [Function: emit],
            addListener: [Function: addListener],
            on: [Function: addListener],
            prependListener: [Function: prependListener],
            once: [Function: once],
            prependOnceListener: [Function: prependOnceListener],
            removeListener: [Function: removeListener],
            off: [Function: removeListener],
            removeAllListeners: [Function: removeAllListeners],
            listeners: [Function: listeners],
            rawListeners: [Function: rawListeners],
            listenerCount: [Function: listenerCount],
            eventNames: [Function: eventNames],
          },
          ClientRequest: [OutgoingMessage: ClientRequest],
          OutgoingMessage: [Stream: OutgoingMessage],
          WebSocket: [class Function extends Function],
          CloseEvent: [class Function extends Function],
          MessageEvent: [class Function extends Function],
        },
        "https:": {
          Agent: [Agent],
          globalAgent: Agent {
            _events: [Object: null prototype] {},
            _eventsCount: 0,
            _maxListeners: undefined,
            [Symbol(kCapture)]: false,
            defaultPort: 443,
            protocol: "https:",
            options: {
              keepAlive: true,
              scheduling: "lifo",
              timeout: 5000,
              path: null,
              noDelay: true,
            },
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype] {},
            freeSockets: [Object: null prototype] {},
            keepAliveMsecs: 1000,
            keepAlive: true,
            maxSockets: Infinity,
            maxFreeSockets: 256,
            scheduling: "lifo",
            maxTotalSockets: undefined,
            totalSocketCount: 0,
            maxCachedSessions: 100,
            createConnection: undefined,
            getName: [Function],
            addRequest: [Function],
            createSocket: [Function],
            removeSocket: [Function],
            keepSocketAlive: [Function],
            reuseSocket: [Function],
            destroy: [Function],
            setMaxListeners: [Function: setMaxListeners],
            getMaxListeners: [Function: getMaxListeners],
            emit: [Function: emit],
            addListener: [Function: addListener],
            on: [Function: addListener],
            prependListener: [Function: prependListener],
            once: [Function: once],
            prependOnceListener: [Function: prependOnceListener],
            removeListener: [Function: removeListener],
            off: [Function: removeListener],
            removeAllListeners: [Function: removeAllListeners],
            listeners: [Function: listeners],
            rawListeners: [Function: rawListeners],
            listenerCount: [Function: listenerCount],
            eventNames: [Function: eventNames],
          },
          Server: [EventEmitter: Server2],
          createServer: [Function: createServer],
          get: [Function: get],
          request: [Function: request],
        },
      },
      pathname: "/aillm/superqwen",
      search: "?ask=buatkan+logo+group+warna+galaxy+dan+nama+group+yeena+%F0%9F%9A%A9&style=Namamu+Kanata+AI,Kamu+adalah+AI+yang+santai,pemarah,+suka+bercanda,+dan+sedikit+egois.+Jawabanmu+humanis,+to+the+point,+dan+pakai+bahasa+gaul.+Kadang+sok+tahu,+kadang+nyeleneh,+tapi+tetep+kasih+info+yang+bener.+Bercanda+boleh,+tapi+jangan+sampai+bikin+orang+males.+Jangan+tambahin+pertanyaan+setelah+jawaban.&sessionId=60105058262%40s.whatsapp.net&model=qwen-max-latest&mode=search",
      href: "https://fastrestapis.fasturl.link/aillm/superqwen?ask=buatkan+logo+group+warna+galaxy+dan+nama+group+yeena+%F0%9F%9A%A9&style=Namamu+Kanata+AI,Kamu+adalah+AI+yang+santai,pemarah,+suka+bercanda,+dan+sedikit+egois.+Jawabanmu+humanis,+to+the+point,+dan+pakai+bahasa+gaul.+Kadang+sok+tahu,+kadang+nyeleneh,+tapi+tetep+kasih+info+yang+bener.+Bercanda+boleh,+tapi+jangan+sampai+bikin+orang+males.+Jangan+tambahin+pertanyaan+setelah+jawaban.&sessionId=60105058262%40s.whatsapp.net&model=qwen-max-latest&mode=search",
      query: undefined,
      hash: "",
      _defaultAgent: Agent {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        [Symbol(kCapture)]: false,
        defaultPort: 443,
        protocol: "https:",
        options: {
          keepAlive: true,
          scheduling: "lifo",
          timeout: 5000,
          path: null,
          noDelay: true,
        },
        requests: [Object: null prototype] {},
        sockets: [Object: null prototype] {},
        freeSockets: [Object: null prototype] {},
        keepAliveMsecs: 1000,
        keepAlive: true,
        maxSockets: Infinity,
        maxFreeSockets: 256,
        scheduling: "lifo",
        maxTotalSockets: undefined,
        totalSocketCount: 0,
        maxCachedSessions: 100,
        createConnection: undefined,
        getName: [Function],
        addRequest: [Function],
        createSocket: [Function],
        removeSocket: [Function],
        keepSocketAlive: [Function],
        reuseSocket: [Function],
        destroy: [Function],
        setMaxListeners: [Function: setMaxListeners],
        getMaxListeners: [Function: getMaxListeners],
        emit: [Function: emit],
        addListener: [Function: addListener],
        on: [Function: addListener],
        prependListener: [Function: prependListener],
        once: [Function: once],
        prependOnceListener: [Function: prependOnceListener],
        removeListener: [Function: removeListener],
        off: [Function: removeListener],
        removeAllListeners: [Function: removeAllListeners],
        listeners: [Function: listeners],
        rawListeners: [Function: rawListeners],
        listenerCount: [Function: listenerCount],
        eventNames: [Function: eventNames],
      },
      host: "fastrestapis.fasturl.link",
    },
    _httpMessage: [Circular],
    [Symbol(emitState)]: 14,
    setSocketKeepAlive: [Function],
    setNoDelay: [Function],
    [Symbol(kClearTimeout)]: [Function],
    _redirectable: Writable {
      _events: {
        close: undefined,
        error: [
          [Function: handleRequestError]
        ],
        prefinish: undefined,
        finish: undefined,
        drain: undefined,
        response: [
          [Function: handleResponse]
        ],
        socket: [
          [Function: handleRequestSocket]
        ],
      },
      _writableState: {
        [Symbol(kState)]: 17580812,
        highWaterMark: 65536,
        length: 0,
        corked: 0,
        onwrite: [Function: onwrite],
        writelen: 0,
        [Symbol(kBufferedValue)]: null,
        bufferedIndex: 0,
        pendingcb: 0,
        objectMode: [Getter/Setter],
        finalCalled: [Getter/Setter],
        needDrain: [Getter/Setter],
        ending: [Getter/Setter],
        ended: [Getter/Setter],
        finished: [Getter/Setter],
        destroyed: [Getter/Setter],
        decodeStrings: [Getter/Setter],
        writing: [Getter/Setter],
        sync: [Getter/Setter],
        bufferProcessing: [Getter/Setter],
        constructed: [Getter/Setter],
        prefinished: [Getter/Setter],
        errorEmitted: [Getter/Setter],
        emitClose: [Getter/Setter],
        autoDestroy: [Getter/Setter],
        closed: [Getter/Setter],
        closeEmitted: [Getter/Setter],
        allBuffers: [Getter/Setter],
        allNoop: [Getter/Setter],
        errored: [Getter/Setter],
        writable: [Getter/Setter],
        defaultEncoding: [Getter/Setter],
        writecb: [Getter/Setter],
        afterWriteTickInfo: [Getter/Setter],
        buffered: [Getter/Setter],
        getBuffer: [Function: getBuffer],
        bufferedRequestCount: [Getter],
        [Symbol(kOnConstructed)]: [Function: onConstructed],
      },
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _options: {
        maxRedirects: 21,
        maxBodyLength: Infinity,
        protocol: "https:",
        path: "/aillm/superqwen?ask=buatkan+logo+group+warna+galaxy+dan+nama+group+yeena+%F0%9F%9A%A9&style=Namamu+Kanata+AI,Kamu+adalah+AI+yang+santai,pemarah,+suka+bercanda,+dan+sedikit+egois.+Jawabanmu+humanis,+to+the+point,+dan+pakai+bahasa+gaul.+Kadang+sok+tahu,+kadang+nyeleneh,+tapi+tetep+kasih+info+yang+bener.+Bercanda+boleh,+tapi+jangan+sampai+bikin+orang+males.+Jangan+tambahin+pertanyaan+setelah+jawaban.&sessionId=60105058262%40s.whatsapp.net&model=qwen-max-latest&mode=search",
        method: "GET",
        headers: [Object: null prototype] {
          Accept: "application/json, text/plain, */*",
          "User-Agent": "axios/1.10.0",
          "Accept-Encoding": "gzip, compress, deflate, br",
        },
        agents: {
          http: undefined,
          https: undefined,
        },
        auth: undefined,
        family: undefined,
        beforeRedirect: [Function: dispatchBeforeRedirect],
        beforeRedirects: {
          proxy: [Function: beforeRedirect],
        },
        hostname: "fastrestapis.fasturl.link",
        port: "",
        agent: undefined,
        nativeProtocols: {
          "http:": {
            Agent: [EventEmitter: Agent],
            Server: [EventEmitter: Server2],
            METHODS: [
              "ACL", "BIND", "CHECKOUT", "CONNECT", "COPY", "DELETE", "GET", "HEAD", "LINK", "LOCK",
              "M-SEARCH", "MERGE", "MKACTIVITY", "MKCALENDAR", "MKCOL", "MOVE", "NOTIFY", "OPTIONS",
              "PATCH", "POST", "PROPFIND", "PROPPATCH", "PURGE", "PUT", "QUERY", "REBIND", "REPORT",
              "SEARCH", "SOURCE", "SUBSCRIBE", "TRACE", "UNBIND", "UNLINK", "UNLOCK", "UNSUBSCRIBE"
            ],
            STATUS_CODES: {
              "100": "Continue",
              "101": "Switching Protocols",
              "102": "Processing",
              "103": "Early Hints",
              "200": "OK",
              "201": "Created",
              "202": "Accepted",
              "203": "Non-Authoritative Information",
              "204": "No Content",
              "205": "Reset Content",
              "206": "Partial Content",
              "207": "Multi-Status",
              "208": "Already Reported",
              "226": "IM Used",
              "300": "Multiple Choices",
              "301": "Moved Permanently",
              "302": "Found",
              "303": "See Other",
              "304": "Not Modified",
              "305": "Use Proxy",
              "307": "Temporary Redirect",
              "308": "Permanent Redirect",
              "400": "Bad Request",
              "401": "Unauthorized",
              "402": "Payment Required",
              "403": "Forbidden",
              "404": "Not Found",
              "405": "Method Not Allowed",
              "406": "Not Acceptable",
              "407": "Proxy Authentication Required",
              "408": "Request Timeout",
              "409": "Conflict",
              "410": "Gone",
              "411": "Length Required",
              "412": "Precondition Failed",
              "413": "Payload Too Large",
              "414": "URI Too Long",
              "415": "Unsupported Media Type",
              "416": "Range Not Satisfiable",
              "417": "Expectation Failed",
              "418": "I'm a Teapot",
              "421": "Misdirected Request",
              "422": "Unprocessable Entity",
              "423": "Locked",
              "424": "Failed Dependency",
              "425": "Too Early",
              "426": "Upgrade Required",
              "428": "Precondition Required",
              "429": "Too Many Requests",
              "431": "Request Header Fields Too Large",
              "451": "Unavailable For Legal Reasons",
              "500": "Internal Server Error",
              "501": "Not Implemented",
              "502": "Bad Gateway",
              "503": "Service Unavailable",
              "504": "Gateway Timeout",
              "505": "HTTP Version Not Supported",
              "506": "Variant Also Negotiates",
              "507": "Insufficient Storage",
              "508": "Loop Detected",
              "509": "Bandwidth Limit Exceeded",
              "510": "Not Extended",
              "511": "Network Authentication Required",
            },
            createServer: [Function: createServer],
            ServerResponse: [Stream: ServerResponse],
            IncomingMessage: [Readable: IncomingMessage],
            request: [Function: request],
            get: [Function: get],
            maxHeaderSize: [Getter/Setter],
            validateHeaderName: [Function],
            validateHeaderValue: [Function],
            setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
            globalAgent: Agent {
              _events: [Object: null prototype] {},
              _eventsCount: 0,
              _maxListeners: undefined,
              [Symbol(kCapture)]: false,
              defaultPort: 80,
              protocol: "http:",
              options: {
                path: null,
                noDelay: true,
              },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: 1000,
              keepAlive: false,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              scheduling: "lifo",
              maxTotalSockets: undefined,
              totalSocketCount: 0,
              createConnection: [Function],
              getName: [Function],
              addRequest: [Function],
              createSocket: [Function],
              removeSocket: [Function],
              keepSocketAlive: [Function],
              reuseSocket: [Function],
              destroy: [Function],
              setMaxListeners: [Function: setMaxListeners],
              getMaxListeners: [Function: getMaxListeners],
              emit: [Function: emit],
              addListener: [Function: addListener],
              on: [Function: addListener],
              prependListener: [Function: prependListener],
              once: [Function: once],
              prependOnceListener: [Function: prependOnceListener],
              removeListener: [Function: removeListener],
              off: [Function: removeListener],
              removeAllListeners: [Function: removeAllListeners],
              listeners: [Function: listeners],
              rawListeners: [Function: rawListeners],
              listenerCount: [Function: listenerCount],
              eventNames: [Function: eventNames],
            },
            ClientRequest: [OutgoingMessage: ClientRequest],
            OutgoingMessage: [Stream: OutgoingMessage],
            WebSocket: [class Function extends Function],
            CloseEvent: [class Function extends Function],
            MessageEvent: [class Function extends Function],
          },
          "https:": {
            Agent: [Agent],
            globalAgent: Agent {
              _events: [Object: null prototype] {},
              _eventsCount: 0,
              _maxListeners: undefined,
              [Symbol(kCapture)]: false,
              defaultPort: 443,
              protocol: "https:",
              options: {
                keepAlive: true,
                scheduling: "lifo",
                timeout: 5000,
                path: null,
                noDelay: true,
              },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: 1000,
              keepAlive: true,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              scheduling: "lifo",
              maxTotalSockets: undefined,
              totalSocketCount: 0,
              maxCachedSessions: 100,
              createConnection: undefined,
              getName: [Function],
              addRequest: [Function],
              createSocket: [Function],
              removeSocket: [Function],
              keepSocketAlive: [Function],
              reuseSocket: [Function],
              destroy: [Function],
              setMaxListeners: [Function: setMaxListeners],
              getMaxListeners: [Function: getMaxListeners],
              emit: [Function: emit],
              addListener: [Function: addListener],
              on: [Function: addListener],
              prependListener: [Function: prependListener],
              once: [Function: once],
              prependOnceListener: [Function: prependOnceListener],
              removeListener: [Function: removeListener],
              off: [Function: removeListener],
              removeAllListeners: [Function: removeAllListeners],
              listeners: [Function: listeners],
              rawListeners: [Function: rawListeners],
              listenerCount: [Function: listenerCount],
              eventNames: [Function: eventNames],
            },
            Server: [EventEmitter: Server2],
            createServer: [Function: createServer],
            get: [Function: get],
            request: [Function: request],
          },
        },
        pathname: "/aillm/superqwen",
        search: "?ask=buatkan+logo+group+warna+galaxy+dan+nama+group+yeena+%F0%9F%9A%A9&style=Namamu+Kanata+AI,Kamu+adalah+AI+yang+santai,pemarah,+suka+bercanda,+dan+sedikit+egois.+Jawabanmu+humanis,+to+the+point,+dan+pakai+bahasa+gaul.+Kadang+sok+tahu,+kadang+nyeleneh,+tapi+tetep+kasih+info+yang+bener.+Bercanda+boleh,+tapi+jangan+sampai+bikin+orang+males.+Jangan+tambahin+pertanyaan+setelah+jawaban.&sessionId=60105058262%40s.whatsapp.net&model=qwen-max-latest&mode=search",
        href: "https://fastrestapis.fasturl.link/aillm/superqwen?ask=buatkan+logo+group+warna+galaxy+dan+nama+group+yeena+%F0%9F%9A%A9&style=Namamu+Kanata+AI,Kamu+adalah+AI+yang+santai,pemarah,+suka+bercanda,+dan+sedikit+egois.+Jawabanmu+humanis,+to+the+point,+dan+pakai+bahasa+gaul.+Kadang+sok+tahu,+kadang+nyeleneh,+tapi+tetep+kasih+info+yang+bener.+Bercanda+boleh,+tapi+jangan+sampai+bikin+orang+males.+Jangan+tambahin+pertanyaan+setelah+jawaban.&sessionId=60105058262%40s.whatsapp.net&model=qwen-max-latest&mode=search",
        query: undefined,
        hash: "",
      },
      _ended: true,
      _ending: true,
      _redirectCount: 1,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: NaN,
      _onNativeResponse: [Function],
      _currentRequest: [Circular],
      _currentUrl: "https://fastrestapis.fasturl.link/aillm/superqwen?ask=buatkan+logo+group+warna+galaxy+dan+nama+group+yeena+%F0%9F%9A%A9&style=Namamu+Kanata+AI,Kamu+adalah+AI+yang+santai,pemarah,+suka+bercanda,+dan+sedikit+egois.+Jawabanmu+humanis,+to+the+point,+dan+pakai+bahasa+gaul.+Kadang+sok+tahu,+kadang+nyeleneh,+tapi+tetep+kasih+info+yang+bener.+Bercanda+boleh,+tapi+jangan+sampai+bikin+orang+males.+Jangan+tambahin+pertanyaan+setelah+jawaban.&sessionId=60105058262%40s.whatsapp.net&model=qwen-max-latest&mode=search",
      _isRedirect: true,
      abort: [Function],
      destroy: [Function],
      write: [Function],
      end: [Function],
      setHeader: [Function],
      removeHeader: [Function],
      setTimeout: [Function],
      flushHeaders: [Function],
      getHeader: [Function],
      setNoDelay: [Function],
      setSocketKeepAlive: [Function],
      aborted: [Getter],
      connection: [Getter],
      socket: [Getter],
      _sanitizeOptions: [Function],
      _performRequest: [Function],
      _processResponse: [Function],
      pipe: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _write: [Function],
      _writev: null,
      closed: [Getter],
      destroyed: [Getter/Setter],
      writable: [Getter/Setter],
      writableFinished: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      writableHighWaterMark: [Getter],
      writableCorked: [Getter],
      writableLength: [Getter],
      errored: [Getter],
      writableAborted: [Getter],
      _undestroy: [Function: undestroy],
      _destroy: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    [Symbol(fetchRequest)]: null,
    [Symbol(fakeSocket)]: Socket {
      _events: {
        close: undefined,
        error: undefined,
        prefinish: undefined,
        finish: undefined,
        drain: undefined,
        data: undefined,
        end: undefined,
        readable: undefined,
      },
      _readableState: {
        [Symbol(kState)]: 1052940,
        highWaterMark: 65536,
        buffer: [],
        bufferIndex: 0,
        length: 0,
        pipes: [],
        awaitDrainWriters: null,
        objectMode: [Getter/Setter],
        ended: [Getter/Setter],
        endEmitted: [Getter/Setter],
        reading: [Getter/Setter],
        constructed: [Getter/Setter],
        sync: [Getter/Setter],
        needReadable: [Getter/Setter],
        emittedReadable: [Getter/Setter],
        readableListening: [Getter/Setter],
        resumeScheduled: [Getter/Setter],
        errorEmitted: [Getter/Setter],
        emitClose: [Getter/Setter],
        autoDestroy: [Getter/Setter],
        destroyed: [Getter/Setter],
        closed: [Getter/Setter],
        closeEmitted: [Getter/Setter],
        multiAwaitDrain: [Getter/Setter],
        readingMore: [Getter/Setter],
        dataEmitted: [Getter/Setter],
        errored: [Getter/Setter],
        defaultEncoding: [Getter/Setter],
        decoder: [Getter/Setter],
        encoding: [Getter/Setter],
        flowing: [Getter/Setter],
        pipesCount: [Getter],
        paused: [Getter/Setter],
        [Symbol(kOnConstructed)]: [Function: onConstructed],
      },
      _writableState: {
        [Symbol(kState)]: 17580812,
        highWaterMark: 65536,
        length: 0,
        corked: 0,
        onwrite: [Function: onwrite],
        writelen: 0,
        [Symbol(kBufferedValue)]: null,
        bufferedIndex: 0,
        pendingcb: 0,
        objectMode: [Getter/Setter],
        finalCalled: [Getter/Setter],
        needDrain: [Getter/Setter],
        ending: [Getter/Setter],
        ended: [Getter/Setter],
        finished: [Getter/Setter],
        destroyed: [Getter/Setter],
        decodeStrings: [Getter/Setter],
        writing: [Getter/Setter],
        sync: [Getter/Setter],
        bufferProcessing: [Getter/Setter],
        constructed: [Getter/Setter],
        prefinished: [Getter/Setter],
        errorEmitted: [Getter/Setter],
        emitClose: [Getter/Setter],
        autoDestroy: [Getter/Setter],
        closed: [Getter/Setter],
        closeEmitted: [Getter/Setter],
        allBuffers: [Getter/Setter],
        allNoop: [Getter/Setter],
        errored: [Getter/Setter],
        writable: [Getter/Setter],
        defaultEncoding: [Getter/Setter],
        writecb: [Getter/Setter],
        afterWriteTickInfo: [Getter/Setter],
        buffered: [Getter/Setter],
        getBuffer: [Function: getBuffer],
        bufferedRequestCount: [Getter],
        [Symbol(kOnConstructed)]: [Function: onConstructed],
      },
      allowHalfOpen: true,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(::bunternal::)]: undefined,
      bytesRead: 0,
      bytesWritten: 0,
      connecting: false,
      timeout: 0,
      isServer: false,
      _httpMessage: [Circular],
      _onTimeout: [Function],
      address: [Function: address],
      bufferSize: [Getter],
      connect: [Function: connect],
      _destroy: [Function: _destroy],
      _final: [Function: _final],
      localAddress: [Getter],
      localFamily: [Getter],
      localPort: [Getter],
      pending: [Getter],
      _read: [Function: _read],
      readyState: [Getter],
      ref: [Function: ref],
      remoteAddress: [Getter/Setter],
      remotePort: [Getter/Setter],
      remoteFamily: [Getter/Setter],
      resetAndDestroy: [Function: resetAndDestroy],
      setKeepAlive: [Function: setKeepAlive],
      setNoDelay: [Function: setNoDelay],
      setTimeout: [Function: setTimeout],
      unref: [Function: unref],
      _write: [Function: _write],
      destroy: [Function: destroy],
      write: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _writev: null,
      end: [Function],
      writable: [Getter/Setter],
      writableHighWaterMark: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableLength: [Getter],
      writableFinished: [Getter],
      writableCorked: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      destroyed: [Getter/Setter],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
    },
    res: IncomingMessage {
      [Symbol(aborted)]: false,
      [Symbol(eofInProgress)]: true,
      _consuming: true,
      _dumped: false,
      complete: true,
      _closed: false,
      [Symbol(noBody)]: false,
      _events: {
        error: [
          [Function: handleStreamError]
        ],
        data: [
          [Function: handleStreamData]
        ],
        end: [
          [Function: handleStreamEnd]
        ],
        readable: undefined,
        aborted: [
          [Function: handlerStreamAborted]
        ],
      },
      _readableState: {
        [Symbol(kState)]: 194512764,
        highWaterMark: 65536,
        buffer: [],
        bufferIndex: 0,
        length: 0,
        pipes: [],
        awaitDrainWriters: null,
        objectMode: [Getter/Setter],
        ended: [Getter/Setter],
        endEmitted: [Getter/Setter],
        reading: [Getter/Setter],
        constructed: [Getter/Setter],
        sync: [Getter/Setter],
        needReadable: [Getter/Setter],
        emittedReadable: [Getter/Setter],
        readableListening: [Getter/Setter],
        resumeScheduled: [Getter/Setter],
        errorEmitted: [Getter/Setter],
        emitClose: [Getter/Setter],
        autoDestroy: [Getter/Setter],
        destroyed: [Getter/Setter],
        closed: [Getter/Setter],
        closeEmitted: [Getter/Setter],
        multiAwaitDrain: [Getter/Setter],
        readingMore: [Getter/Setter],
        dataEmitted: [Getter/Setter],
        errored: [Getter/Setter],
        defaultEncoding: [Getter/Setter],
        decoder: [Getter/Setter],
        encoding: [Getter/Setter],
        flowing: [Getter/Setter],
        pipesCount: [Getter],
        paused: [Getter/Setter],
        [Symbol(kOnConstructed)]: [Function: onConstructed],
      },
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _eventsCount: NaN,
      [Symbol(FetchAPI)]: Response (0 KB) {
        ok: false,
        url: "https://fastrestapis.fasturl.link/aillm/superqwen?ask=buatkan+logo+group+warna+galaxy+dan+nama+group+yeena+%F0%9F%9A%A9&style=Namamu+Kanata+AI,Kamu+adalah+AI+yang+santai,pemarah,+suka+bercanda,+dan+sedikit+egois.+Jawabanmu+humanis,+to+the+point,+dan+pakai+bahasa+gaul.+Kadang+sok+tahu,+kadang+nyeleneh,+tapi+tetep+kasih+info+yang+bener.+Bercanda+boleh,+tapi+jangan+sampai+bikin+orang+males.+Jangan+tambahin+pertanyaan+setelah+jawaban.&sessionId=60105058262%40s.whatsapp.net&model=qwen-max-latest&mode=search",
        status: 502,
        statusText: "Bad Gateway",
        headers: Headers {
          "date": "Sat, 28 Jun 2025 11:36:07 GMT",
          "content-type": "text/html; charset=UTF-8",
          "content-length": "6460",
          "connection": "keep-alive",
          "cache-control": "private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
          "expires": "Thu, 01 Jan 1970 00:00:01 GMT",
          "referrer-policy": "same-origin",
          "x-frame-options": "SAMEORIGIN",
          "server": "cloudflare",
          "cf-ray": "956ce27178a103f8-FRA",
        },
        redirected: false,
        bodyUsed: true
      },
      [Symbol(type)]: 1,
      [Symbol(bodyStream)]: undefined,
      [Symbol(statusMessage)]: "Bad Gateway",
      [Symbol(statusCode)]: 502,
      url: "/aillm/superqwen?ask=buatkan+logo+group+warna+galaxy+dan+nama+group+yeena+%F0%9F%9A%A9&style=Namamu+Kanata+AI,Kamu+adalah+AI+yang+santai,pemarah,+suka+bercanda,+dan+sedikit+egois.+Jawabanmu+humanis,+to+the+point,+dan+pakai+bahasa+gaul.+Kadang+sok+tahu,+kadang+nyeleneh,+tapi+tetep+kasih+info+yang+bener.+Bercanda+boleh,+tapi+jangan+sampai+bikin+orang+males.+Jangan+tambahin+pertanyaan+setelah+jawaban.&sessionId=60105058262%40s.whatsapp.net&model=qwen-max-latest&mode=search",
      headers: {
        date: "Sat, 28 Jun 2025 11:36:07 GMT",
        "content-type": "text/html; charset=UTF-8",
        "content-length": "6460",
        connection: "keep-alive",
        "cache-control": "private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
        expires: "Thu, 01 Jan 1970 00:00:01 GMT",
        "referrer-policy": "same-origin",
        "x-frame-options": "SAMEORIGIN",
        server: "cloudflare",
        "cf-ray": "956ce27178a103f8-FRA",
      },
      rawHeaders: [
        "date", "Sat, 28 Jun 2025 11:36:07 GMT", "content-type", "text/html; charset=UTF-8",
        "content-length", "6460", "connection", "keep-alive", "cache-control", "private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
        "expires", "Thu, 01 Jan 1970 00:00:01 GMT", "referrer-policy", "same-origin", "x-frame-options",
        "SAMEORIGIN", "Server", "cloudflare", "CF-RAY", "956ce27178a103f8-FRA"
      ],
      [Symbol(fakeSocket)]: Socket {
        _events: {
          close: undefined,
          error: undefined,
          prefinish: undefined,
          finish: undefined,
          drain: undefined,
          data: undefined,
          end: undefined,
          readable: undefined,
        },
        _readableState: {
          [Symbol(kState)]: 59779340,
          highWaterMark: 65536,
          buffer: [],
          bufferIndex: 0,
          length: 0,
          pipes: [],
          awaitDrainWriters: null,
          objectMode: [Getter/Setter],
          ended: [Getter/Setter],
          endEmitted: [Getter/Setter],
          reading: [Getter/Setter],
          constructed: [Getter/Setter],
          sync: [Getter/Setter],
          needReadable: [Getter/Setter],
          emittedReadable: [Getter/Setter],
          readableListening: [Getter/Setter],
          resumeScheduled: [Getter/Setter],
          errorEmitted: [Getter/Setter],
          emitClose: [Getter/Setter],
          autoDestroy: [Getter/Setter],
          destroyed: [Getter/Setter],
          closed: [Getter/Setter],
          closeEmitted: [Getter/Setter],
          multiAwaitDrain: [Getter/Setter],
          readingMore: [Getter/Setter],
          dataEmitted: [Getter/Setter],
          errored: [Getter/Setter],
          defaultEncoding: [Getter/Setter],
          decoder: [Getter/Setter],
          encoding: [Getter/Setter],
          flowing: [Getter/Setter],
          pipesCount: [Getter],
          paused: [Getter/Setter],
          [Symbol(kOnConstructed)]: [Function: onConstructed],
        },
        _writableState: {
          [Symbol(kState)]: 17580812,
          highWaterMark: 65536,
          length: 0,
          corked: 0,
          onwrite: [Function: onwrite],
          writelen: 0,
          [Symbol(kBufferedValue)]: null,
          bufferedIndex: 0,
          pendingcb: 0,
          objectMode: [Getter/Setter],
          finalCalled: [Getter/Setter],
          needDrain: [Getter/Setter],
          ending: [Getter/Setter],
          ended: [Getter/Setter],
          finished: [Getter/Setter],
          destroyed: [Getter/Setter],
          decodeStrings: [Getter/Setter],
          writing: [Getter/Setter],
          sync: [Getter/Setter],
          bufferProcessing: [Getter/Setter],
          constructed: [Getter/Setter],
          prefinished: [Getter/Setter],
          errorEmitted: [Getter/Setter],
          emitClose: [Getter/Setter],
          autoDestroy: [Getter/Setter],
          closed: [Getter/Setter],
          closeEmitted: [Getter/Setter],
          allBuffers: [Getter/Setter],
          allNoop: [Getter/Setter],
          errored: [Getter/Setter],
          writable: [Getter/Setter],
          defaultEncoding: [Getter/Setter],
          writecb: [Getter/Setter],
          afterWriteTickInfo: [Getter/Setter],
          buffered: [Getter/Setter],
          getBuffer: [Function: getBuffer],
          bufferedRequestCount: [Getter],
          [Symbol(kOnConstructed)]: [Function: onConstructed],
        },
        allowHalfOpen: true,
        _maxListeners: undefined,
        [Symbol(kCapture)]: false,
        [Symbol(::bunternal::)]: undefined,
        bytesRead: 0,
        bytesWritten: 0,
        connecting: false,
        timeout: 0,
        isServer: false,
        _httpMessage: [Circular],
        _onTimeout: [Function],
        encrypted: true,
        address: [Function: address],
        bufferSize: [Getter],
        connect: [Function: connect],
        _destroy: [Function: _destroy],
        _final: [Function: _final],
        localAddress: [Getter],
        localFamily: [Getter],
        localPort: [Getter],
        pending: [Getter],
        _read: [Function: _read],
        readyState: [Getter],
        ref: [Function: ref],
        remoteAddress: [Getter/Setter],
        remotePort: [Getter/Setter],
        remoteFamily: [Getter/Setter],
        resetAndDestroy: [Function: resetAndDestroy],
        setKeepAlive: [Function: setKeepAlive],
        setNoDelay: [Function: setNoDelay],
        setTimeout: [Function: setTimeout],
        unref: [Function: unref],
        _write: [Function: _write],
        destroy: [Function: destroy],
        write: [Function],
        cork: [Function],
        uncork: [Function],
        setDefaultEncoding: [Function: setDefaultEncoding],
        _writev: null,
        end: [Function],
        writable: [Getter/Setter],
        writableHighWaterMark: [Getter],
        writableObjectMode: [Getter],
        writableBuffer: [Getter],
        writableLength: [Getter],
        writableFinished: [Getter],
        writableCorked: [Getter],
        writableEnded: [Getter],
        writableNeedDrain: [Getter],
        destroyed: [Getter/Setter],
        _undestroy: [Function: undestroy],
        push: [Function],
        unshift: [Function],
        isPaused: [Function],
        setEncoding: [Function],
        read: [Function],
        pipe: [Function],
        unpipe: [Function],
        on: [Function],
        addListener: [Function],
        removeListener: [Function],
        off: [Function],
        removeAllListeners: [Function],
        resume: [Function],
        pause: [Function],
        wrap: [Function],
        iterator: [Function],
        readable: [Getter/Setter],
        readableDidRead: [Getter],
        readableAborted: [Getter],
        readableHighWaterMark: [Getter],
        readableBuffer: [Getter],
        readableFlowing: [Getter/Setter],
        readableLength: [Getter],
        readableObjectMode: [Getter],
        readableEncoding: [Getter],
        errored: [Getter],
        closed: [Getter],
        readableEnded: [Getter],
        drop: [Function],
        filter: [Function],
        flatMap: [Function],
        map: [Function],
        take: [Function],
        compose: [Function],
        every: [Function],
        forEach: [Function],
        reduce: [Function],
        toArray: [Function],
        some: [Function],
        find: [Function],
        [Symbol(nodejs.rejection)]: [Function],
        [Symbol(Symbol.asyncDispose)]: [Function],
        [Symbol(Symbol.asyncIterator)]: [Function],
        eventNames: [Function: eventNames],
      },
      req: [Circular],
      setTimeout: [Function],
      responseUrl: "https://fastrestapis.fasturl.link/aillm/superqwen?ask=buatkan+logo+group+warna+galaxy+dan+nama+group+yeena+%F0%9F%9A%A9&style=Namamu+Kanata+AI,Kamu+adalah+AI+yang+santai,pemarah,+suka+bercanda,+dan+sedikit+egois.+Jawabanmu+humanis,+to+the+point,+dan+pakai+bahasa+gaul.+Kadang+sok+tahu,+kadang+nyeleneh,+tapi+tetep+kasih+info+yang+bener.+Bercanda+boleh,+tapi+jangan+sampai+bikin+orang+males.+Jangan+tambahin+pertanyaan+setelah+jawaban.&sessionId=60105058262%40s.whatsapp.net&model=qwen-max-latest&mode=search",
      redirects: [],
      [Symbol(kAutoDestroyed)]: true,
      httpVersion: "1.1",
      _construct: [Function: _construct],
      _dump: [Function: _dump],
      _read: [Function: _read],
      _finish: [Function: _finish],
      _destroy: [Function: IncomingMessage_destroy],
      aborted: [Getter/Setter],
      connection: [Getter],
      statusCode: [Getter/Setter],
      statusMessage: [Getter/Setter],
      httpVersionMajor: [Getter/Setter],
      httpVersionMinor: [Getter/Setter],
      rawTrailers: [Getter/Setter],
      trailers: [Getter/Setter],
      socket: [Getter/Setter],
      destroy: [Function: destroy],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      destroyed: [Getter/Setter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    _closed: true,
    complete: true,
    setTimeout: [Function: setTimeout],
    clearTimeout: [Function: clearTimeout],
    path: [Getter],
    port: [Getter],
    method: [Getter],
    host: [Getter],
    protocol: [Getter],
    agent: [Getter/Setter],
    aborted: [Getter/Setter],
    writable: [Getter],
    _keepAliveTimeout: 0,
    _defaultKeepAlive: true,
    shouldKeepAlive: true,
    _onPendingData: [Function: nop2],
    outputSize: 0,
    outputData: [],
    strictContentLength: false,
    _removedTE: false,
    _removedContLen: false,
    _removedConnection: false,
    usesChunkedEncodingByDefault: true,
    _headerNames: [Getter/Setter],
    appendHeader: [Function: appendHeader],
    _implicitHeader: [Function: _implicitHeader],
    getHeader: [Function: getHeader],
    pipe: [Function: pipe],
    getHeaderNames: [Function: getHeaderNames],
    getRawHeaderNames: [Function: getRawHeaderNames],
    getHeaders: [Function: getHeaders],
    removeHeader: [Function: removeHeader],
    setHeader: [Function: setHeader],
    setHeaders: [Function: setHeaders],
    hasHeader: [Function: hasHeader],
    headers: [Getter/Setter],
    addTrailers: [Function: addTrailers],
    connection: [Getter/Setter],
    socket: [Getter/Setter],
    chunkedEncoding: [Getter/Setter],
    writableObjectMode: [Getter],
    writableLength: [Getter],
    writableHighWaterMark: [Getter],
    writableNeedDrain: [Getter],
    writableEnded: [Getter],
    writableFinished: [Getter],
    _send: [Function: _send],
    _writeRaw: [Function: _writeRaw],
    writableCorked: [Getter/Setter],
    cork: [Function: cork],
    uncork: [Function: uncork],
    _headers: [Getter/Setter],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
    [Symbol(kCapture)]: false,
  },
  response: {
    status: 502,
    statusText: "Bad Gateway",
    headers: {
      date: "Sat, 28 Jun 2025 11:36:07 GMT",
      "content-type": "text/html; charset=UTF-8",
      "content-length": "6460",
      connection: "keep-alive",
      "cache-control": "private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
      expires: "Thu, 01 Jan 1970 00:00:01 GMT",
      "referrer-policy": "same-origin",
      "x-frame-options": "SAMEORIGIN",
      server: "cloudflare",
      "cf-ray": "956ce27178a103f8-FRA",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    config: {
      transitional: {
        silentJSONParsing: true,
        forcedJSONParsing: true,
        clarifyTimeoutError: false,
      },
      adapter: [ "xhr", "http", "fetch" ],
      transformRequest: [
        [Function: transformRequest]
      ],
      transformResponse: [
        [Function: transformResponse]
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: {
        FormData: [Function: FormData],
        Blob: [class Blob],
      },
      validateStatus: [Function: validateStatus],
      headers: {
        Accept: "application/json, text/plain, */*",
        "Content-Type": undefined,
        "User-Agent": "axios/1.10.0",
        "Accept-Encoding": "gzip, compress, deflate, br",
        set: [Getter/Setter],
        get: [Getter/Setter],
        has: [Getter/Setter],
        delete: [Getter/Setter],
        clear: [Getter/Setter],
        normalize: [Getter/Setter],
        concat: [Getter/Setter],
        toJSON: [Getter/Setter],
        toString: [Getter/Setter],
        getSetCookie: [Getter/Setter],
        getContentType: [Getter/Setter],
        setContentType: [Getter/Setter],
        hasContentType: [Getter/Setter],
        getContentLength: [Getter/Setter],
        setContentLength: [Getter/Setter],
        hasContentLength: [Getter/Setter],
        getAccept: [Getter/Setter],
        setAccept: [Getter/Setter],
        hasAccept: [Getter/Setter],
        getAcceptEncoding: [Getter/Setter],
        setAcceptEncoding: [Getter/Setter],
        hasAcceptEncoding: [Getter/Setter],
        getUserAgent: [Getter/Setter],
        setUserAgent: [Getter/Setter],
        hasUserAgent: [Getter/Setter],
        getAuthorization: [Getter/Setter],
        setAuthorization: [Getter/Setter],
        hasAuthorization: [Getter/Setter],
        [Symbol(Symbol.iterator)]: [Function],
      },
      baseURL: "https://fastrestapis.fasturl.cloud/",
      params: {
        ask: "buatkan logo group warna galaxy dan nama group yeena 🚩",
        style: "Namamu Kanata AI,Kamu adalah AI yang santai,pemarah, suka bercanda, dan sedikit egois. Jawabanmu humanis, to the point, dan pakai bahasa gaul. Kadang sok tahu, kadang nyeleneh, tapi tetep kasih info yang bener. Bercanda boleh, tapi jangan sampai bikin orang males. Jangan tambahin pertanyaan setelah jawaban.",
        sessionId: "60105058262@s.whatsapp.net",
        model: "qwen-max-latest",
        mode: "search",
      },
      method: "get",
      url: "aillm/superqwen",
      allowAbsoluteUrls: true,
      data: undefined,
    },
    request: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: AbortController {
        signal: AbortSignal {
          aborted: false,
          reason: undefined,
          onabort: null,
          throwIfAborted: [Function: throwIfAborted],
          addEventListener: [Function: addEventListener],
          removeEventListener: [Function: removeEventListener],
          dispatchEvent: [Function: dispatchEvent],
        },
        abort: [Function: abort],
      },
      [Symbol(agent)]: Agent {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        [Symbol(kCapture)]: false,
        defaultPort: 443,
        protocol: "https:",
        options: {
          keepAlive: true,
          scheduling: "lifo",
          timeout: 5000,
          path: null,
          noDelay: true,
        },
        requests: [Object: null prototype] {},
        sockets: [Object: null prototype] {},
        freeSockets: [Object: null prototype] {},
        keepAliveMsecs: 1000,
        keepAlive: true,
        maxSockets: Infinity,
        maxFreeSockets: 256,
        scheduling: "lifo",
        maxTotalSockets: undefined,
        totalSocketCount: 0,
        maxCachedSessions: 100,
        createConnection: undefined,
        getName: [Function],
        addRequest: [Function],
        createSocket: [Function],
        removeSocket: [Function],
        keepSocketAlive: [Function],
        reuseSocket: [Function],
        destroy: [Function],
        setMaxListeners: [Function: setMaxListeners],
        getMaxListeners: [Function: getMaxListeners],
        emit: [Function: emit],
        addListener: [Function: addListener],
        on: [Function: addListener],
        prependListener: [Function: prependListener],
        once: [Function: once],
        prependOnceListener: [Function: prependOnceListener],
        removeListener: [Function: removeListener],
        off: [Function: removeListener],
        removeAllListeners: [Function: removeAllListeners],
        listeners: [Function: listeners],
        rawListeners: [Function: rawListeners],
        listenerCount: [Function: listenerCount],
        eventNames: [Function: eventNames],
      },
      destroyed: false,
      [Symbol(protocol)]: "https:",
      [Symbol(port)]: 443,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "fastrestapis.fasturl.link",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "GET",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/aillm/superqwen?ask=buatkan+logo+group+warna+galaxy+dan+nama+group+yeena+%F0%9F%9A%A9&style=Namamu+Kanata+AI,Kamu+adalah+AI+yang+santai,pemarah,+suka+bercanda,+dan+sedikit+egois.+Jawabanmu+humanis,+to+the+point,+dan+pakai+bahasa+gaul.+Kadang+sok+tahu,+kadang+nyeleneh,+tapi+tetep+kasih+info+yang+bener.+Bercanda+boleh,+tapi+jangan+sampai+bikin+orang+males.+Jangan+tambahin+pertanyaan+setelah+jawaban.&sessionId=60105058262%40s.whatsapp.net&model=qwen-max-latest&mode=search",
      _events: [Object: null prototype] {
        abort: [
          [Function]
        ],
        aborted: [
          [Function]
        ],
        connect: [
          [Function]
        ],
        error: [
          [Function]
        ],
        socket: [
          [Function]
        ],
        timeout: [
          [Function]
        ],
      },
      _eventsCount: 6,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers {
        "accept": "application/json, text/plain, */*",
        "user-agent": "axios/1.10.0",
        "accept-encoding": "gzip, compress, deflate, br",
      },
      [Symbol(options)]: {
        maxRedirects: 21,
        maxBodyLength: Infinity,
        protocol: "https:",
        path: "/aillm/superqwen?ask=buatkan+logo+group+warna+galaxy+dan+nama+group+yeena+%F0%9F%9A%A9&style=Namamu+Kanata+AI,Kamu+adalah+AI+yang+santai,pemarah,+suka+bercanda,+dan+sedikit+egois.+Jawabanmu+humanis,+to+the+point,+dan+pakai+bahasa+gaul.+Kadang+sok+tahu,+kadang+nyeleneh,+tapi+tetep+kasih+info+yang+bener.+Bercanda+boleh,+tapi+jangan+sampai+bikin+orang+males.+Jangan+tambahin+pertanyaan+setelah+jawaban.&sessionId=60105058262%40s.whatsapp.net&model=qwen-max-latest&mode=search",
        method: "GET",
        headers: [Object: null prototype] {
          Accept: "application/json, text/plain, */*",
          "User-Agent": "axios/1.10.0",
          "Accept-Encoding": "gzip, compress, deflate, br",
        },
        agents: {
          http: undefined,
          https: undefined,
        },
        auth: undefined,
        family: undefined,
        beforeRedirect: [Function: dispatchBeforeRedirect],
        beforeRedirects: {
          proxy: [Function: beforeRedirect],
        },
        hostname: "fastrestapis.fasturl.link",
        port: "",
        agent: undefined,
        nativeProtocols: {
          "http:": {
            Agent: [EventEmitter: Agent],
            Server: [EventEmitter: Server2],
            METHODS: [
              "ACL", "BIND", "CHECKOUT", "CONNECT", "COPY", "DELETE", "GET", "HEAD", "LINK", "LOCK",
              "M-SEARCH", "MERGE", "MKACTIVITY", "MKCALENDAR", "MKCOL", "MOVE", "NOTIFY", "OPTIONS",
              "PATCH", "POST", "PROPFIND", "PROPPATCH", "PURGE", "PUT", "QUERY", "REBIND", "REPORT",
              "SEARCH", "SOURCE", "SUBSCRIBE", "TRACE", "UNBIND", "UNLINK", "UNLOCK", "UNSUBSCRIBE"
            ],
            STATUS_CODES: {
              "100": "Continue",
              "101": "Switching Protocols",
              "102": "Processing",
              "103": "Early Hints",
              "200": "OK",
              "201": "Created",
              "202": "Accepted",
              "203": "Non-Authoritative Information",
              "204": "No Content",
              "205": "Reset Content",
              "206": "Partial Content",
              "207": "Multi-Status",
              "208": "Already Reported",
              "226": "IM Used",
              "300": "Multiple Choices",
              "301": "Moved Permanently",
              "302": "Found",
              "303": "See Other",
              "304": "Not Modified",
              "305": "Use Proxy",
              "307": "Temporary Redirect",
              "308": "Permanent Redirect",
              "400": "Bad Request",
              "401": "Unauthorized",
              "402": "Payment Required",
              "403": "Forbidden",
              "404": "Not Found",
              "405": "Method Not Allowed",
              "406": "Not Acceptable",
              "407": "Proxy Authentication Required",
              "408": "Request Timeout",
              "409": "Conflict",
              "410": "Gone",
              "411": "Length Required",
              "412": "Precondition Failed",
              "413": "Payload Too Large",
              "414": "URI Too Long",
              "415": "Unsupported Media Type",
              "416": "Range Not Satisfiable",
              "417": "Expectation Failed",
              "418": "I'm a Teapot",
              "421": "Misdirected Request",
              "422": "Unprocessable Entity",
              "423": "Locked",
              "424": "Failed Dependency",
              "425": "Too Early",
              "426": "Upgrade Required",
              "428": "Precondition Required",
              "429": "Too Many Requests",
              "431": "Request Header Fields Too Large",
              "451": "Unavailable For Legal Reasons",
              "500": "Internal Server Error",
              "501": "Not Implemented",
              "502": "Bad Gateway",
              "503": "Service Unavailable",
              "504": "Gateway Timeout",
              "505": "HTTP Version Not Supported",
              "506": "Variant Also Negotiates",
              "507": "Insufficient Storage",
              "508": "Loop Detected",
              "509": "Bandwidth Limit Exceeded",
              "510": "Not Extended",
              "511": "Network Authentication Required",
            },
            createServer: [Function: createServer],
            ServerResponse: [Stream: ServerResponse],
            IncomingMessage: [Readable: IncomingMessage],
            request: [Function: request],
            get: [Function: get],
            maxHeaderSize: [Getter/Setter],
            validateHeaderName: [Function],
            validateHeaderValue: [Function],
            setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
            globalAgent: Agent {
              _events: [Object: null prototype] {},
              _eventsCount: 0,
              _maxListeners: undefined,
              [Symbol(kCapture)]: false,
              defaultPort: 80,
              protocol: "http:",
              options: {
                path: null,
                noDelay: true,
              },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: 1000,
              keepAlive: false,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              scheduling: "lifo",
              maxTotalSockets: undefined,
              totalSocketCount: 0,
              createConnection: [Function],
              getName: [Function],
              addRequest: [Function],
              createSocket: [Function],
              removeSocket: [Function],
              keepSocketAlive: [Function],
              reuseSocket: [Function],
              destroy: [Function],
              setMaxListeners: [Function: setMaxListeners],
              getMaxListeners: [Function: getMaxListeners],
              emit: [Function: emit],
              addListener: [Function: addListener],
              on: [Function: addListener],
              prependListener: [Function: prependListener],
              once: [Function: once],
              prependOnceListener: [Function: prependOnceListener],
              removeListener: [Function: removeListener],
              off: [Function: removeListener],
              removeAllListeners: [Function: removeAllListeners],
              listeners: [Function: listeners],
              rawListeners: [Function: rawListeners],
              listenerCount: [Function: listenerCount],
              eventNames: [Function: eventNames],
            },
            ClientRequest: [OutgoingMessage: ClientRequest],
            OutgoingMessage: [Stream: OutgoingMessage],
            WebSocket: [class Function extends Function],
            CloseEvent: [class Function extends Function],
            MessageEvent: [class Function extends Function],
          },
          "https:": {
            Agent: [Agent],
            globalAgent: Agent {
              _events: [Object: null prototype] {},
              _eventsCount: 0,
              _maxListeners: undefined,
              [Symbol(kCapture)]: false,
              defaultPort: 443,
              protocol: "https:",
              options: {
                keepAlive: true,
                scheduling: "lifo",
                timeout: 5000,
                path: null,
                noDelay: true,
              },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: 1000,
              keepAlive: true,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              scheduling: "lifo",
              maxTotalSockets: undefined,
              totalSocketCount: 0,
              maxCachedSessions: 100,
              createConnection: undefined,
              getName: [Function],
              addRequest: [Function],
              createSocket: [Function],
              removeSocket: [Function],
              keepSocketAlive: [Function],
              reuseSocket: [Function],
              destroy: [Function],
              setMaxListeners: [Function: setMaxListeners],
              getMaxListeners: [Function: getMaxListeners],
              emit: [Function: emit],
              addListener: [Function: addListener],
              on: [Function: addListener],
              prependListener: [Function: prependListener],
              once: [Function: once],
              prependOnceListener: [Function: prependOnceListener],
              removeListener: [Function: removeListener],
              off: [Function: removeListener],
              removeAllListeners: [Function: removeAllListeners],
              listeners: [Function: listeners],
              rawListeners: [Function: rawListeners],
              listenerCount: [Function: listenerCount],
              eventNames: [Function: eventNames],
            },
            Server: [EventEmitter: Server2],
            createServer: [Function: createServer],
            get: [Function: get],
            request: [Function: request],
          },
        },
        pathname: "/aillm/superqwen",
        search: "?ask=buatkan+logo+group+warna+galaxy+dan+nama+group+yeena+%F0%9F%9A%A9&style=Namamu+Kanata+AI,Kamu+adalah+AI+yang+santai,pemarah,+suka+bercanda,+dan+sedikit+egois.+Jawabanmu+humanis,+to+the+point,+dan+pakai+bahasa+gaul.+Kadang+sok+tahu,+kadang+nyeleneh,+tapi+tetep+kasih+info+yang+bener.+Bercanda+boleh,+tapi+jangan+sampai+bikin+orang+males.+Jangan+tambahin+pertanyaan+setelah+jawaban.&sessionId=60105058262%40s.whatsapp.net&model=qwen-max-latest&mode=search",
        href: "https://fastrestapis.fasturl.link/aillm/superqwen?ask=buatkan+logo+group+warna+galaxy+dan+nama+group+yeena+%F0%9F%9A%A9&style=Namamu+Kanata+AI,Kamu+adalah+AI+yang+santai,pemarah,+suka+bercanda,+dan+sedikit+egois.+Jawabanmu+humanis,+to+the+point,+dan+pakai+bahasa+gaul.+Kadang+sok+tahu,+kadang+nyeleneh,+tapi+tetep+kasih+info+yang+bener.+Bercanda+boleh,+tapi+jangan+sampai+bikin+orang+males.+Jangan+tambahin+pertanyaan+setelah+jawaban.&sessionId=60105058262%40s.whatsapp.net&model=qwen-max-latest&mode=search",
        query: undefined,
        hash: "",
        _defaultAgent: Agent {
          _events: [Object: null prototype] {},
          _eventsCount: 0,
          _maxListeners: undefined,
          [Symbol(kCapture)]: false,
          defaultPort: 443,
          protocol: "https:",
          options: {
            keepAlive: true,
            scheduling: "lifo",
            timeout: 5000,
            path: null,
            noDelay: true,
          },
          requests: [Object: null prototype] {},
          sockets: [Object: null prototype] {},
          freeSockets: [Object: null prototype] {},
          keepAliveMsecs: 1000,
          keepAlive: true,
          maxSockets: Infinity,
          maxFreeSockets: 256,
          scheduling: "lifo",
          maxTotalSockets: undefined,
          totalSocketCount: 0,
          maxCachedSessions: 100,
          createConnection: undefined,
          getName: [Function],
          addRequest: [Function],
          createSocket: [Function],
          removeSocket: [Function],
          keepSocketAlive: [Function],
          reuseSocket: [Function],
          destroy: [Function],
          setMaxListeners: [Function: setMaxListeners],
          getMaxListeners: [Function: getMaxListeners],
          emit: [Function: emit],
          addListener: [Function: addListener],
          on: [Function: addListener],
          prependListener: [Function: prependListener],
          once: [Function: once],
          prependOnceListener: [Function: prependOnceListener],
          removeListener: [Function: removeListener],
          off: [Function: removeListener],
          removeAllListeners: [Function: removeAllListeners],
          listeners: [Function: listeners],
          rawListeners: [Function: rawListeners],
          listenerCount: [Function: listenerCount],
          eventNames: [Function: eventNames],
        },
        host: "fastrestapis.fasturl.link",
      },
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: Writable {
        _events: {
          close: undefined,
          error: [
            [Function: handleRequestError]
          ],
          prefinish: undefined,
          finish: undefined,
          drain: undefined,
          response: [
            [Function: handleResponse]
          ],
          socket: [
            [Function: handleRequestSocket]
          ],
        },
        _writableState: {
          [Symbol(kState)]: 17580812,
          highWaterMark: 65536,
          length: 0,
          corked: 0,
          onwrite: [Function: onwrite],
          writelen: 0,
          [Symbol(kBufferedValue)]: null,
          bufferedIndex: 0,
          pendingcb: 0,
          objectMode: [Getter/Setter],
          finalCalled: [Getter/Setter],
          needDrain: [Getter/Setter],
          ending: [Getter/Setter],
          ended: [Getter/Setter],
          finished: [Getter/Setter],
          destroyed: [Getter/Setter],
          decodeStrings: [Getter/Setter],
          writing: [Getter/Setter],
          sync: [Getter/Setter],
          bufferProcessing: [Getter/Setter],
          constructed: [Getter/Setter],
          prefinished: [Getter/Setter],
          errorEmitted: [Getter/Setter],
          emitClose: [Getter/Setter],
          autoDestroy: [Getter/Setter],
          closed: [Getter/Setter],
          closeEmitted: [Getter/Setter],
          allBuffers: [Getter/Setter],
          allNoop: [Getter/Setter],
          errored: [Getter/Setter],
          writable: [Getter/Setter],
          defaultEncoding: [Getter/Setter],
          writecb: [Getter/Setter],
          afterWriteTickInfo: [Getter/Setter],
          buffered: [Getter/Setter],
          getBuffer: [Function: getBuffer],
          bufferedRequestCount: [Getter],
          [Symbol(kOnConstructed)]: [Function: onConstructed],
        },
        _maxListeners: undefined,
        [Symbol(kCapture)]: false,
        _options: {
          maxRedirects: 21,
          maxBodyLength: Infinity,
          protocol: "https:",
          path: "/aillm/superqwen?ask=buatkan+logo+group+warna+galaxy+dan+nama+group+yeena+%F0%9F%9A%A9&style=Namamu+Kanata+AI,Kamu+adalah+AI+yang+santai,pemarah,+suka+bercanda,+dan+sedikit+egois.+Jawabanmu+humanis,+to+the+point,+dan+pakai+bahasa+gaul.+Kadang+sok+tahu,+kadang+nyeleneh,+tapi+tetep+kasih+info+yang+bener.+Bercanda+boleh,+tapi+jangan+sampai+bikin+orang+males.+Jangan+tambahin+pertanyaan+setelah+jawaban.&sessionId=60105058262%40s.whatsapp.net&model=qwen-max-latest&mode=search",
          method: "GET",
          headers: [Object: null prototype] {
            Accept: "application/json, text/plain, */*",
            "User-Agent": "axios/1.10.0",
            "Accept-Encoding": "gzip, compress, deflate, br",
          },
          agents: {
            http: undefined,
            https: undefined,
          },
          auth: undefined,
          family: undefined,
          beforeRedirect: [Function: dispatchBeforeRedirect],
          beforeRedirects: {
            proxy: [Function: beforeRedirect],
          },
          hostname: "fastrestapis.fasturl.link",
          port: "",
          agent: undefined,
          nativeProtocols: {
            "http:": {
              Agent: [EventEmitter: Agent],
              Server: [EventEmitter: Server2],
              METHODS: [
                "ACL", "BIND", "CHECKOUT", "CONNECT", "COPY", "DELETE", "GET", "HEAD", "LINK", "LOCK",
                "M-SEARCH", "MERGE", "MKACTIVITY", "MKCALENDAR", "MKCOL", "MOVE", "NOTIFY", "OPTIONS",
                "PATCH", "POST", "PROPFIND", "PROPPATCH", "PURGE", "PUT", "QUERY", "REBIND", "REPORT",
                "SEARCH", "SOURCE", "SUBSCRIBE", "TRACE", "UNBIND", "UNLINK", "UNLOCK", "UNSUBSCRIBE"
              ],
              STATUS_CODES: {
                "100": "Continue",
                "101": "Switching Protocols",
                "102": "Processing",
                "103": "Early Hints",
                "200": "OK",
                "201": "Created",
                "202": "Accepted",
                "203": "Non-Authoritative Information",
                "204": "No Content",
                "205": "Reset Content",
                "206": "Partial Content",
                "207": "Multi-Status",
                "208": "Already Reported",
                "226": "IM Used",
                "300": "Multiple Choices",
                "301": "Moved Permanently",
                "302": "Found",
                "303": "See Other",
                "304": "Not Modified",
                "305": "Use Proxy",
                "307": "Temporary Redirect",
                "308": "Permanent Redirect",
                "400": "Bad Request",
                "401": "Unauthorized",
                "402": "Payment Required",
                "403": "Forbidden",
                "404": "Not Found",
                "405": "Method Not Allowed",
                "406": "Not Acceptable",
                "407": "Proxy Authentication Required",
                "408": "Request Timeout",
                "409": "Conflict",
                "410": "Gone",
                "411": "Length Required",
                "412": "Precondition Failed",
                "413": "Payload Too Large",
                "414": "URI Too Long",
                "415": "Unsupported Media Type",
                "416": "Range Not Satisfiable",
                "417": "Expectation Failed",
                "418": "I'm a Teapot",
                "421": "Misdirected Request",
                "422": "Unprocessable Entity",
                "423": "Locked",
                "424": "Failed Dependency",
                "425": "Too Early",
                "426": "Upgrade Required",
                "428": "Precondition Required",
                "429": "Too Many Requests",
                "431": "Request Header Fields Too Large",
                "451": "Unavailable For Legal Reasons",
                "500": "Internal Server Error",
                "501": "Not Implemented",
                "502": "Bad Gateway",
                "503": "Service Unavailable",
                "504": "Gateway Timeout",
                "505": "HTTP Version Not Supported",
                "506": "Variant Also Negotiates",
                "507": "Insufficient Storage",
                "508": "Loop Detected",
                "509": "Bandwidth Limit Exceeded",
                "510": "Not Extended",
                "511": "Network Authentication Required",
              },
              createServer: [Function: createServer],
              ServerResponse: [Stream: ServerResponse],
              IncomingMessage: [Readable: IncomingMessage],
              request: [Function: request],
              get: [Function: get],
              maxHeaderSize: [Getter/Setter],
              validateHeaderName: [Function],
              validateHeaderValue: [Function],
              setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
              globalAgent: Agent {
                _events: [Object: null prototype] {},
                _eventsCount: 0,
                _maxListeners: undefined,
                [Symbol(kCapture)]: false,
                defaultPort: 80,
                protocol: "http:",
                options: {
                  path: null,
                  noDelay: true,
                },
                requests: [Object: null prototype] {},
                sockets: [Object: null prototype] {},
                freeSockets: [Object: null prototype] {},
                keepAliveMsecs: 1000,
                keepAlive: false,
                maxSockets: Infinity,
                maxFreeSockets: 256,
                scheduling: "lifo",
                maxTotalSockets: undefined,
                totalSocketCount: 0,
                createConnection: [Function],
                getName: [Function],
                addRequest: [Function],
                createSocket: [Function],
                removeSocket: [Function],
                keepSocketAlive: [Function],
                reuseSocket: [Function],
                destroy: [Function],
                setMaxListeners: [Function: setMaxListeners],
                getMaxListeners: [Function: getMaxListeners],
                emit: [Function: emit],
                addListener: [Function: addListener],
                on: [Function: addListener],
                prependListener: [Function: prependListener],
                once: [Function: once],
                prependOnceListener: [Function: prependOnceListener],
                removeListener: [Function: removeListener],
                off: [Function: removeListener],
                removeAllListeners: [Function: removeAllListeners],
                listeners: [Function: listeners],
                rawListeners: [Function: rawListeners],
                listenerCount: [Function: listenerCount],
                eventNames: [Function: eventNames],
              },
              ClientRequest: [OutgoingMessage: ClientRequest],
              OutgoingMessage: [Stream: OutgoingMessage],
              WebSocket: [class Function extends Function],
              CloseEvent: [class Function extends Function],
              MessageEvent: [class Function extends Function],
            },
            "https:": {
              Agent: [Agent],
              globalAgent: Agent {
                _events: [Object: null prototype] {},
                _eventsCount: 0,
                _maxListeners: undefined,
                [Symbol(kCapture)]: false,
                defaultPort: 443,
                protocol: "https:",
                options: {
                  keepAlive: true,
                  scheduling: "lifo",
                  timeout: 5000,
                  path: null,
                  noDelay: true,
                },
                requests: [Object: null prototype] {},
                sockets: [Object: null prototype] {},
                freeSockets: [Object: null prototype] {},
                keepAliveMsecs: 1000,
                keepAlive: true,
                maxSockets: Infinity,
                maxFreeSockets: 256,
                scheduling: "lifo",
                maxTotalSockets: undefined,
                totalSocketCount: 0,
                maxCachedSessions: 100,
                createConnection: undefined,
                getName: [Function],
                addRequest: [Function],
                createSocket: [Function],
                removeSocket: [Function],
                keepSocketAlive: [Function],
                reuseSocket: [Function],
                destroy: [Function],
                setMaxListeners: [Function: setMaxListeners],
                getMaxListeners: [Function: getMaxListeners],
                emit: [Function: emit],
                addListener: [Function: addListener],
                on: [Function: addListener],
                prependListener: [Function: prependListener],
                once: [Function: once],
                prependOnceListener: [Function: prependOnceListener],
                removeListener: [Function: removeListener],
                off: [Function: removeListener],
                removeAllListeners: [Function: removeAllListeners],
                listeners: [Function: listeners],
                rawListeners: [Function: rawListeners],
                listenerCount: [Function: listenerCount],
                eventNames: [Function: eventNames],
              },
              Server: [EventEmitter: Server2],
              createServer: [Function: createServer],
              get: [Function: get],
              request: [Function: request],
            },
          },
          pathname: "/aillm/superqwen",
          search: "?ask=buatkan+logo+group+warna+galaxy+dan+nama+group+yeena+%F0%9F%9A%A9&style=Namamu+Kanata+AI,Kamu+adalah+AI+yang+santai,pemarah,+suka+bercanda,+dan+sedikit+egois.+Jawabanmu+humanis,+to+the+point,+dan+pakai+bahasa+gaul.+Kadang+sok+tahu,+kadang+nyeleneh,+tapi+tetep+kasih+info+yang+bener.+Bercanda+boleh,+tapi+jangan+sampai+bikin+orang+males.+Jangan+tambahin+pertanyaan+setelah+jawaban.&sessionId=60105058262%40s.whatsapp.net&model=qwen-max-latest&mode=search",
          href: "https://fastrestapis.fasturl.link/aillm/superqwen?ask=buatkan+logo+group+warna+galaxy+dan+nama+group+yeena+%F0%9F%9A%A9&style=Namamu+Kanata+AI,Kamu+adalah+AI+yang+santai,pemarah,+suka+bercanda,+dan+sedikit+egois.+Jawabanmu+humanis,+to+the+point,+dan+pakai+bahasa+gaul.+Kadang+sok+tahu,+kadang+nyeleneh,+tapi+tetep+kasih+info+yang+bener.+Bercanda+boleh,+tapi+jangan+sampai+bikin+orang+males.+Jangan+tambahin+pertanyaan+setelah+jawaban.&sessionId=60105058262%40s.whatsapp.net&model=qwen-max-latest&mode=search",
          query: undefined,
          hash: "",
        },
        _ended: true,
        _ending: true,
        _redirectCount: 1,
        _redirects: [],
        _requestBodyLength: 0,
        _requestBodyBuffers: [],
        _eventsCount: NaN,
        _onNativeResponse: [Function],
        _currentRequest: [Circular],
        _currentUrl: "https://fastrestapis.fasturl.link/aillm/superqwen?ask=buatkan+logo+group+warna+galaxy+dan+nama+group+yeena+%F0%9F%9A%A9&style=Namamu+Kanata+AI,Kamu+adalah+AI+yang+santai,pemarah,+suka+bercanda,+dan+sedikit+egois.+Jawabanmu+humanis,+to+the+point,+dan+pakai+bahasa+gaul.+Kadang+sok+tahu,+kadang+nyeleneh,+tapi+tetep+kasih+info+yang+bener.+Bercanda+boleh,+tapi+jangan+sampai+bikin+orang+males.+Jangan+tambahin+pertanyaan+setelah+jawaban.&sessionId=60105058262%40s.whatsapp.net&model=qwen-max-latest&mode=search",
        _isRedirect: true,
        abort: [Function],
        destroy: [Function],
        write: [Function],
        end: [Function],
        setHeader: [Function],
        removeHeader: [Function],
        setTimeout: [Function],
        flushHeaders: [Function],
        getHeader: [Function],
        setNoDelay: [Function],
        setSocketKeepAlive: [Function],
        aborted: [Getter],
        connection: [Getter],
        socket: [Getter],
        _sanitizeOptions: [Function],
        _performRequest: [Function],
        _processResponse: [Function],
        pipe: [Function],
        cork: [Function],
        uncork: [Function],
        setDefaultEncoding: [Function: setDefaultEncoding],
        _write: [Function],
        _writev: null,
        closed: [Getter],
        destroyed: [Getter/Setter],
        writable: [Getter/Setter],
        writableFinished: [Getter],
        writableObjectMode: [Getter],
        writableBuffer: [Getter],
        writableEnded: [Getter],
        writableNeedDrain: [Getter],
        writableHighWaterMark: [Getter],
        writableCorked: [Getter],
        writableLength: [Getter],
        errored: [Getter],
        writableAborted: [Getter],
        _undestroy: [Function: undestroy],
        _destroy: [Function],
        [Symbol(nodejs.rejection)]: [Function],
        [Symbol(Symbol.asyncDispose)]: [Function],
        eventNames: [Function: eventNames],
        setMaxListeners: [Function: setMaxListeners],
        getMaxListeners: [Function: getMaxListeners],
        emit: [Function: emit],
        addListener: [Function: addListener],
        on: [Function: addListener],
        prependListener: [Function: prependListener],
        once: [Function: once],
        prependOnceListener: [Function: prependOnceListener],
        removeListener: [Function: removeListener],
        off: [Function: removeListener],
        removeAllListeners: [Function: removeAllListeners],
        listeners: [Function: listeners],
        rawListeners: [Function: rawListeners],
        listenerCount: [Function: listenerCount],
      },
      [Symbol(fetchRequest)]: null,
      [Symbol(fakeSocket)]: Socket {
        _events: {
          close: undefined,
          error: undefined,
          prefinish: undefined,
          finish: undefined,
          drain: undefined,
          data: undefined,
          end: undefined,
          readable: undefined,
        },
        _readableState: {
          [Symbol(kState)]: 1052940,
          highWaterMark: 65536,
          buffer: [],
          bufferIndex: 0,
          length: 0,
          pipes: [],
          awaitDrainWriters: null,
          objectMode: [Getter/Setter],
          ended: [Getter/Setter],
          endEmitted: [Getter/Setter],
          reading: [Getter/Setter],
          constructed: [Getter/Setter],
          sync: [Getter/Setter],
          needReadable: [Getter/Setter],
          emittedReadable: [Getter/Setter],
          readableListening: [Getter/Setter],
          resumeScheduled: [Getter/Setter],
          errorEmitted: [Getter/Setter],
          emitClose: [Getter/Setter],
          autoDestroy: [Getter/Setter],
          destroyed: [Getter/Setter],
          closed: [Getter/Setter],
          closeEmitted: [Getter/Setter],
          multiAwaitDrain: [Getter/Setter],
          readingMore: [Getter/Setter],
          dataEmitted: [Getter/Setter],
          errored: [Getter/Setter],
          defaultEncoding: [Getter/Setter],
          decoder: [Getter/Setter],
          encoding: [Getter/Setter],
          flowing: [Getter/Setter],
          pipesCount: [Getter],
          paused: [Getter/Setter],
          [Symbol(kOnConstructed)]: [Function: onConstructed],
        },
        _writableState: {
          [Symbol(kState)]: 17580812,
          highWaterMark: 65536,
          length: 0,
          corked: 0,
          onwrite: [Function: onwrite],
          writelen: 0,
          [Symbol(kBufferedValue)]: null,
          bufferedIndex: 0,
          pendingcb: 0,
          objectMode: [Getter/Setter],
          finalCalled: [Getter/Setter],
          needDrain: [Getter/Setter],
          ending: [Getter/Setter],
          ended: [Getter/Setter],
          finished: [Getter/Setter],
          destroyed: [Getter/Setter],
          decodeStrings: [Getter/Setter],
          writing: [Getter/Setter],
          sync: [Getter/Setter],
          bufferProcessing: [Getter/Setter],
          constructed: [Getter/Setter],
          prefinished: [Getter/Setter],
          errorEmitted: [Getter/Setter],
          emitClose: [Getter/Setter],
          autoDestroy: [Getter/Setter],
          closed: [Getter/Setter],
          closeEmitted: [Getter/Setter],
          allBuffers: [Getter/Setter],
          allNoop: [Getter/Setter],
          errored: [Getter/Setter],
          writable: [Getter/Setter],
          defaultEncoding: [Getter/Setter],
          writecb: [Getter/Setter],
          afterWriteTickInfo: [Getter/Setter],
          buffered: [Getter/Setter],
          getBuffer: [Function: getBuffer],
          bufferedRequestCount: [Getter],
          [Symbol(kOnConstructed)]: [Function: onConstructed],
        },
        allowHalfOpen: true,
        _maxListeners: undefined,
        [Symbol(kCapture)]: false,
        [Symbol(::bunternal::)]: undefined,
        bytesRead: 0,
        bytesWritten: 0,
        connecting: false,
        timeout: 0,
        isServer: false,
        _httpMessage: [Circular],
        _onTimeout: [Function],
        address: [Function: address],
        bufferSize: [Getter],
        connect: [Function: connect],
        _destroy: [Function: _destroy],
        _final: [Function: _final],
        localAddress: [Getter],
        localFamily: [Getter],
        localPort: [Getter],
        pending: [Getter],
        _read: [Function: _read],
        readyState: [Getter],
        ref: [Function: ref],
        remoteAddress: [Getter/Setter],
        remotePort: [Getter/Setter],
        remoteFamily: [Getter/Setter],
        resetAndDestroy: [Function: resetAndDestroy],
        setKeepAlive: [Function: setKeepAlive],
        setNoDelay: [Function: setNoDelay],
        setTimeout: [Function: setTimeout],
        unref: [Function: unref],
        _write: [Function: _write],
        destroy: [Function: destroy],
        write: [Function],
        cork: [Function],
        uncork: [Function],
        setDefaultEncoding: [Function: setDefaultEncoding],
        _writev: null,
        end: [Function],
        writable: [Getter/Setter],
        writableHighWaterMark: [Getter],
        writableObjectMode: [Getter],
        writableBuffer: [Getter],
        writableLength: [Getter],
        writableFinished: [Getter],
        writableCorked: [Getter],
        writableEnded: [Getter],
        writableNeedDrain: [Getter],
        destroyed: [Getter/Setter],
        _undestroy: [Function: undestroy],
        push: [Function],
        unshift: [Function],
        isPaused: [Function],
        setEncoding: [Function],
        read: [Function],
        pipe: [Function],
        unpipe: [Function],
        on: [Function],
        addListener: [Function],
        removeListener: [Function],
        off: [Function],
        removeAllListeners: [Function],
        resume: [Function],
        pause: [Function],
        wrap: [Function],
        iterator: [Function],
        readable: [Getter/Setter],
        readableDidRead: [Getter],
        readableAborted: [Getter],
        readableHighWaterMark: [Getter],
        readableBuffer: [Getter],
        readableFlowing: [Getter/Setter],
        readableLength: [Getter],
        readableObjectMode: [Getter],
        readableEncoding: [Getter],
        errored: [Getter],
        closed: [Getter],
        readableEnded: [Getter],
        drop: [Function],
        filter: [Function],
        flatMap: [Function],
        map: [Function],
        take: [Function],
        compose: [Function],
        every: [Function],
        forEach: [Function],
        reduce: [Function],
        toArray: [Function],
        some: [Function],
        find: [Function],
        [Symbol(nodejs.rejection)]: [Function],
        [Symbol(Symbol.asyncDispose)]: [Function],
        [Symbol(Symbol.asyncIterator)]: [Function],
        eventNames: [Function: eventNames],
      },
      res: IncomingMessage {
        [Symbol(aborted)]: false,
        [Symbol(eofInProgress)]: true,
        _consuming: true,
        _dumped: false,
        complete: true,
        _closed: false,
        [Symbol(noBody)]: false,
        _events: {
          error: [
            [Function: handleStreamError]
          ],
          data: [
            [Function: handleStreamData]
          ],
          end: [
            [Function: handleStreamEnd]
          ],
          readable: undefined,
          aborted: [
            [Function: handlerStreamAborted]
          ],
        },
        _readableState: {
          [Symbol(kState)]: 194512764,
          highWaterMark: 65536,
          buffer: [],
          bufferIndex: 0,
          length: 0,
          pipes: [],
          awaitDrainWriters: null,
          objectMode: [Getter/Setter],
          ended: [Getter/Setter],
          endEmitted: [Getter/Setter],
          reading: [Getter/Setter],
          constructed: [Getter/Setter],
          sync: [Getter/Setter],
          needReadable: [Getter/Setter],
          emittedReadable: [Getter/Setter],
          readableListening: [Getter/Setter],
          resumeScheduled: [Getter/Setter],
          errorEmitted: [Getter/Setter],
          emitClose: [Getter/Setter],
          autoDestroy: [Getter/Setter],
          destroyed: [Getter/Setter],
          closed: [Getter/Setter],
          closeEmitted: [Getter/Setter],
          multiAwaitDrain: [Getter/Setter],
          readingMore: [Getter/Setter],
          dataEmitted: [Getter/Setter],
          errored: [Getter/Setter],
          defaultEncoding: [Getter/Setter],
          decoder: [Getter/Setter],
          encoding: [Getter/Setter],
          flowing: [Getter/Setter],
          pipesCount: [Getter],
          paused: [Getter/Setter],
          [Symbol(kOnConstructed)]: [Function: onConstructed],
        },
        _maxListeners: undefined,
        [Symbol(kCapture)]: false,
        _eventsCount: NaN,
        [Symbol(FetchAPI)]: Response (0 KB) {
          ok: false,
          url: "https://fastrestapis.fasturl.link/aillm/superqwen?ask=buatkan+logo+group+warna+galaxy+dan+nama+group+yeena+%F0%9F%9A%A9&style=Namamu+Kanata+AI,Kamu+adalah+AI+yang+santai,pemarah,+suka+bercanda,+dan+sedikit+egois.+Jawabanmu+humanis,+to+the+point,+dan+pakai+bahasa+gaul.+Kadang+sok+tahu,+kadang+nyeleneh,+tapi+tetep+kasih+info+yang+bener.+Bercanda+boleh,+tapi+jangan+sampai+bikin+orang+males.+Jangan+tambahin+pertanyaan+setelah+jawaban.&sessionId=60105058262%40s.whatsapp.net&model=qwen-max-latest&mode=search",
          status: 502,
          statusText: "Bad Gateway",
          headers: Headers {
            "date": "Sat, 28 Jun 2025 11:36:07 GMT",
            "content-type": "text/html; charset=UTF-8",
            "content-length": "6460",
            "connection": "keep-alive",
            "cache-control": "private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
            "expires": "Thu, 01 Jan 1970 00:00:01 GMT",
            "referrer-policy": "same-origin",
            "x-frame-options": "SAMEORIGIN",
            "server": "cloudflare",
            "cf-ray": "956ce27178a103f8-FRA",
          },
          redirected: false,
          bodyUsed: true
        },
        [Symbol(type)]: 1,
        [Symbol(bodyStream)]: undefined,
        [Symbol(statusMessage)]: "Bad Gateway",
        [Symbol(statusCode)]: 502,
        url: "/aillm/superqwen?ask=buatkan+logo+group+warna+galaxy+dan+nama+group+yeena+%F0%9F%9A%A9&style=Namamu+Kanata+AI,Kamu+adalah+AI+yang+santai,pemarah,+suka+bercanda,+dan+sedikit+egois.+Jawabanmu+humanis,+to+the+point,+dan+pakai+bahasa+gaul.+Kadang+sok+tahu,+kadang+nyeleneh,+tapi+tetep+kasih+info+yang+bener.+Bercanda+boleh,+tapi+jangan+sampai+bikin+orang+males.+Jangan+tambahin+pertanyaan+setelah+jawaban.&sessionId=60105058262%40s.whatsapp.net&model=qwen-max-latest&mode=search",
        headers: {
          date: "Sat, 28 Jun 2025 11:36:07 GMT",
          "content-type": "text/html; charset=UTF-8",
          "content-length": "6460",
          connection: "keep-alive",
          "cache-control": "private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
          expires: "Thu, 01 Jan 1970 00:00:01 GMT",
          "referrer-policy": "same-origin",
          "x-frame-options": "SAMEORIGIN",
          server: "cloudflare",
          "cf-ray": "956ce27178a103f8-FRA",
        },
        rawHeaders: [
          "date", "Sat, 28 Jun 2025 11:36:07 GMT", "content-type", "text/html; charset=UTF-8",
          "content-length", "6460", "connection", "keep-alive", "cache-control", "private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
          "expires", "Thu, 01 Jan 1970 00:00:01 GMT", "referrer-policy", "same-origin", "x-frame-options",
          "SAMEORIGIN", "Server", "cloudflare", "CF-RAY", "956ce27178a103f8-FRA"
        ],
        [Symbol(fakeSocket)]: Socket {
          _events: {
            close: undefined,
            error: undefined,
            prefinish: undefined,
            finish: undefined,
            drain: undefined,
            data: undefined,
            end: undefined,
            readable: undefined,
          },
          _readableState: {
            [Symbol(kState)]: 59779340,
            highWaterMark: 65536,
            buffer: [],
            bufferIndex: 0,
            length: 0,
            pipes: [],
            awaitDrainWriters: null,
            objectMode: [Getter/Setter],
            ended: [Getter/Setter],
            endEmitted: [Getter/Setter],
            reading: [Getter/Setter],
            constructed: [Getter/Setter],
            sync: [Getter/Setter],
            needReadable: [Getter/Setter],
            emittedReadable: [Getter/Setter],
            readableListening: [Getter/Setter],
            resumeScheduled: [Getter/Setter],
            errorEmitted: [Getter/Setter],
            emitClose: [Getter/Setter],
            autoDestroy: [Getter/Setter],
            destroyed: [Getter/Setter],
            closed: [Getter/Setter],
            closeEmitted: [Getter/Setter],
            multiAwaitDrain: [Getter/Setter],
            readingMore: [Getter/Setter],
            dataEmitted: [Getter/Setter],
            errored: [Getter/Setter],
            defaultEncoding: [Getter/Setter],
            decoder: [Getter/Setter],
            encoding: [Getter/Setter],
            flowing: [Getter/Setter],
            pipesCount: [Getter],
            paused: [Getter/Setter],
            [Symbol(kOnConstructed)]: [Function: onConstructed],
          },
          _writableState: {
            [Symbol(kState)]: 17580812,
            highWaterMark: 65536,
            length: 0,
            corked: 0,
            onwrite: [Function: onwrite],
            writelen: 0,
            [Symbol(kBufferedValue)]: null,
            bufferedIndex: 0,
            pendingcb: 0,
            objectMode: [Getter/Setter],
            finalCalled: [Getter/Setter],
            needDrain: [Getter/Setter],
            ending: [Getter/Setter],
            ended: [Getter/Setter],
            finished: [Getter/Setter],
            destroyed: [Getter/Setter],
            decodeStrings: [Getter/Setter],
            writing: [Getter/Setter],
            sync: [Getter/Setter],
            bufferProcessing: [Getter/Setter],
            constructed: [Getter/Setter],
            prefinished: [Getter/Setter],
            errorEmitted: [Getter/Setter],
            emitClose: [Getter/Setter],
            autoDestroy: [Getter/Setter],
            closed: [Getter/Setter],
            closeEmitted: [Getter/Setter],
            allBuffers: [Getter/Setter],
            allNoop: [Getter/Setter],
            errored: [Getter/Setter],
            writable: [Getter/Setter],
            defaultEncoding: [Getter/Setter],
            writecb: [Getter/Setter],
            afterWriteTickInfo: [Getter/Setter],
            buffered: [Getter/Setter],
            getBuffer: [Function: getBuffer],
            bufferedRequestCount: [Getter],
            [Symbol(kOnConstructed)]: [Function: onConstructed],
          },
          allowHalfOpen: true,
          _maxListeners: undefined,
          [Symbol(kCapture)]: false,
          [Symbol(::bunternal::)]: undefined,
          bytesRead: 0,
          bytesWritten: 0,
          connecting: false,
          timeout: 0,
          isServer: false,
          _httpMessage: [Circular],
          _onTimeout: [Function],
          encrypted: true,
          address: [Function: address],
          bufferSize: [Getter],
          connect: [Function: connect],
          _destroy: [Function: _destroy],
          _final: [Function: _final],
          localAddress: [Getter],
          localFamily: [Getter],
          localPort: [Getter],
          pending: [Getter],
          _read: [Function: _read],
          readyState: [Getter],
          ref: [Function: ref],
          remoteAddress: [Getter/Setter],
          remotePort: [Getter/Setter],
          remoteFamily: [Getter/Setter],
          resetAndDestroy: [Function: resetAndDestroy],
          setKeepAlive: [Function: setKeepAlive],
          setNoDelay: [Function: setNoDelay],
          setTimeout: [Function: setTimeout],
          unref: [Function: unref],
          _write: [Function: _write],
          destroy: [Function: destroy],
          write: [Function],
          cork: [Function],
          uncork: [Function],
          setDefaultEncoding: [Function: setDefaultEncoding],
          _writev: null,
          end: [Function],
          writable: [Getter/Setter],
          writableHighWaterMark: [Getter],
          writableObjectMode: [Getter],
          writableBuffer: [Getter],
          writableLength: [Getter],
          writableFinished: [Getter],
          writableCorked: [Getter],
          writableEnded: [Getter],
          writableNeedDrain: [Getter],
          destroyed: [Getter/Setter],
          _undestroy: [Function: undestroy],
          push: [Function],
          unshift: [Function],
          isPaused: [Function],
          setEncoding: [Function],
          read: [Function],
          pipe: [Function],
          unpipe: [Function],
          on: [Function],
          addListener: [Function],
          removeListener: [Function],
          off: [Function],
          removeAllListeners: [Function],
          resume: [Function],
          pause: [Function],
          wrap: [Function],
          iterator: [Function],
          readable: [Getter/Setter],
          readableDidRead: [Getter],
          readableAborted: [Getter],
          readableHighWaterMark: [Getter],
          readableBuffer: [Getter],
          readableFlowing: [Getter/Setter],
          readableLength: [Getter],
          readableObjectMode: [Getter],
          readableEncoding: [Getter],
          errored: [Getter],
          closed: [Getter],
          readableEnded: [Getter],
          drop: [Function],
          filter: [Function],
          flatMap: [Function],
          map: [Function],
          take: [Function],
          compose: [Function],
          every: [Function],
          forEach: [Function],
          reduce: [Function],
          toArray: [Function],
          some: [Function],
          find: [Function],
          [Symbol(nodejs.rejection)]: [Function],
          [Symbol(Symbol.asyncDispose)]: [Function],
          [Symbol(Symbol.asyncIterator)]: [Function],
          eventNames: [Function: eventNames],
        },
        req: [Circular],
        setTimeout: [Function],
        responseUrl: "https://fastrestapis.fasturl.link/aillm/superqwen?ask=buatkan+logo+group+warna+galaxy+dan+nama+group+yeena+%F0%9F%9A%A9&style=Namamu+Kanata+AI,Kamu+adalah+AI+yang+santai,pemarah,+suka+bercanda,+dan+sedikit+egois.+Jawabanmu+humanis,+to+the+point,+dan+pakai+bahasa+gaul.+Kadang+sok+tahu,+kadang+nyeleneh,+tapi+tetep+kasih+info+yang+bener.+Bercanda+boleh,+tapi+jangan+sampai+bikin+orang+males.+Jangan+tambahin+pertanyaan+setelah+jawaban.&sessionId=60105058262%40s.whatsapp.net&model=qwen-max-latest&mode=search",
        redirects: [],
        [Symbol(kAutoDestroyed)]: true,
        httpVersion: "1.1",
        _construct: [Function: _construct],
        _dump: [Function: _dump],
        _read: [Function: _read],
        _finish: [Function: _finish],
        _destroy: [Function: IncomingMessage_destroy],
        aborted: [Getter/Setter],
        connection: [Getter],
        statusCode: [Getter/Setter],
        statusMessage: [Getter/Setter],
        httpVersionMajor: [Getter/Setter],
        httpVersionMinor: [Getter/Setter],
        rawTrailers: [Getter/Setter],
        trailers: [Getter/Setter],
        socket: [Getter/Setter],
        destroy: [Function: destroy],
        _undestroy: [Function: undestroy],
        push: [Function],
        unshift: [Function],
        isPaused: [Function],
        setEncoding: [Function],
        read: [Function],
        pipe: [Function],
        unpipe: [Function],
        on: [Function],
        addListener: [Function],
        removeListener: [Function],
        off: [Function],
        removeAllListeners: [Function],
        resume: [Function],
        pause: [Function],
        wrap: [Function],
        iterator: [Function],
        readable: [Getter/Setter],
        readableDidRead: [Getter],
        readableAborted: [Getter],
        readableHighWaterMark: [Getter],
        readableBuffer: [Getter],
        readableFlowing: [Getter/Setter],
        readableLength: [Getter],
        readableObjectMode: [Getter],
        readableEncoding: [Getter],
        errored: [Getter],
        closed: [Getter],
        destroyed: [Getter/Setter],
        readableEnded: [Getter],
        drop: [Function],
        filter: [Function],
        flatMap: [Function],
        map: [Function],
        take: [Function],
        compose: [Function],
        every: [Function],
        forEach: [Function],
        reduce: [Function],
        toArray: [Function],
        some: [Function],
        find: [Function],
        [Symbol(nodejs.rejection)]: [Function],
        [Symbol(Symbol.asyncDispose)]: [Function],
        [Symbol(Symbol.asyncIterator)]: [Function],
        eventNames: [Function: eventNames],
        setMaxListeners: [Function: setMaxListeners],
        getMaxListeners: [Function: getMaxListeners],
        emit: [Function: emit],
        prependListener: [Function: prependListener],
        once: [Function: once],
        prependOnceListener: [Function: prependOnceListener],
        listeners: [Function: listeners],
        rawListeners: [Function: rawListeners],
        listenerCount: [Function: listenerCount],
      },
      _closed: true,
      complete: true,
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    data: "<!DOCTYPE html>\n<!--[if lt IE 7]> <html class=\"no-js ie6 oldie\" lang=\"en-US\"> <![endif]-->\n<!--[if IE 7]>    <html class=\"no-js ie7 oldie\" lang=\"en-US\"> <![endif]-->\n<!--[if IE 8]>    <html class=\"no-js ie8 oldie\" lang=\"en-US\"> <![endif]-->\n<!--[if gt IE 8]><!--> <html class=\"no-js\" lang=\"en-US\"> <!--<![endif]-->\n<head>\n\n<title>fasturl.link | 502: Bad gateway</title>\n<meta charset=\"UTF-8\" />\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\" />\n<meta name=\"robots\" content=\"noindex, nofollow\" />\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n<link rel=\"stylesheet\" id=\"cf_styles-css\" href=\"/cdn-cgi/styles/main.css\" />\n</head>\n<body>\n<div id=\"cf-wrapper\">\n    <div id=\"cf-error-details\" class=\"p-0\">\n        <header class=\"mx-auto pt-10 lg:pt-6 lg:px-8 w-240 lg:w-full mb-8\">\n            <h1 class=\"inline-block sm:block sm:mb-2 font-light text-60 lg:text-4xl text-black-dark leading-tight mr-2\">\n                <span class=\"inline-block\">Bad gateway</span>\n                <span class=\"code-label\">Error code 502</span>\n            </h1>\n            <div>\n                Visit <a href=\"https://www.cloudflare.com/5xx-error-landing?utm_source=errorcode_502&utm_campaign=fastrestapis.fasturl.link\" target=\"_blank\" rel=\"noopener noreferrer\">cloudflare.com</a> for more information.\n            </div>\n            <div class=\"mt-3\">2025-06-28 11:36:07 UTC</div>\n        </header>\n        <div class=\"my-8 bg-gradient-gray\">\n            <div class=\"w-240 lg:w-full mx-auto\">\n                <div class=\"clearfix md:px-8\">\n                    <div id=\"cf-browser-status\" class=\" relative w-1/3 md:w-full py-15 md:p-0 md:py-8 md:text-left md:border-solid md:border-0 md:border-b md:border-gray-400 overflow-hidden float-left md:float-none text-center\">\n  <div class=\"relative mb-10 md:m-0\">\n    \n    <span class=\"cf-icon-browser block md:hidden h-20 bg-center bg-no-repeat\"></span>\n    <span class=\"cf-icon-ok w-12 h-12 absolute left-1/2 md:left-auto md:right-0 md:top-0 -ml-6 -bottom-4\"></span>\n    \n  </div>\n  <span class=\"md:block w-full truncate\">You</span>\n  <h3 class=\"md:inline-block mt-3 md:mt-0 text-2xl text-gray-600 font-light leading-1.3\">\n  \n    Browser\n  \n  </h3>\n  \n  <span class=\"leading-1.3 text-2xl text-green-success\">Working</span>\n  \n</div>\n                    <div id=\"cf-cloudflare-status\" class=\" relative w-1/3 md:w-full py-15 md:p-0 md:py-8 md:text-left md:border-solid md:border-0 md:border-b md:border-gray-400 overflow-hidden float-left md:float-none text-center\">\n  <div class=\"relative mb-10 md:m-0\">\n    <a href=\"https://www.cloudflare.com/5xx-error-landing?utm_source=errorcode_502&#38;utm_campaign=fastrestapis.fasturl.link\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <span class=\"cf-icon-cloud block md:hidden h-20 bg-center bg-no-repeat\"></span>\n    <span class=\"cf-icon-ok w-12 h-12 absolute left-1/2 md:left-auto md:right-0 md:top-0 -ml-6 -bottom-4\"></span>\n    </a>\n  </div>\n  <span class=\"md:block w-full truncate\">Frankfurt</span>\n  <h3 class=\"md:inline-block mt-3 md:mt-0 text-2xl text-gray-600 font-light leading-1.3\">\n  <a href=\"https://www.cloudflare.com/5xx-error-landing?utm_source=errorcode_502&utm_campaign=fastrestapis.fasturl.link\" target=\"_blank\" rel=\"noopener noreferrer\">\n    Cloudflare\n  </a>\n  </h3>\n  \n  <span class=\"leading-1.3 text-2xl text-green-success\">Working</span>\n  \n</div>\n                    <div id=\"cf-host-status\" class=\"cf-error-source relative w-1/3 md:w-full py-15 md:p-0 md:py-8 md:text-left md:border-solid md:border-0 md:border-b md:border-gray-400 overflow-hidden float-left md:float-none text-center\">\n  <div class=\"relative mb-10 md:m-0\">\n    \n    <span class=\"cf-icon-server block md:hidden h-20 bg-center bg-no-repeat\"></span>\n    <span class=\"cf-icon-error w-12 h-12 absolute left-1/2 md:left-auto md:right-0 md:top-0 -ml-6 -bottom-4\"></span>\n    \n  </div>\n  <span class=\"md:block w-full truncate\">fastrestapis.fasturl.link</span>\n  <h3 class=\"md:inline-block mt-3 md:mt-0 text-2xl text-gray-600 font-light leading-1.3\">\n  \n    Host\n  \n  </h3>\n  \n  <span class=\"leading-1.3 text-2xl text-red-error\">Error</span>\n  \n</div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"w-240 lg:w-full mx-auto mb-8 lg:px-8\">\n            <div class=\"clearfix\">\n                <div class=\"w-1/2 md:w-full float-left pr-6 md:pb-10 md:pr-0 leading-relaxed\">\n                    <h2 class=\"text-3xl font-normal leading-1.3 mb-4\">What happened?</h2>\n                    <p>The web server reported a bad gateway error.</p>\n                </div>\n                <div class=\"w-1/2 md:w-full float-left leading-relaxed\">\n                    <h2 class=\"text-3xl font-normal leading-1.3 mb-4\">What can I do?</h2>\n                    <p class=\"mb-6\">Please try again in a few minutes.</p>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"cf-error-footer cf-wrapper w-240 lg:w-full py-10 sm:py-4 sm:px-8 mx-auto text-center sm:text-left border-solid border-0 border-t border-gray-300\">\n    <p class=\"text-13\">\n      <span class=\"cf-footer-item sm:block sm:mb-1\">Cloudflare Ray ID: <strong class=\"font-semibold\">956ce27178a103f8</strong></span>\n      <span class=\"cf-footer-separator sm:hidden\">&bull;</span>\n      <span id=\"cf-footer-item-ip\" class=\"cf-footer-item hidden sm:block sm:mb-1\">\n        Your IP:\n        <button type=\"button\" id=\"cf-footer-ip-reveal\" class=\"cf-footer-ip-reveal-btn\">Click to reveal</button>\n        <span class=\"hidden\" id=\"cf-footer-ip\">45.142.115.127</span>\n        <span class=\"cf-footer-separator sm:hidden\">&bull;</span>\n      </span>\n      <span class=\"cf-footer-item sm:block sm:mb-1\"><span>Performance &amp; security by</span> <a rel=\"noopener noreferrer\" href=\"https://www.cloudflare.com/5xx-error-landing?utm_source=errorcode_502&#38;utm_campaign=fastrestapis.fasturl.link\" id=\"brand_link\" target=\"_blank\">Cloudflare</a></span>\n      \n    </p>\n    <script>(function(){function d(){var b=a.getElementById(\"cf-footer-item-ip\"),c=a.getElementById(\"cf-footer-ip-reveal\");b&&\"classList\"in b&&(b.classList.remove(\"hidden\"),c.addEventListener(\"click\",function(){c.classList.add(\"hidden\");a.getElementById(\"cf-footer-ip\").classList.remove(\"hidden\")}))}var a=document;document.addEventListener&&a.addEventListener(\"DOMContentLoaded\",d)})();</script>\n  </div><!-- /.error-footer -->\n\n    </div>\n</div>\n</body>\n</html>",
  },
  status: 502,
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
[18.36.07] ✨ Command ai executed successfully
[18.37.01] ℹ️ Processing message: 𝐖𝐨𝐢...
📂 Subfolder hidden dikecualikan.
[18.37.02] ℹ️ Raw Gemini response:
[18.37.02] ❌ Failed to parse JSON from Gemini response
[18.37.02] ⚠️ chat called with empty userId, using 'unknown_user'
📂 Subfolder hidden dikecualikan.
[18.37.17] ℹ️ Processing message: 𝐍𝐢𝐡...
📂 Subfolder hidden dikecualikan.
[18.37.18] ℹ️ Raw Gemini response:
[18.37.18] ⚠️ chat called with empty userId, using 'unknown_user'
📂 Subfolder hidden dikecualikan.
[18.37.41] ℹ️ Executing command: toimg2
[18.37.41] ✨ Command toimg2 executed successfully
[18.38.19] ℹ️ Executing command: ai2
Error in hikaru request: AxiosError {
  originalLine: 6,
  originalColumn: 26,
  stack: "Error\n    at settle (/home/roy/kanata-reborn/node_modules/axios/lib/core/settle.js:19:16)\n    at handleStreamEnd (/home/roy/kanata-reborn/node_modules/axios/lib/adapters/http.js:599:11)\n    at emit (node:events:92:22)\n    at endReadableNT (internal:streams/readable:862:50)\n    at processTicksAndRejections (native:7:39)\n    at request (/home/roy/kanata-reborn/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "Request failed with status code 502",
  name: "AxiosError",
  code: "ERR_BAD_RESPONSE",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": undefined,
      "User-Agent": "axios/1.10.0",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    baseURL: "https://fastrestapis.fasturl.cloud/",
    params: {
      ask: "buatkan saya logo group warna galaxy dan nama yeena 🚩",
    },
    method: "get",
    url: "aillm/gpt-4o-mini",
    allowAbsoluteUrls: true,
    data: undefined,
  },
  request: ClientRequest {
    write: [Function],
    end: [Function],
    flushHeaders: [Function],
    destroy: [Function],
    _ensureTls: [Function],
    abort: [Function],
    [Symbol(tls)]: null,
    [Symbol(kAbortController)]: AbortController {
      signal: AbortSignal {
        aborted: false,
        reason: undefined,
        onabort: null,
        throwIfAborted: [Function: throwIfAborted],
        addEventListener: [Function: addEventListener],
        removeEventListener: [Function: removeEventListener],
        dispatchEvent: [Function: dispatchEvent],
      },
      abort: [Function: abort],
    },
    [Symbol(agent)]: Agent {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      defaultPort: 443,
      protocol: "https:",
      options: {
        keepAlive: true,
        scheduling: "lifo",
        timeout: 5000,
        path: null,
        noDelay: true,
      },
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype] {},
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: "lifo",
      maxTotalSockets: undefined,
      totalSocketCount: 0,
      maxCachedSessions: 100,
      createConnection: undefined,
      getName: [Function],
      addRequest: [Function],
      createSocket: [Function],
      removeSocket: [Function],
      keepSocketAlive: [Function],
      reuseSocket: [Function],
      destroy: [Function],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      eventNames: [Function: eventNames],
    },
    destroyed: false,
    [Symbol(protocol)]: "https:",
    [Symbol(port)]: 443,
    [Symbol(useDefaultPort)]: true,
    [Symbol(host)]: "fastrestapis.fasturl.link",
    [Symbol(socketPath)]: undefined,
    [Symbol(method)]: "GET",
    maxHeaderSize: undefined,
    [Symbol(maxHeaderSize)]: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    [Symbol(path)]: "/aillm/gpt-4o-mini?ask=buatkan+saya+logo+group+warna+galaxy+dan+nama+yeena+%F0%9F%9A%A9",
    _events: [Object: null prototype] {
      abort: [
        [Function]
      ],
      aborted: [
        [Function]
      ],
      connect: [
        [Function]
      ],
      error: [
        [Function]
      ],
      socket: [
        [Function]
      ],
      timeout: [
        [Function]
      ],
    },
    _eventsCount: 6,
    finished: true,
    [Symbol(res)]: null,
    [Symbol(upgradeOrConnect)]: false,
    [Symbol(parser)]: null,
    [Symbol(maxHeadersCount)]: null,
    [Symbol(reusedSocket)]: false,
    [Symbol(headers)]: Headers {
      "accept": "application/json, text/plain, */*",
      "user-agent": "axios/1.10.0",
      "accept-encoding": "gzip, compress, deflate, br",
    },
    [Symbol(options)]: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "https:",
      path: "/aillm/gpt-4o-mini?ask=buatkan+saya+logo+group+warna+galaxy+dan+nama+yeena+%F0%9F%9A%A9",
      method: "GET",
      headers: [Object: null prototype] {
        Accept: "application/json, text/plain, */*",
        "User-Agent": "axios/1.10.0",
        "Accept-Encoding": "gzip, compress, deflate, br",
      },
      agents: {
        http: undefined,
        https: undefined,
      },
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: {
        proxy: [Function: beforeRedirect],
      },
      hostname: "fastrestapis.fasturl.link",
      port: "",
      agent: undefined,
      nativeProtocols: {
        "http:": {
          Agent: [EventEmitter: Agent],
          Server: [EventEmitter: Server2],
          METHODS: [
            "ACL", "BIND", "CHECKOUT", "CONNECT", "COPY", "DELETE", "GET", "HEAD", "LINK", "LOCK", "M-SEARCH",
            "MERGE", "MKACTIVITY", "MKCALENDAR", "MKCOL", "MOVE", "NOTIFY", "OPTIONS", "PATCH", "POST",
            "PROPFIND", "PROPPATCH", "PURGE", "PUT", "QUERY", "REBIND", "REPORT", "SEARCH", "SOURCE",
            "SUBSCRIBE", "TRACE", "UNBIND", "UNLINK", "UNLOCK", "UNSUBSCRIBE"
          ],
          STATUS_CODES: {
            "100": "Continue",
            "101": "Switching Protocols",
            "102": "Processing",
            "103": "Early Hints",
            "200": "OK",
            "201": "Created",
            "202": "Accepted",
            "203": "Non-Authoritative Information",
            "204": "No Content",
            "205": "Reset Content",
            "206": "Partial Content",
            "207": "Multi-Status",
            "208": "Already Reported",
            "226": "IM Used",
            "300": "Multiple Choices",
            "301": "Moved Permanently",
            "302": "Found",
            "303": "See Other",
            "304": "Not Modified",
            "305": "Use Proxy",
            "307": "Temporary Redirect",
            "308": "Permanent Redirect",
            "400": "Bad Request",
            "401": "Unauthorized",
            "402": "Payment Required",
            "403": "Forbidden",
            "404": "Not Found",
            "405": "Method Not Allowed",
            "406": "Not Acceptable",
            "407": "Proxy Authentication Required",
            "408": "Request Timeout",
            "409": "Conflict",
            "410": "Gone",
            "411": "Length Required",
            "412": "Precondition Failed",
            "413": "Payload Too Large",
            "414": "URI Too Long",
            "415": "Unsupported Media Type",
            "416": "Range Not Satisfiable",
            "417": "Expectation Failed",
            "418": "I'm a Teapot",
            "421": "Misdirected Request",
            "422": "Unprocessable Entity",
            "423": "Locked",
            "424": "Failed Dependency",
            "425": "Too Early",
            "426": "Upgrade Required",
            "428": "Precondition Required",
            "429": "Too Many Requests",
            "431": "Request Header Fields Too Large",
            "451": "Unavailable For Legal Reasons",
            "500": "Internal Server Error",
            "501": "Not Implemented",
            "502": "Bad Gateway",
            "503": "Service Unavailable",
            "504": "Gateway Timeout",
            "505": "HTTP Version Not Supported",
            "506": "Variant Also Negotiates",
            "507": "Insufficient Storage",
            "508": "Loop Detected",
            "509": "Bandwidth Limit Exceeded",
            "510": "Not Extended",
            "511": "Network Authentication Required",
          },
          createServer: [Function: createServer],
          ServerResponse: [Stream: ServerResponse],
          IncomingMessage: [Readable: IncomingMessage],
          request: [Function: request],
          get: [Function: get],
          maxHeaderSize: [Getter/Setter],
          validateHeaderName: [Function],
          validateHeaderValue: [Function],
          setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
          globalAgent: Agent {
            _events: [Object: null prototype] {},
            _eventsCount: 0,
            _maxListeners: undefined,
            [Symbol(kCapture)]: false,
            defaultPort: 80,
            protocol: "http:",
            options: {
              path: null,
              noDelay: true,
            },
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype] {},
            freeSockets: [Object: null prototype] {},
            keepAliveMsecs: 1000,
            keepAlive: false,
            maxSockets: Infinity,
            maxFreeSockets: 256,
            scheduling: "lifo",
            maxTotalSockets: undefined,
            totalSocketCount: 0,
            createConnection: [Function],
            getName: [Function],
            addRequest: [Function],
            createSocket: [Function],
            removeSocket: [Function],
            keepSocketAlive: [Function],
            reuseSocket: [Function],
            destroy: [Function],
            setMaxListeners: [Function: setMaxListeners],
            getMaxListeners: [Function: getMaxListeners],
            emit: [Function: emit],
            addListener: [Function: addListener],
            on: [Function: addListener],
            prependListener: [Function: prependListener],
            once: [Function: once],
            prependOnceListener: [Function: prependOnceListener],
            removeListener: [Function: removeListener],
            off: [Function: removeListener],
            removeAllListeners: [Function: removeAllListeners],
            listeners: [Function: listeners],
            rawListeners: [Function: rawListeners],
            listenerCount: [Function: listenerCount],
            eventNames: [Function: eventNames],
          },
          ClientRequest: [OutgoingMessage: ClientRequest],
          OutgoingMessage: [Stream: OutgoingMessage],
          WebSocket: [class Function extends Function],
          CloseEvent: [class Function extends Function],
          MessageEvent: [class Function extends Function],
        },
        "https:": {
          Agent: [Agent],
          globalAgent: Agent {
            _events: [Object: null prototype] {},
            _eventsCount: 0,
            _maxListeners: undefined,
            [Symbol(kCapture)]: false,
            defaultPort: 443,
            protocol: "https:",
            options: {
              keepAlive: true,
              scheduling: "lifo",
              timeout: 5000,
              path: null,
              noDelay: true,
            },
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype] {},
            freeSockets: [Object: null prototype] {},
            keepAliveMsecs: 1000,
            keepAlive: true,
            maxSockets: Infinity,
            maxFreeSockets: 256,
            scheduling: "lifo",
            maxTotalSockets: undefined,
            totalSocketCount: 0,
            maxCachedSessions: 100,
            createConnection: undefined,
            getName: [Function],
            addRequest: [Function],
            createSocket: [Function],
            removeSocket: [Function],
            keepSocketAlive: [Function],
            reuseSocket: [Function],
            destroy: [Function],
            setMaxListeners: [Function: setMaxListeners],
            getMaxListeners: [Function: getMaxListeners],
            emit: [Function: emit],
            addListener: [Function: addListener],
            on: [Function: addListener],
            prependListener: [Function: prependListener],
            once: [Function: once],
            prependOnceListener: [Function: prependOnceListener],
            removeListener: [Function: removeListener],
            off: [Function: removeListener],
            removeAllListeners: [Function: removeAllListeners],
            listeners: [Function: listeners],
            rawListeners: [Function: rawListeners],
            listenerCount: [Function: listenerCount],
            eventNames: [Function: eventNames],
          },
          Server: [EventEmitter: Server2],
          createServer: [Function: createServer],
          get: [Function: get],
          request: [Function: request],
        },
      },
      pathname: "/aillm/gpt-4o-mini",
      search: "?ask=buatkan+saya+logo+group+warna+galaxy+dan+nama+yeena+%F0%9F%9A%A9",
      href: "https://fastrestapis.fasturl.link/aillm/gpt-4o-mini?ask=buatkan+saya+logo+group+warna+galaxy+dan+nama+yeena+%F0%9F%9A%A9",
      query: undefined,
      hash: "",
      _defaultAgent: Agent {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        [Symbol(kCapture)]: false,
        defaultPort: 443,
        protocol: "https:",
        options: {
          keepAlive: true,
          scheduling: "lifo",
          timeout: 5000,
          path: null,
          noDelay: true,
        },
        requests: [Object: null prototype] {},
        sockets: [Object: null prototype] {},
        freeSockets: [Object: null prototype] {},
        keepAliveMsecs: 1000,
        keepAlive: true,
        maxSockets: Infinity,
        maxFreeSockets: 256,
        scheduling: "lifo",
        maxTotalSockets: undefined,
        totalSocketCount: 0,
        maxCachedSessions: 100,
        createConnection: undefined,
        getName: [Function],
        addRequest: [Function],
        createSocket: [Function],
        removeSocket: [Function],
        keepSocketAlive: [Function],
        reuseSocket: [Function],
        destroy: [Function],
        setMaxListeners: [Function: setMaxListeners],
        getMaxListeners: [Function: getMaxListeners],
        emit: [Function: emit],
        addListener: [Function: addListener],
        on: [Function: addListener],
        prependListener: [Function: prependListener],
        once: [Function: once],
        prependOnceListener: [Function: prependOnceListener],
        removeListener: [Function: removeListener],
        off: [Function: removeListener],
        removeAllListeners: [Function: removeAllListeners],
        listeners: [Function: listeners],
        rawListeners: [Function: rawListeners],
        listenerCount: [Function: listenerCount],
        eventNames: [Function: eventNames],
      },
      host: "fastrestapis.fasturl.link",
    },
    _httpMessage: [Circular],
    [Symbol(emitState)]: 14,
    setSocketKeepAlive: [Function],
    setNoDelay: [Function],
    [Symbol(kClearTimeout)]: [Function],
    _redirectable: Writable {
      _events: {
        close: undefined,
        error: [
          [Function: handleRequestError]
        ],
        prefinish: undefined,
        finish: undefined,
        drain: undefined,
        response: [
          [Function: handleResponse]
        ],
        socket: [
          [Function: handleRequestSocket]
        ],
      },
      _writableState: {
        [Symbol(kState)]: 17580812,
        highWaterMark: 65536,
        length: 0,
        corked: 0,
        onwrite: [Function: onwrite],
        writelen: 0,
        [Symbol(kBufferedValue)]: null,
        bufferedIndex: 0,
        pendingcb: 0,
        objectMode: [Getter/Setter],
        finalCalled: [Getter/Setter],
        needDrain: [Getter/Setter],
        ending: [Getter/Setter],
        ended: [Getter/Setter],
        finished: [Getter/Setter],
        destroyed: [Getter/Setter],
        decodeStrings: [Getter/Setter],
        writing: [Getter/Setter],
        sync: [Getter/Setter],
        bufferProcessing: [Getter/Setter],
        constructed: [Getter/Setter],
        prefinished: [Getter/Setter],
        errorEmitted: [Getter/Setter],
        emitClose: [Getter/Setter],
        autoDestroy: [Getter/Setter],
        closed: [Getter/Setter],
        closeEmitted: [Getter/Setter],
        allBuffers: [Getter/Setter],
        allNoop: [Getter/Setter],
        errored: [Getter/Setter],
        writable: [Getter/Setter],
        defaultEncoding: [Getter/Setter],
        writecb: [Getter/Setter],
        afterWriteTickInfo: [Getter/Setter],
        buffered: [Getter/Setter],
        getBuffer: [Function: getBuffer],
        bufferedRequestCount: [Getter],
        [Symbol(kOnConstructed)]: [Function: onConstructed],
      },
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _options: {
        maxRedirects: 21,
        maxBodyLength: Infinity,
        protocol: "https:",
        path: "/aillm/gpt-4o-mini?ask=buatkan+saya+logo+group+warna+galaxy+dan+nama+yeena+%F0%9F%9A%A9",
        method: "GET",
        headers: [Object: null prototype] {
          Accept: "application/json, text/plain, */*",
          "User-Agent": "axios/1.10.0",
          "Accept-Encoding": "gzip, compress, deflate, br",
        },
        agents: {
          http: undefined,
          https: undefined,
        },
        auth: undefined,
        family: undefined,
        beforeRedirect: [Function: dispatchBeforeRedirect],
        beforeRedirects: {
          proxy: [Function: beforeRedirect],
        },
        hostname: "fastrestapis.fasturl.link",
        port: "",
        agent: undefined,
        nativeProtocols: {
          "http:": {
            Agent: [EventEmitter: Agent],
            Server: [EventEmitter: Server2],
            METHODS: [
              "ACL", "BIND", "CHECKOUT", "CONNECT", "COPY", "DELETE", "GET", "HEAD", "LINK", "LOCK",
              "M-SEARCH", "MERGE", "MKACTIVITY", "MKCALENDAR", "MKCOL", "MOVE", "NOTIFY", "OPTIONS",
              "PATCH", "POST", "PROPFIND", "PROPPATCH", "PURGE", "PUT", "QUERY", "REBIND", "REPORT",
              "SEARCH", "SOURCE", "SUBSCRIBE", "TRACE", "UNBIND", "UNLINK", "UNLOCK", "UNSUBSCRIBE"
            ],
            STATUS_CODES: {
              "100": "Continue",
              "101": "Switching Protocols",
              "102": "Processing",
              "103": "Early Hints",
              "200": "OK",
              "201": "Created",
              "202": "Accepted",
              "203": "Non-Authoritative Information",
              "204": "No Content",
              "205": "Reset Content",
              "206": "Partial Content",
              "207": "Multi-Status",
              "208": "Already Reported",
              "226": "IM Used",
              "300": "Multiple Choices",
              "301": "Moved Permanently",
              "302": "Found",
              "303": "See Other",
              "304": "Not Modified",
              "305": "Use Proxy",
              "307": "Temporary Redirect",
              "308": "Permanent Redirect",
              "400": "Bad Request",
              "401": "Unauthorized",
              "402": "Payment Required",
              "403": "Forbidden",
              "404": "Not Found",
              "405": "Method Not Allowed",
              "406": "Not Acceptable",
              "407": "Proxy Authentication Required",
              "408": "Request Timeout",
              "409": "Conflict",
              "410": "Gone",
              "411": "Length Required",
              "412": "Precondition Failed",
              "413": "Payload Too Large",
              "414": "URI Too Long",
              "415": "Unsupported Media Type",
              "416": "Range Not Satisfiable",
              "417": "Expectation Failed",
              "418": "I'm a Teapot",
              "421": "Misdirected Request",
              "422": "Unprocessable Entity",
              "423": "Locked",
              "424": "Failed Dependency",
              "425": "Too Early",
              "426": "Upgrade Required",
              "428": "Precondition Required",
              "429": "Too Many Requests",
              "431": "Request Header Fields Too Large",
              "451": "Unavailable For Legal Reasons",
              "500": "Internal Server Error",
              "501": "Not Implemented",
              "502": "Bad Gateway",
              "503": "Service Unavailable",
              "504": "Gateway Timeout",
              "505": "HTTP Version Not Supported",
              "506": "Variant Also Negotiates",
              "507": "Insufficient Storage",
              "508": "Loop Detected",
              "509": "Bandwidth Limit Exceeded",
              "510": "Not Extended",
              "511": "Network Authentication Required",
            },
            createServer: [Function: createServer],
            ServerResponse: [Stream: ServerResponse],
            IncomingMessage: [Readable: IncomingMessage],
            request: [Function: request],
            get: [Function: get],
            maxHeaderSize: [Getter/Setter],
            validateHeaderName: [Function],
            validateHeaderValue: [Function],
            setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
            globalAgent: Agent {
              _events: [Object: null prototype] {},
              _eventsCount: 0,
              _maxListeners: undefined,
              [Symbol(kCapture)]: false,
              defaultPort: 80,
              protocol: "http:",
              options: {
                path: null,
                noDelay: true,
              },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: 1000,
              keepAlive: false,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              scheduling: "lifo",
              maxTotalSockets: undefined,
              totalSocketCount: 0,
              createConnection: [Function],
              getName: [Function],
              addRequest: [Function],
              createSocket: [Function],
              removeSocket: [Function],
              keepSocketAlive: [Function],
              reuseSocket: [Function],
              destroy: [Function],
              setMaxListeners: [Function: setMaxListeners],
              getMaxListeners: [Function: getMaxListeners],
              emit: [Function: emit],
              addListener: [Function: addListener],
              on: [Function: addListener],
              prependListener: [Function: prependListener],
              once: [Function: once],
              prependOnceListener: [Function: prependOnceListener],
              removeListener: [Function: removeListener],
              off: [Function: removeListener],
              removeAllListeners: [Function: removeAllListeners],
              listeners: [Function: listeners],
              rawListeners: [Function: rawListeners],
              listenerCount: [Function: listenerCount],
              eventNames: [Function: eventNames],
            },
            ClientRequest: [OutgoingMessage: ClientRequest],
            OutgoingMessage: [Stream: OutgoingMessage],
            WebSocket: [class Function extends Function],
            CloseEvent: [class Function extends Function],
            MessageEvent: [class Function extends Function],
          },
          "https:": {
            Agent: [Agent],
            globalAgent: Agent {
              _events: [Object: null prototype] {},
              _eventsCount: 0,
              _maxListeners: undefined,
              [Symbol(kCapture)]: false,
              defaultPort: 443,
              protocol: "https:",
              options: {
                keepAlive: true,
                scheduling: "lifo",
                timeout: 5000,
                path: null,
                noDelay: true,
              },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: 1000,
              keepAlive: true,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              scheduling: "lifo",
              maxTotalSockets: undefined,
              totalSocketCount: 0,
              maxCachedSessions: 100,
              createConnection: undefined,
              getName: [Function],
              addRequest: [Function],
              createSocket: [Function],
              removeSocket: [Function],
              keepSocketAlive: [Function],
              reuseSocket: [Function],
              destroy: [Function],
              setMaxListeners: [Function: setMaxListeners],
              getMaxListeners: [Function: getMaxListeners],
              emit: [Function: emit],
              addListener: [Function: addListener],
              on: [Function: addListener],
              prependListener: [Function: prependListener],
              once: [Function: once],
              prependOnceListener: [Function: prependOnceListener],
              removeListener: [Function: removeListener],
              off: [Function: removeListener],
              removeAllListeners: [Function: removeAllListeners],
              listeners: [Function: listeners],
              rawListeners: [Function: rawListeners],
              listenerCount: [Function: listenerCount],
              eventNames: [Function: eventNames],
            },
            Server: [EventEmitter: Server2],
            createServer: [Function: createServer],
            get: [Function: get],
            request: [Function: request],
          },
        },
        pathname: "/aillm/gpt-4o-mini",
        search: "?ask=buatkan+saya+logo+group+warna+galaxy+dan+nama+yeena+%F0%9F%9A%A9",
        href: "https://fastrestapis.fasturl.link/aillm/gpt-4o-mini?ask=buatkan+saya+logo+group+warna+galaxy+dan+nama+yeena+%F0%9F%9A%A9",
        query: undefined,
        hash: "",
      },
      _ended: true,
      _ending: true,
      _redirectCount: 1,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: NaN,
      _onNativeResponse: [Function],
      _currentRequest: [Circular],
      _currentUrl: "https://fastrestapis.fasturl.link/aillm/gpt-4o-mini?ask=buatkan+saya+logo+group+warna+galaxy+dan+nama+yeena+%F0%9F%9A%A9",
      _isRedirect: true,
      abort: [Function],
      destroy: [Function],
      write: [Function],
      end: [Function],
      setHeader: [Function],
      removeHeader: [Function],
      setTimeout: [Function],
      flushHeaders: [Function],
      getHeader: [Function],
      setNoDelay: [Function],
      setSocketKeepAlive: [Function],
      aborted: [Getter],
      connection: [Getter],
      socket: [Getter],
      _sanitizeOptions: [Function],
      _performRequest: [Function],
      _processResponse: [Function],
      pipe: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _write: [Function],
      _writev: null,
      closed: [Getter],
      destroyed: [Getter/Setter],
      writable: [Getter/Setter],
      writableFinished: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      writableHighWaterMark: [Getter],
      writableCorked: [Getter],
      writableLength: [Getter],
      errored: [Getter],
      writableAborted: [Getter],
      _undestroy: [Function: undestroy],
      _destroy: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    [Symbol(fetchRequest)]: null,
    [Symbol(fakeSocket)]: Socket {
      _events: {
        close: undefined,
        error: undefined,
        prefinish: undefined,
        finish: undefined,
        drain: undefined,
        data: undefined,
        end: undefined,
        readable: undefined,
      },
      _readableState: {
        [Symbol(kState)]: 1052940,
        highWaterMark: 65536,
        buffer: [],
        bufferIndex: 0,
        length: 0,
        pipes: [],
        awaitDrainWriters: null,
        objectMode: [Getter/Setter],
        ended: [Getter/Setter],
        endEmitted: [Getter/Setter],
        reading: [Getter/Setter],
        constructed: [Getter/Setter],
        sync: [Getter/Setter],
        needReadable: [Getter/Setter],
        emittedReadable: [Getter/Setter],
        readableListening: [Getter/Setter],
        resumeScheduled: [Getter/Setter],
        errorEmitted: [Getter/Setter],
        emitClose: [Getter/Setter],
        autoDestroy: [Getter/Setter],
        destroyed: [Getter/Setter],
        closed: [Getter/Setter],
        closeEmitted: [Getter/Setter],
        multiAwaitDrain: [Getter/Setter],
        readingMore: [Getter/Setter],
        dataEmitted: [Getter/Setter],
        errored: [Getter/Setter],
        defaultEncoding: [Getter/Setter],
        decoder: [Getter/Setter],
        encoding: [Getter/Setter],
        flowing: [Getter/Setter],
        pipesCount: [Getter],
        paused: [Getter/Setter],
        [Symbol(kOnConstructed)]: [Function: onConstructed],
      },
      _writableState: {
        [Symbol(kState)]: 17580812,
        highWaterMark: 65536,
        length: 0,
        corked: 0,
        onwrite: [Function: onwrite],
        writelen: 0,
        [Symbol(kBufferedValue)]: null,
        bufferedIndex: 0,
        pendingcb: 0,
        objectMode: [Getter/Setter],
        finalCalled: [Getter/Setter],
        needDrain: [Getter/Setter],
        ending: [Getter/Setter],
        ended: [Getter/Setter],
        finished: [Getter/Setter],
        destroyed: [Getter/Setter],
        decodeStrings: [Getter/Setter],
        writing: [Getter/Setter],
        sync: [Getter/Setter],
        bufferProcessing: [Getter/Setter],
        constructed: [Getter/Setter],
        prefinished: [Getter/Setter],
        errorEmitted: [Getter/Setter],
        emitClose: [Getter/Setter],
        autoDestroy: [Getter/Setter],
        closed: [Getter/Setter],
        closeEmitted: [Getter/Setter],
        allBuffers: [Getter/Setter],
        allNoop: [Getter/Setter],
        errored: [Getter/Setter],
        writable: [Getter/Setter],
        defaultEncoding: [Getter/Setter],
        writecb: [Getter/Setter],
        afterWriteTickInfo: [Getter/Setter],
        buffered: [Getter/Setter],
        getBuffer: [Function: getBuffer],
        bufferedRequestCount: [Getter],
        [Symbol(kOnConstructed)]: [Function: onConstructed],
      },
      allowHalfOpen: true,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(::bunternal::)]: undefined,
      bytesRead: 0,
      bytesWritten: 0,
      connecting: false,
      timeout: 0,
      isServer: false,
      _httpMessage: [Circular],
      _onTimeout: [Function],
      address: [Function: address],
      bufferSize: [Getter],
      connect: [Function: connect],
      _destroy: [Function: _destroy],
      _final: [Function: _final],
      localAddress: [Getter],
      localFamily: [Getter],
      localPort: [Getter],
      pending: [Getter],
      _read: [Function: _read],
      readyState: [Getter],
      ref: [Function: ref],
      remoteAddress: [Getter/Setter],
      remotePort: [Getter/Setter],
      remoteFamily: [Getter/Setter],
      resetAndDestroy: [Function: resetAndDestroy],
      setKeepAlive: [Function: setKeepAlive],
      setNoDelay: [Function: setNoDelay],
      setTimeout: [Function: setTimeout],
      unref: [Function: unref],
      _write: [Function: _write],
      destroy: [Function: destroy],
      write: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _writev: null,
      end: [Function],
      writable: [Getter/Setter],
      writableHighWaterMark: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableLength: [Getter],
      writableFinished: [Getter],
      writableCorked: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      destroyed: [Getter/Setter],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
    },
    res: IncomingMessage {
      [Symbol(aborted)]: false,
      [Symbol(eofInProgress)]: true,
      _consuming: true,
      _dumped: false,
      complete: true,
      _closed: false,
      [Symbol(noBody)]: false,
      _events: {
        error: [
          [Function: handleStreamError]
        ],
        data: [
          [Function: handleStreamData]
        ],
        end: [
          [Function: handleStreamEnd]
        ],
        readable: undefined,
        aborted: [
          [Function: handlerStreamAborted]
        ],
      },
      _readableState: {
        [Symbol(kState)]: 194512764,
        highWaterMark: 65536,
        buffer: [],
        bufferIndex: 0,
        length: 0,
        pipes: [],
        awaitDrainWriters: null,
        objectMode: [Getter/Setter],
        ended: [Getter/Setter],
        endEmitted: [Getter/Setter],
        reading: [Getter/Setter],
        constructed: [Getter/Setter],
        sync: [Getter/Setter],
        needReadable: [Getter/Setter],
        emittedReadable: [Getter/Setter],
        readableListening: [Getter/Setter],
        resumeScheduled: [Getter/Setter],
        errorEmitted: [Getter/Setter],
        emitClose: [Getter/Setter],
        autoDestroy: [Getter/Setter],
        destroyed: [Getter/Setter],
        closed: [Getter/Setter],
        closeEmitted: [Getter/Setter],
        multiAwaitDrain: [Getter/Setter],
        readingMore: [Getter/Setter],
        dataEmitted: [Getter/Setter],
        errored: [Getter/Setter],
        defaultEncoding: [Getter/Setter],
        decoder: [Getter/Setter],
        encoding: [Getter/Setter],
        flowing: [Getter/Setter],
        pipesCount: [Getter],
        paused: [Getter/Setter],
        [Symbol(kOnConstructed)]: [Function: onConstructed],
      },
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _eventsCount: NaN,
      [Symbol(FetchAPI)]: Response (0 KB) {
        ok: false,
        url: "https://fastrestapis.fasturl.link/aillm/gpt-4o-mini?ask=buatkan+saya+logo+group+warna+galaxy+dan+nama+yeena+%F0%9F%9A%A9",
        status: 502,
        statusText: "Bad Gateway",
        headers: Headers {
          "date": "Sat, 28 Jun 2025 11:38:20 GMT",
          "content-type": "text/html; charset=UTF-8",
          "content-length": "6460",
          "connection": "keep-alive",
          "cache-control": "private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
          "expires": "Thu, 01 Jan 1970 00:00:01 GMT",
          "referrer-policy": "same-origin",
          "x-frame-options": "SAMEORIGIN",
          "server": "cloudflare",
          "cf-ray": "956ce5b0dab303f8-FRA",
        },
        redirected: false,
        bodyUsed: true
      },
      [Symbol(type)]: 1,
      [Symbol(bodyStream)]: undefined,
      [Symbol(statusMessage)]: "Bad Gateway",
      [Symbol(statusCode)]: 502,
      url: "/aillm/gpt-4o-mini?ask=buatkan+saya+logo+group+warna+galaxy+dan+nama+yeena+%F0%9F%9A%A9",
      headers: {
        date: "Sat, 28 Jun 2025 11:38:20 GMT",
        "content-type": "text/html; charset=UTF-8",
        "content-length": "6460",
        connection: "keep-alive",
        "cache-control": "private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
        expires: "Thu, 01 Jan 1970 00:00:01 GMT",
        "referrer-policy": "same-origin",
        "x-frame-options": "SAMEORIGIN",
        server: "cloudflare",
        "cf-ray": "956ce5b0dab303f8-FRA",
      },
      rawHeaders: [
        "date", "Sat, 28 Jun 2025 11:38:20 GMT", "content-type", "text/html; charset=UTF-8",
        "content-length", "6460", "connection", "keep-alive", "cache-control", "private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
        "expires", "Thu, 01 Jan 1970 00:00:01 GMT", "referrer-policy", "same-origin", "x-frame-options",
        "SAMEORIGIN", "Server", "cloudflare", "CF-RAY", "956ce5b0dab303f8-FRA"
      ],
      [Symbol(fakeSocket)]: Socket {
        _events: {
          close: undefined,
          error: undefined,
          prefinish: undefined,
          finish: undefined,
          drain: undefined,
          data: undefined,
          end: undefined,
          readable: undefined,
        },
        _readableState: {
          [Symbol(kState)]: 59779340,
          highWaterMark: 65536,
          buffer: [],
          bufferIndex: 0,
          length: 0,
          pipes: [],
          awaitDrainWriters: null,
          objectMode: [Getter/Setter],
          ended: [Getter/Setter],
          endEmitted: [Getter/Setter],
          reading: [Getter/Setter],
          constructed: [Getter/Setter],
          sync: [Getter/Setter],
          needReadable: [Getter/Setter],
          emittedReadable: [Getter/Setter],
          readableListening: [Getter/Setter],
          resumeScheduled: [Getter/Setter],
          errorEmitted: [Getter/Setter],
          emitClose: [Getter/Setter],
          autoDestroy: [Getter/Setter],
          destroyed: [Getter/Setter],
          closed: [Getter/Setter],
          closeEmitted: [Getter/Setter],
          multiAwaitDrain: [Getter/Setter],
          readingMore: [Getter/Setter],
          dataEmitted: [Getter/Setter],
          errored: [Getter/Setter],
          defaultEncoding: [Getter/Setter],
          decoder: [Getter/Setter],
          encoding: [Getter/Setter],
          flowing: [Getter/Setter],
          pipesCount: [Getter],
          paused: [Getter/Setter],
          [Symbol(kOnConstructed)]: [Function: onConstructed],
        },
        _writableState: {
          [Symbol(kState)]: 17580812,
          highWaterMark: 65536,
          length: 0,
          corked: 0,
          onwrite: [Function: onwrite],
          writelen: 0,
          [Symbol(kBufferedValue)]: null,
          bufferedIndex: 0,
          pendingcb: 0,
          objectMode: [Getter/Setter],
          finalCalled: [Getter/Setter],
          needDrain: [Getter/Setter],
          ending: [Getter/Setter],
          ended: [Getter/Setter],
          finished: [Getter/Setter],
          destroyed: [Getter/Setter],
          decodeStrings: [Getter/Setter],
          writing: [Getter/Setter],
          sync: [Getter/Setter],
          bufferProcessing: [Getter/Setter],
          constructed: [Getter/Setter],
          prefinished: [Getter/Setter],
          errorEmitted: [Getter/Setter],
          emitClose: [Getter/Setter],
          autoDestroy: [Getter/Setter],
          closed: [Getter/Setter],
          closeEmitted: [Getter/Setter],
          allBuffers: [Getter/Setter],
          allNoop: [Getter/Setter],
          errored: [Getter/Setter],
          writable: [Getter/Setter],
          defaultEncoding: [Getter/Setter],
          writecb: [Getter/Setter],
          afterWriteTickInfo: [Getter/Setter],
          buffered: [Getter/Setter],
          getBuffer: [Function: getBuffer],
          bufferedRequestCount: [Getter],
          [Symbol(kOnConstructed)]: [Function: onConstructed],
        },
        allowHalfOpen: true,
        _maxListeners: undefined,
        [Symbol(kCapture)]: false,
        [Symbol(::bunternal::)]: undefined,
        bytesRead: 0,
        bytesWritten: 0,
        connecting: false,
        timeout: 0,
        isServer: false,
        _httpMessage: [Circular],
        _onTimeout: [Function],
        encrypted: true,
        address: [Function: address],
        bufferSize: [Getter],
        connect: [Function: connect],
        _destroy: [Function: _destroy],
        _final: [Function: _final],
        localAddress: [Getter],
        localFamily: [Getter],
        localPort: [Getter],
        pending: [Getter],
        _read: [Function: _read],
        readyState: [Getter],
        ref: [Function: ref],
        remoteAddress: [Getter/Setter],
        remotePort: [Getter/Setter],
        remoteFamily: [Getter/Setter],
        resetAndDestroy: [Function: resetAndDestroy],
        setKeepAlive: [Function: setKeepAlive],
        setNoDelay: [Function: setNoDelay],
        setTimeout: [Function: setTimeout],
        unref: [Function: unref],
        _write: [Function: _write],
        destroy: [Function: destroy],
        write: [Function],
        cork: [Function],
        uncork: [Function],
        setDefaultEncoding: [Function: setDefaultEncoding],
        _writev: null,
        end: [Function],
        writable: [Getter/Setter],
        writableHighWaterMark: [Getter],
        writableObjectMode: [Getter],
        writableBuffer: [Getter],
        writableLength: [Getter],
        writableFinished: [Getter],
        writableCorked: [Getter],
        writableEnded: [Getter],
        writableNeedDrain: [Getter],
        destroyed: [Getter/Setter],
        _undestroy: [Function: undestroy],
        push: [Function],
        unshift: [Function],
        isPaused: [Function],
        setEncoding: [Function],
        read: [Function],
        pipe: [Function],
        unpipe: [Function],
        on: [Function],
        addListener: [Function],
        removeListener: [Function],
        off: [Function],
        removeAllListeners: [Function],
        resume: [Function],
        pause: [Function],
        wrap: [Function],
        iterator: [Function],
        readable: [Getter/Setter],
        readableDidRead: [Getter],
        readableAborted: [Getter],
        readableHighWaterMark: [Getter],
        readableBuffer: [Getter],
        readableFlowing: [Getter/Setter],
        readableLength: [Getter],
        readableObjectMode: [Getter],
        readableEncoding: [Getter],
        errored: [Getter],
        closed: [Getter],
        readableEnded: [Getter],
        drop: [Function],
        filter: [Function],
        flatMap: [Function],
        map: [Function],
        take: [Function],
        compose: [Function],
        every: [Function],
        forEach: [Function],
        reduce: [Function],
        toArray: [Function],
        some: [Function],
        find: [Function],
        [Symbol(nodejs.rejection)]: [Function],
        [Symbol(Symbol.asyncDispose)]: [Function],
        [Symbol(Symbol.asyncIterator)]: [Function],
        eventNames: [Function: eventNames],
      },
      req: [Circular],
      setTimeout: [Function],
      responseUrl: "https://fastrestapis.fasturl.link/aillm/gpt-4o-mini?ask=buatkan+saya+logo+group+warna+galaxy+dan+nama+yeena+%F0%9F%9A%A9",
      redirects: [],
      [Symbol(kAutoDestroyed)]: true,
      httpVersion: "1.1",
      _construct: [Function: _construct],
      _dump: [Function: _dump],
      _read: [Function: _read],
      _finish: [Function: _finish],
      _destroy: [Function: IncomingMessage_destroy],
      aborted: [Getter/Setter],
      connection: [Getter],
      statusCode: [Getter/Setter],
      statusMessage: [Getter/Setter],
      httpVersionMajor: [Getter/Setter],
      httpVersionMinor: [Getter/Setter],
      rawTrailers: [Getter/Setter],
      trailers: [Getter/Setter],
      socket: [Getter/Setter],
      destroy: [Function: destroy],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      destroyed: [Getter/Setter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    _closed: true,
    complete: true,
    setTimeout: [Function: setTimeout],
    clearTimeout: [Function: clearTimeout],
    path: [Getter],
    port: [Getter],
    method: [Getter],
    host: [Getter],
    protocol: [Getter],
    agent: [Getter/Setter],
    aborted: [Getter/Setter],
    writable: [Getter],
    _keepAliveTimeout: 0,
    _defaultKeepAlive: true,
    shouldKeepAlive: true,
    _onPendingData: [Function: nop2],
    outputSize: 0,
    outputData: [],
    strictContentLength: false,
    _removedTE: false,
    _removedContLen: false,
    _removedConnection: false,
    usesChunkedEncodingByDefault: true,
    _headerNames: [Getter/Setter],
    appendHeader: [Function: appendHeader],
    _implicitHeader: [Function: _implicitHeader],
    getHeader: [Function: getHeader],
    pipe: [Function: pipe],
    getHeaderNames: [Function: getHeaderNames],
    getRawHeaderNames: [Function: getRawHeaderNames],
    getHeaders: [Function: getHeaders],
    removeHeader: [Function: removeHeader],
    setHeader: [Function: setHeader],
    setHeaders: [Function: setHeaders],
    hasHeader: [Function: hasHeader],
    headers: [Getter/Setter],
    addTrailers: [Function: addTrailers],
    connection: [Getter/Setter],
    socket: [Getter/Setter],
    chunkedEncoding: [Getter/Setter],
    writableObjectMode: [Getter],
    writableLength: [Getter],
    writableHighWaterMark: [Getter],
    writableNeedDrain: [Getter],
    writableEnded: [Getter],
    writableFinished: [Getter],
    _send: [Function: _send],
    _writeRaw: [Function: _writeRaw],
    writableCorked: [Getter/Setter],
    cork: [Function: cork],
    uncork: [Function: uncork],
    _headers: [Getter/Setter],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
    [Symbol(kCapture)]: false,
  },
  response: {
    status: 502,
    statusText: "Bad Gateway",
    headers: {
      date: "Sat, 28 Jun 2025 11:38:20 GMT",
      "content-type": "text/html; charset=UTF-8",
      "content-length": "6460",
      connection: "keep-alive",
      "cache-control": "private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
      expires: "Thu, 01 Jan 1970 00:00:01 GMT",
      "referrer-policy": "same-origin",
      "x-frame-options": "SAMEORIGIN",
      server: "cloudflare",
      "cf-ray": "956ce5b0dab303f8-FRA",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    config: {
      transitional: {
        silentJSONParsing: true,
        forcedJSONParsing: true,
        clarifyTimeoutError: false,
      },
      adapter: [ "xhr", "http", "fetch" ],
      transformRequest: [
        [Function: transformRequest]
      ],
      transformResponse: [
        [Function: transformResponse]
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: {
        FormData: [Function: FormData],
        Blob: [class Blob],
      },
      validateStatus: [Function: validateStatus],
      headers: {
        Accept: "application/json, text/plain, */*",
        "Content-Type": undefined,
        "User-Agent": "axios/1.10.0",
        "Accept-Encoding": "gzip, compress, deflate, br",
        set: [Getter/Setter],
        get: [Getter/Setter],
        has: [Getter/Setter],
        delete: [Getter/Setter],
        clear: [Getter/Setter],
        normalize: [Getter/Setter],
        concat: [Getter/Setter],
        toJSON: [Getter/Setter],
        toString: [Getter/Setter],
        getSetCookie: [Getter/Setter],
        getContentType: [Getter/Setter],
        setContentType: [Getter/Setter],
        hasContentType: [Getter/Setter],
        getContentLength: [Getter/Setter],
        setContentLength: [Getter/Setter],
        hasContentLength: [Getter/Setter],
        getAccept: [Getter/Setter],
        setAccept: [Getter/Setter],
        hasAccept: [Getter/Setter],
        getAcceptEncoding: [Getter/Setter],
        setAcceptEncoding: [Getter/Setter],
        hasAcceptEncoding: [Getter/Setter],
        getUserAgent: [Getter/Setter],
        setUserAgent: [Getter/Setter],
        hasUserAgent: [Getter/Setter],
        getAuthorization: [Getter/Setter],
        setAuthorization: [Getter/Setter],
        hasAuthorization: [Getter/Setter],
        [Symbol(Symbol.iterator)]: [Function],
      },
      baseURL: "https://fastrestapis.fasturl.cloud/",
      params: {
        ask: "buatkan saya logo group warna galaxy dan nama yeena 🚩",
      },
      method: "get",
      url: "aillm/gpt-4o-mini",
      allowAbsoluteUrls: true,
      data: undefined,
    },
    request: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: AbortController {
        signal: AbortSignal {
          aborted: false,
          reason: undefined,
          onabort: null,
          throwIfAborted: [Function: throwIfAborted],
          addEventListener: [Function: addEventListener],
          removeEventListener: [Function: removeEventListener],
          dispatchEvent: [Function: dispatchEvent],
        },
        abort: [Function: abort],
      },
      [Symbol(agent)]: Agent {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        [Symbol(kCapture)]: false,
        defaultPort: 443,
        protocol: "https:",
        options: {
          keepAlive: true,
          scheduling: "lifo",
          timeout: 5000,
          path: null,
          noDelay: true,
        },
        requests: [Object: null prototype] {},
        sockets: [Object: null prototype] {},
        freeSockets: [Object: null prototype] {},
        keepAliveMsecs: 1000,
        keepAlive: true,
        maxSockets: Infinity,
        maxFreeSockets: 256,
        scheduling: "lifo",
        maxTotalSockets: undefined,
        totalSocketCount: 0,
        maxCachedSessions: 100,
        createConnection: undefined,
        getName: [Function],
        addRequest: [Function],
        createSocket: [Function],
        removeSocket: [Function],
        keepSocketAlive: [Function],
        reuseSocket: [Function],
        destroy: [Function],
        setMaxListeners: [Function: setMaxListeners],
        getMaxListeners: [Function: getMaxListeners],
        emit: [Function: emit],
        addListener: [Function: addListener],
        on: [Function: addListener],
        prependListener: [Function: prependListener],
        once: [Function: once],
        prependOnceListener: [Function: prependOnceListener],
        removeListener: [Function: removeListener],
        off: [Function: removeListener],
        removeAllListeners: [Function: removeAllListeners],
        listeners: [Function: listeners],
        rawListeners: [Function: rawListeners],
        listenerCount: [Function: listenerCount],
        eventNames: [Function: eventNames],
      },
      destroyed: false,
      [Symbol(protocol)]: "https:",
      [Symbol(port)]: 443,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "fastrestapis.fasturl.link",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "GET",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/aillm/gpt-4o-mini?ask=buatkan+saya+logo+group+warna+galaxy+dan+nama+yeena+%F0%9F%9A%A9",
      _events: [Object: null prototype] {
        abort: [
          [Function]
        ],
        aborted: [
          [Function]
        ],
        connect: [
          [Function]
        ],
        error: [
          [Function]
        ],
        socket: [
          [Function]
        ],
        timeout: [
          [Function]
        ],
      },
      _eventsCount: 6,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers {
        "accept": "application/json, text/plain, */*",
        "user-agent": "axios/1.10.0",
        "accept-encoding": "gzip, compress, deflate, br",
      },
      [Symbol(options)]: {
        maxRedirects: 21,
        maxBodyLength: Infinity,
        protocol: "https:",
        path: "/aillm/gpt-4o-mini?ask=buatkan+saya+logo+group+warna+galaxy+dan+nama+yeena+%F0%9F%9A%A9",
        method: "GET",
        headers: [Object: null prototype] {
          Accept: "application/json, text/plain, */*",
          "User-Agent": "axios/1.10.0",
          "Accept-Encoding": "gzip, compress, deflate, br",
        },
        agents: {
          http: undefined,
          https: undefined,
        },
        auth: undefined,
        family: undefined,
        beforeRedirect: [Function: dispatchBeforeRedirect],
        beforeRedirects: {
          proxy: [Function: beforeRedirect],
        },
        hostname: "fastrestapis.fasturl.link",
        port: "",
        agent: undefined,
        nativeProtocols: {
          "http:": {
            Agent: [EventEmitter: Agent],
            Server: [EventEmitter: Server2],
            METHODS: [
              "ACL", "BIND", "CHECKOUT", "CONNECT", "COPY", "DELETE", "GET", "HEAD", "LINK", "LOCK",
              "M-SEARCH", "MERGE", "MKACTIVITY", "MKCALENDAR", "MKCOL", "MOVE", "NOTIFY", "OPTIONS",
              "PATCH", "POST", "PROPFIND", "PROPPATCH", "PURGE", "PUT", "QUERY", "REBIND", "REPORT",
              "SEARCH", "SOURCE", "SUBSCRIBE", "TRACE", "UNBIND", "UNLINK", "UNLOCK", "UNSUBSCRIBE"
            ],
            STATUS_CODES: {
              "100": "Continue",
              "101": "Switching Protocols",
              "102": "Processing",
              "103": "Early Hints",
              "200": "OK",
              "201": "Created",
              "202": "Accepted",
              "203": "Non-Authoritative Information",
              "204": "No Content",
              "205": "Reset Content",
              "206": "Partial Content",
              "207": "Multi-Status",
              "208": "Already Reported",
              "226": "IM Used",
              "300": "Multiple Choices",
              "301": "Moved Permanently",
              "302": "Found",
              "303": "See Other",
              "304": "Not Modified",
              "305": "Use Proxy",
              "307": "Temporary Redirect",
              "308": "Permanent Redirect",
              "400": "Bad Request",
              "401": "Unauthorized",
              "402": "Payment Required",
              "403": "Forbidden",
              "404": "Not Found",
              "405": "Method Not Allowed",
              "406": "Not Acceptable",
              "407": "Proxy Authentication Required",
              "408": "Request Timeout",
              "409": "Conflict",
              "410": "Gone",
              "411": "Length Required",
              "412": "Precondition Failed",
              "413": "Payload Too Large",
              "414": "URI Too Long",
              "415": "Unsupported Media Type",
              "416": "Range Not Satisfiable",
              "417": "Expectation Failed",
              "418": "I'm a Teapot",
              "421": "Misdirected Request",
              "422": "Unprocessable Entity",
              "423": "Locked",
              "424": "Failed Dependency",
              "425": "Too Early",
              "426": "Upgrade Required",
              "428": "Precondition Required",
              "429": "Too Many Requests",
              "431": "Request Header Fields Too Large",
              "451": "Unavailable For Legal Reasons",
              "500": "Internal Server Error",
              "501": "Not Implemented",
              "502": "Bad Gateway",
              "503": "Service Unavailable",
              "504": "Gateway Timeout",
              "505": "HTTP Version Not Supported",
              "506": "Variant Also Negotiates",
              "507": "Insufficient Storage",
              "508": "Loop Detected",
              "509": "Bandwidth Limit Exceeded",
              "510": "Not Extended",
              "511": "Network Authentication Required",
            },
            createServer: [Function: createServer],
            ServerResponse: [Stream: ServerResponse],
            IncomingMessage: [Readable: IncomingMessage],
            request: [Function: request],
            get: [Function: get],
            maxHeaderSize: [Getter/Setter],
            validateHeaderName: [Function],
            validateHeaderValue: [Function],
            setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
            globalAgent: Agent {
              _events: [Object: null prototype] {},
              _eventsCount: 0,
              _maxListeners: undefined,
              [Symbol(kCapture)]: false,
              defaultPort: 80,
              protocol: "http:",
              options: {
                path: null,
                noDelay: true,
              },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: 1000,
              keepAlive: false,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              scheduling: "lifo",
              maxTotalSockets: undefined,
              totalSocketCount: 0,
              createConnection: [Function],
              getName: [Function],
              addRequest: [Function],
              createSocket: [Function],
              removeSocket: [Function],
              keepSocketAlive: [Function],
              reuseSocket: [Function],
              destroy: [Function],
              setMaxListeners: [Function: setMaxListeners],
              getMaxListeners: [Function: getMaxListeners],
              emit: [Function: emit],
              addListener: [Function: addListener],
              on: [Function: addListener],
              prependListener: [Function: prependListener],
              once: [Function: once],
              prependOnceListener: [Function: prependOnceListener],
              removeListener: [Function: removeListener],
              off: [Function: removeListener],
              removeAllListeners: [Function: removeAllListeners],
              listeners: [Function: listeners],
              rawListeners: [Function: rawListeners],
              listenerCount: [Function: listenerCount],
              eventNames: [Function: eventNames],
            },
            ClientRequest: [OutgoingMessage: ClientRequest],
            OutgoingMessage: [Stream: OutgoingMessage],
            WebSocket: [class Function extends Function],
            CloseEvent: [class Function extends Function],
            MessageEvent: [class Function extends Function],
          },
          "https:": {
            Agent: [Agent],
            globalAgent: Agent {
              _events: [Object: null prototype] {},
              _eventsCount: 0,
              _maxListeners: undefined,
              [Symbol(kCapture)]: false,
              defaultPort: 443,
              protocol: "https:",
              options: {
                keepAlive: true,
                scheduling: "lifo",
                timeout: 5000,
                path: null,
                noDelay: true,
              },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: 1000,
              keepAlive: true,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              scheduling: "lifo",
              maxTotalSockets: undefined,
              totalSocketCount: 0,
              maxCachedSessions: 100,
              createConnection: undefined,
              getName: [Function],
              addRequest: [Function],
              createSocket: [Function],
              removeSocket: [Function],
              keepSocketAlive: [Function],
              reuseSocket: [Function],
              destroy: [Function],
              setMaxListeners: [Function: setMaxListeners],
              getMaxListeners: [Function: getMaxListeners],
              emit: [Function: emit],
              addListener: [Function: addListener],
              on: [Function: addListener],
              prependListener: [Function: prependListener],
              once: [Function: once],
              prependOnceListener: [Function: prependOnceListener],
              removeListener: [Function: removeListener],
              off: [Function: removeListener],
              removeAllListeners: [Function: removeAllListeners],
              listeners: [Function: listeners],
              rawListeners: [Function: rawListeners],
              listenerCount: [Function: listenerCount],
              eventNames: [Function: eventNames],
            },
            Server: [EventEmitter: Server2],
            createServer: [Function: createServer],
            get: [Function: get],
            request: [Function: request],
          },
        },
        pathname: "/aillm/gpt-4o-mini",
        search: "?ask=buatkan+saya+logo+group+warna+galaxy+dan+nama+yeena+%F0%9F%9A%A9",
        href: "https://fastrestapis.fasturl.link/aillm/gpt-4o-mini?ask=buatkan+saya+logo+group+warna+galaxy+dan+nama+yeena+%F0%9F%9A%A9",
        query: undefined,
        hash: "",
        _defaultAgent: Agent {
          _events: [Object: null prototype] {},
          _eventsCount: 0,
          _maxListeners: undefined,
          [Symbol(kCapture)]: false,
          defaultPort: 443,
          protocol: "https:",
          options: {
            keepAlive: true,
            scheduling: "lifo",
            timeout: 5000,
            path: null,
            noDelay: true,
          },
          requests: [Object: null prototype] {},
          sockets: [Object: null prototype] {},
          freeSockets: [Object: null prototype] {},
          keepAliveMsecs: 1000,
          keepAlive: true,
          maxSockets: Infinity,
          maxFreeSockets: 256,
          scheduling: "lifo",
          maxTotalSockets: undefined,
          totalSocketCount: 0,
          maxCachedSessions: 100,
          createConnection: undefined,
          getName: [Function],
          addRequest: [Function],
          createSocket: [Function],
          removeSocket: [Function],
          keepSocketAlive: [Function],
          reuseSocket: [Function],
          destroy: [Function],
          setMaxListeners: [Function: setMaxListeners],
          getMaxListeners: [Function: getMaxListeners],
          emit: [Function: emit],
          addListener: [Function: addListener],
          on: [Function: addListener],
          prependListener: [Function: prependListener],
          once: [Function: once],
          prependOnceListener: [Function: prependOnceListener],
          removeListener: [Function: removeListener],
          off: [Function: removeListener],
          removeAllListeners: [Function: removeAllListeners],
          listeners: [Function: listeners],
          rawListeners: [Function: rawListeners],
          listenerCount: [Function: listenerCount],
          eventNames: [Function: eventNames],
        },
        host: "fastrestapis.fasturl.link",
      },
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: Writable {
        _events: {
          close: undefined,
          error: [
            [Function: handleRequestError]
          ],
          prefinish: undefined,
          finish: undefined,
          drain: undefined,
          response: [
            [Function: handleResponse]
          ],
          socket: [
            [Function: handleRequestSocket]
          ],
        },
        _writableState: {
          [Symbol(kState)]: 17580812,
          highWaterMark: 65536,
          length: 0,
          corked: 0,
          onwrite: [Function: onwrite],
          writelen: 0,
          [Symbol(kBufferedValue)]: null,
          bufferedIndex: 0,
          pendingcb: 0,
          objectMode: [Getter/Setter],
          finalCalled: [Getter/Setter],
          needDrain: [Getter/Setter],
          ending: [Getter/Setter],
          ended: [Getter/Setter],
          finished: [Getter/Setter],
          destroyed: [Getter/Setter],
          decodeStrings: [Getter/Setter],
          writing: [Getter/Setter],
          sync: [Getter/Setter],
          bufferProcessing: [Getter/Setter],
          constructed: [Getter/Setter],
          prefinished: [Getter/Setter],
          errorEmitted: [Getter/Setter],
          emitClose: [Getter/Setter],
          autoDestroy: [Getter/Setter],
          closed: [Getter/Setter],
          closeEmitted: [Getter/Setter],
          allBuffers: [Getter/Setter],
          allNoop: [Getter/Setter],
          errored: [Getter/Setter],
          writable: [Getter/Setter],
          defaultEncoding: [Getter/Setter],
          writecb: [Getter/Setter],
          afterWriteTickInfo: [Getter/Setter],
          buffered: [Getter/Setter],
          getBuffer: [Function: getBuffer],
          bufferedRequestCount: [Getter],
          [Symbol(kOnConstructed)]: [Function: onConstructed],
        },
        _maxListeners: undefined,
        [Symbol(kCapture)]: false,
        _options: {
          maxRedirects: 21,
          maxBodyLength: Infinity,
          protocol: "https:",
          path: "/aillm/gpt-4o-mini?ask=buatkan+saya+logo+group+warna+galaxy+dan+nama+yeena+%F0%9F%9A%A9",
          method: "GET",
          headers: [Object: null prototype] {
            Accept: "application/json, text/plain, */*",
            "User-Agent": "axios/1.10.0",
            "Accept-Encoding": "gzip, compress, deflate, br",
          },
          agents: {
            http: undefined,
            https: undefined,
          },
          auth: undefined,
          family: undefined,
          beforeRedirect: [Function: dispatchBeforeRedirect],
          beforeRedirects: {
            proxy: [Function: beforeRedirect],
          },
          hostname: "fastrestapis.fasturl.link",
          port: "",
          agent: undefined,
          nativeProtocols: {
            "http:": {
              Agent: [EventEmitter: Agent],
              Server: [EventEmitter: Server2],
              METHODS: [
                "ACL", "BIND", "CHECKOUT", "CONNECT", "COPY", "DELETE", "GET", "HEAD", "LINK", "LOCK",
                "M-SEARCH", "MERGE", "MKACTIVITY", "MKCALENDAR", "MKCOL", "MOVE", "NOTIFY", "OPTIONS",
                "PATCH", "POST", "PROPFIND", "PROPPATCH", "PURGE", "PUT", "QUERY", "REBIND", "REPORT",
                "SEARCH", "SOURCE", "SUBSCRIBE", "TRACE", "UNBIND", "UNLINK", "UNLOCK", "UNSUBSCRIBE"
              ],
              STATUS_CODES: {
                "100": "Continue",
                "101": "Switching Protocols",
                "102": "Processing",
                "103": "Early Hints",
                "200": "OK",
                "201": "Created",
                "202": "Accepted",
                "203": "Non-Authoritative Information",
                "204": "No Content",
                "205": "Reset Content",
                "206": "Partial Content",
                "207": "Multi-Status",
                "208": "Already Reported",
                "226": "IM Used",
                "300": "Multiple Choices",
                "301": "Moved Permanently",
                "302": "Found",
                "303": "See Other",
                "304": "Not Modified",
                "305": "Use Proxy",
                "307": "Temporary Redirect",
                "308": "Permanent Redirect",
                "400": "Bad Request",
                "401": "Unauthorized",
                "402": "Payment Required",
                "403": "Forbidden",
                "404": "Not Found",
                "405": "Method Not Allowed",
                "406": "Not Acceptable",
                "407": "Proxy Authentication Required",
                "408": "Request Timeout",
                "409": "Conflict",
                "410": "Gone",
                "411": "Length Required",
                "412": "Precondition Failed",
                "413": "Payload Too Large",
                "414": "URI Too Long",
                "415": "Unsupported Media Type",
                "416": "Range Not Satisfiable",
                "417": "Expectation Failed",
                "418": "I'm a Teapot",
                "421": "Misdirected Request",
                "422": "Unprocessable Entity",
                "423": "Locked",
                "424": "Failed Dependency",
                "425": "Too Early",
                "426": "Upgrade Required",
                "428": "Precondition Required",
                "429": "Too Many Requests",
                "431": "Request Header Fields Too Large",
                "451": "Unavailable For Legal Reasons",
                "500": "Internal Server Error",
                "501": "Not Implemented",
                "502": "Bad Gateway",
                "503": "Service Unavailable",
                "504": "Gateway Timeout",
                "505": "HTTP Version Not Supported",
                "506": "Variant Also Negotiates",
                "507": "Insufficient Storage",
                "508": "Loop Detected",
                "509": "Bandwidth Limit Exceeded",
                "510": "Not Extended",
                "511": "Network Authentication Required",
              },
              createServer: [Function: createServer],
              ServerResponse: [Stream: ServerResponse],
              IncomingMessage: [Readable: IncomingMessage],
              request: [Function: request],
              get: [Function: get],
              maxHeaderSize: [Getter/Setter],
              validateHeaderName: [Function],
              validateHeaderValue: [Function],
              setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
              globalAgent: Agent {
                _events: [Object: null prototype] {},
                _eventsCount: 0,
                _maxListeners: undefined,
                [Symbol(kCapture)]: false,
                defaultPort: 80,
                protocol: "http:",
                options: {
                  path: null,
                  noDelay: true,
                },
                requests: [Object: null prototype] {},
                sockets: [Object: null prototype] {},
                freeSockets: [Object: null prototype] {},
                keepAliveMsecs: 1000,
                keepAlive: false,
                maxSockets: Infinity,
                maxFreeSockets: 256,
                scheduling: "lifo",
                maxTotalSockets: undefined,
                totalSocketCount: 0,
                createConnection: [Function],
                getName: [Function],
                addRequest: [Function],
                createSocket: [Function],
                removeSocket: [Function],
                keepSocketAlive: [Function],
                reuseSocket: [Function],
                destroy: [Function],
                setMaxListeners: [Function: setMaxListeners],
                getMaxListeners: [Function: getMaxListeners],
                emit: [Function: emit],
                addListener: [Function: addListener],
                on: [Function: addListener],
                prependListener: [Function: prependListener],
                once: [Function: once],
                prependOnceListener: [Function: prependOnceListener],
                removeListener: [Function: removeListener],
                off: [Function: removeListener],
                removeAllListeners: [Function: removeAllListeners],
                listeners: [Function: listeners],
                rawListeners: [Function: rawListeners],
                listenerCount: [Function: listenerCount],
                eventNames: [Function: eventNames],
              },
              ClientRequest: [OutgoingMessage: ClientRequest],
              OutgoingMessage: [Stream: OutgoingMessage],
              WebSocket: [class Function extends Function],
              CloseEvent: [class Function extends Function],
              MessageEvent: [class Function extends Function],
            },
            "https:": {
              Agent: [Agent],
              globalAgent: Agent {
                _events: [Object: null prototype] {},
                _eventsCount: 0,
                _maxListeners: undefined,
                [Symbol(kCapture)]: false,
                defaultPort: 443,
                protocol: "https:",
                options: {
                  keepAlive: true,
                  scheduling: "lifo",
                  timeout: 5000,
                  path: null,
                  noDelay: true,
                },
                requests: [Object: null prototype] {},
                sockets: [Object: null prototype] {},
                freeSockets: [Object: null prototype] {},
                keepAliveMsecs: 1000,
                keepAlive: true,
                maxSockets: Infinity,
                maxFreeSockets: 256,
                scheduling: "lifo",
                maxTotalSockets: undefined,
                totalSocketCount: 0,
                maxCachedSessions: 100,
                createConnection: undefined,
                getName: [Function],
                addRequest: [Function],
                createSocket: [Function],
                removeSocket: [Function],
                keepSocketAlive: [Function],
                reuseSocket: [Function],
                destroy: [Function],
                setMaxListeners: [Function: setMaxListeners],
                getMaxListeners: [Function: getMaxListeners],
                emit: [Function: emit],
                addListener: [Function: addListener],
                on: [Function: addListener],
                prependListener: [Function: prependListener],
                once: [Function: once],
                prependOnceListener: [Function: prependOnceListener],
                removeListener: [Function: removeListener],
                off: [Function: removeListener],
                removeAllListeners: [Function: removeAllListeners],
                listeners: [Function: listeners],
                rawListeners: [Function: rawListeners],
                listenerCount: [Function: listenerCount],
                eventNames: [Function: eventNames],
              },
              Server: [EventEmitter: Server2],
              createServer: [Function: createServer],
              get: [Function: get],
              request: [Function: request],
            },
          },
          pathname: "/aillm/gpt-4o-mini",
          search: "?ask=buatkan+saya+logo+group+warna+galaxy+dan+nama+yeena+%F0%9F%9A%A9",
          href: "https://fastrestapis.fasturl.link/aillm/gpt-4o-mini?ask=buatkan+saya+logo+group+warna+galaxy+dan+nama+yeena+%F0%9F%9A%A9",
          query: undefined,
          hash: "",
        },
        _ended: true,
        _ending: true,
        _redirectCount: 1,
        _redirects: [],
        _requestBodyLength: 0,
        _requestBodyBuffers: [],
        _eventsCount: NaN,
        _onNativeResponse: [Function],
        _currentRequest: [Circular],
        _currentUrl: "https://fastrestapis.fasturl.link/aillm/gpt-4o-mini?ask=buatkan+saya+logo+group+warna+galaxy+dan+nama+yeena+%F0%9F%9A%A9",
        _isRedirect: true,
        abort: [Function],
        destroy: [Function],
        write: [Function],
        end: [Function],
        setHeader: [Function],
        removeHeader: [Function],
        setTimeout: [Function],
        flushHeaders: [Function],
        getHeader: [Function],
        setNoDelay: [Function],
        setSocketKeepAlive: [Function],
        aborted: [Getter],
        connection: [Getter],
        socket: [Getter],
        _sanitizeOptions: [Function],
        _performRequest: [Function],
        _processResponse: [Function],
        pipe: [Function],
        cork: [Function],
        uncork: [Function],
        setDefaultEncoding: [Function: setDefaultEncoding],
        _write: [Function],
        _writev: null,
        closed: [Getter],
        destroyed: [Getter/Setter],
        writable: [Getter/Setter],
        writableFinished: [Getter],
        writableObjectMode: [Getter],
        writableBuffer: [Getter],
        writableEnded: [Getter],
        writableNeedDrain: [Getter],
        writableHighWaterMark: [Getter],
        writableCorked: [Getter],
        writableLength: [Getter],
        errored: [Getter],
        writableAborted: [Getter],
        _undestroy: [Function: undestroy],
        _destroy: [Function],
        [Symbol(nodejs.rejection)]: [Function],
        [Symbol(Symbol.asyncDispose)]: [Function],
        eventNames: [Function: eventNames],
        setMaxListeners: [Function: setMaxListeners],
        getMaxListeners: [Function: getMaxListeners],
        emit: [Function: emit],
        addListener: [Function: addListener],
        on: [Function: addListener],
        prependListener: [Function: prependListener],
        once: [Function: once],
        prependOnceListener: [Function: prependOnceListener],
        removeListener: [Function: removeListener],
        off: [Function: removeListener],
        removeAllListeners: [Function: removeAllListeners],
        listeners: [Function: listeners],
        rawListeners: [Function: rawListeners],
        listenerCount: [Function: listenerCount],
      },
      [Symbol(fetchRequest)]: null,
      [Symbol(fakeSocket)]: Socket {
        _events: {
          close: undefined,
          error: undefined,
          prefinish: undefined,
          finish: undefined,
          drain: undefined,
          data: undefined,
          end: undefined,
          readable: undefined,
        },
        _readableState: {
          [Symbol(kState)]: 1052940,
          highWaterMark: 65536,
          buffer: [],
          bufferIndex: 0,
          length: 0,
          pipes: [],
          awaitDrainWriters: null,
          objectMode: [Getter/Setter],
          ended: [Getter/Setter],
          endEmitted: [Getter/Setter],
          reading: [Getter/Setter],
          constructed: [Getter/Setter],
          sync: [Getter/Setter],
          needReadable: [Getter/Setter],
          emittedReadable: [Getter/Setter],
          readableListening: [Getter/Setter],
          resumeScheduled: [Getter/Setter],
          errorEmitted: [Getter/Setter],
          emitClose: [Getter/Setter],
          autoDestroy: [Getter/Setter],
          destroyed: [Getter/Setter],
          closed: [Getter/Setter],
          closeEmitted: [Getter/Setter],
          multiAwaitDrain: [Getter/Setter],
          readingMore: [Getter/Setter],
          dataEmitted: [Getter/Setter],
          errored: [Getter/Setter],
          defaultEncoding: [Getter/Setter],
          decoder: [Getter/Setter],
          encoding: [Getter/Setter],
          flowing: [Getter/Setter],
          pipesCount: [Getter],
          paused: [Getter/Setter],
          [Symbol(kOnConstructed)]: [Function: onConstructed],
        },
        _writableState: {
          [Symbol(kState)]: 17580812,
          highWaterMark: 65536,
          length: 0,
          corked: 0,
          onwrite: [Function: onwrite],
          writelen: 0,
          [Symbol(kBufferedValue)]: null,
          bufferedIndex: 0,
          pendingcb: 0,
          objectMode: [Getter/Setter],
          finalCalled: [Getter/Setter],
          needDrain: [Getter/Setter],
          ending: [Getter/Setter],
          ended: [Getter/Setter],
          finished: [Getter/Setter],
          destroyed: [Getter/Setter],
          decodeStrings: [Getter/Setter],
          writing: [Getter/Setter],
          sync: [Getter/Setter],
          bufferProcessing: [Getter/Setter],
          constructed: [Getter/Setter],
          prefinished: [Getter/Setter],
          errorEmitted: [Getter/Setter],
          emitClose: [Getter/Setter],
          autoDestroy: [Getter/Setter],
          closed: [Getter/Setter],
          closeEmitted: [Getter/Setter],
          allBuffers: [Getter/Setter],
          allNoop: [Getter/Setter],
          errored: [Getter/Setter],
          writable: [Getter/Setter],
          defaultEncoding: [Getter/Setter],
          writecb: [Getter/Setter],
          afterWriteTickInfo: [Getter/Setter],
          buffered: [Getter/Setter],
          getBuffer: [Function: getBuffer],
          bufferedRequestCount: [Getter],
          [Symbol(kOnConstructed)]: [Function: onConstructed],
        },
        allowHalfOpen: true,
        _maxListeners: undefined,
        [Symbol(kCapture)]: false,
        [Symbol(::bunternal::)]: undefined,
        bytesRead: 0,
        bytesWritten: 0,
        connecting: false,
        timeout: 0,
        isServer: false,
        _httpMessage: [Circular],
        _onTimeout: [Function],
        address: [Function: address],
        bufferSize: [Getter],
        connect: [Function: connect],
        _destroy: [Function: _destroy],
        _final: [Function: _final],
        localAddress: [Getter],
        localFamily: [Getter],
        localPort: [Getter],
        pending: [Getter],
        _read: [Function: _read],
        readyState: [Getter],
        ref: [Function: ref],
        remoteAddress: [Getter/Setter],
        remotePort: [Getter/Setter],
        remoteFamily: [Getter/Setter],
        resetAndDestroy: [Function: resetAndDestroy],
        setKeepAlive: [Function: setKeepAlive],
        setNoDelay: [Function: setNoDelay],
        setTimeout: [Function: setTimeout],
        unref: [Function: unref],
        _write: [Function: _write],
        destroy: [Function: destroy],
        write: [Function],
        cork: [Function],
        uncork: [Function],
        setDefaultEncoding: [Function: setDefaultEncoding],
        _writev: null,
        end: [Function],
        writable: [Getter/Setter],
        writableHighWaterMark: [Getter],
        writableObjectMode: [Getter],
        writableBuffer: [Getter],
        writableLength: [Getter],
        writableFinished: [Getter],
        writableCorked: [Getter],
        writableEnded: [Getter],
        writableNeedDrain: [Getter],
        destroyed: [Getter/Setter],
        _undestroy: [Function: undestroy],
        push: [Function],
        unshift: [Function],
        isPaused: [Function],
        setEncoding: [Function],
        read: [Function],
        pipe: [Function],
        unpipe: [Function],
        on: [Function],
        addListener: [Function],
        removeListener: [Function],
        off: [Function],
        removeAllListeners: [Function],
        resume: [Function],
        pause: [Function],
        wrap: [Function],
        iterator: [Function],
        readable: [Getter/Setter],
        readableDidRead: [Getter],
        readableAborted: [Getter],
        readableHighWaterMark: [Getter],
        readableBuffer: [Getter],
        readableFlowing: [Getter/Setter],
        readableLength: [Getter],
        readableObjectMode: [Getter],
        readableEncoding: [Getter],
        errored: [Getter],
        closed: [Getter],
        readableEnded: [Getter],
        drop: [Function],
        filter: [Function],
        flatMap: [Function],
        map: [Function],
        take: [Function],
        compose: [Function],
        every: [Function],
        forEach: [Function],
        reduce: [Function],
        toArray: [Function],
        some: [Function],
        find: [Function],
        [Symbol(nodejs.rejection)]: [Function],
        [Symbol(Symbol.asyncDispose)]: [Function],
        [Symbol(Symbol.asyncIterator)]: [Function],
        eventNames: [Function: eventNames],
      },
      res: IncomingMessage {
        [Symbol(aborted)]: false,
        [Symbol(eofInProgress)]: true,
        _consuming: true,
        _dumped: false,
        complete: true,
        _closed: false,
        [Symbol(noBody)]: false,
        _events: {
          error: [
            [Function: handleStreamError]
          ],
          data: [
            [Function: handleStreamData]
          ],
          end: [
            [Function: handleStreamEnd]
          ],
          readable: undefined,
          aborted: [
            [Function: handlerStreamAborted]
          ],
        },
        _readableState: {
          [Symbol(kState)]: 194512764,
          highWaterMark: 65536,
          buffer: [],
          bufferIndex: 0,
          length: 0,
          pipes: [],
          awaitDrainWriters: null,
          objectMode: [Getter/Setter],
          ended: [Getter/Setter],
          endEmitted: [Getter/Setter],
          reading: [Getter/Setter],
          constructed: [Getter/Setter],
          sync: [Getter/Setter],
          needReadable: [Getter/Setter],
          emittedReadable: [Getter/Setter],
          readableListening: [Getter/Setter],
          resumeScheduled: [Getter/Setter],
          errorEmitted: [Getter/Setter],
          emitClose: [Getter/Setter],
          autoDestroy: [Getter/Setter],
          destroyed: [Getter/Setter],
          closed: [Getter/Setter],
          closeEmitted: [Getter/Setter],
          multiAwaitDrain: [Getter/Setter],
          readingMore: [Getter/Setter],
          dataEmitted: [Getter/Setter],
          errored: [Getter/Setter],
          defaultEncoding: [Getter/Setter],
          decoder: [Getter/Setter],
          encoding: [Getter/Setter],
          flowing: [Getter/Setter],
          pipesCount: [Getter],
          paused: [Getter/Setter],
          [Symbol(kOnConstructed)]: [Function: onConstructed],
        },
        _maxListeners: undefined,
        [Symbol(kCapture)]: false,
        _eventsCount: NaN,
        [Symbol(FetchAPI)]: Response (0 KB) {
          ok: false,
          url: "https://fastrestapis.fasturl.link/aillm/gpt-4o-mini?ask=buatkan+saya+logo+group+warna+galaxy+dan+nama+yeena+%F0%9F%9A%A9",
          status: 502,
          statusText: "Bad Gateway",
          headers: Headers {
            "date": "Sat, 28 Jun 2025 11:38:20 GMT",
            "content-type": "text/html; charset=UTF-8",
            "content-length": "6460",
            "connection": "keep-alive",
            "cache-control": "private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
            "expires": "Thu, 01 Jan 1970 00:00:01 GMT",
            "referrer-policy": "same-origin",
            "x-frame-options": "SAMEORIGIN",
            "server": "cloudflare",
            "cf-ray": "956ce5b0dab303f8-FRA",
          },
          redirected: false,
          bodyUsed: true
        },
        [Symbol(type)]: 1,
        [Symbol(bodyStream)]: undefined,
        [Symbol(statusMessage)]: "Bad Gateway",
        [Symbol(statusCode)]: 502,
        url: "/aillm/gpt-4o-mini?ask=buatkan+saya+logo+group+warna+galaxy+dan+nama+yeena+%F0%9F%9A%A9",
        headers: {
          date: "Sat, 28 Jun 2025 11:38:20 GMT",
          "content-type": "text/html; charset=UTF-8",
          "content-length": "6460",
          connection: "keep-alive",
          "cache-control": "private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
          expires: "Thu, 01 Jan 1970 00:00:01 GMT",
          "referrer-policy": "same-origin",
          "x-frame-options": "SAMEORIGIN",
          server: "cloudflare",
          "cf-ray": "956ce5b0dab303f8-FRA",
        },
        rawHeaders: [
          "date", "Sat, 28 Jun 2025 11:38:20 GMT", "content-type", "text/html; charset=UTF-8",
          "content-length", "6460", "connection", "keep-alive", "cache-control", "private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
          "expires", "Thu, 01 Jan 1970 00:00:01 GMT", "referrer-policy", "same-origin", "x-frame-options",
          "SAMEORIGIN", "Server", "cloudflare", "CF-RAY", "956ce5b0dab303f8-FRA"
        ],
        [Symbol(fakeSocket)]: Socket {
          _events: {
            close: undefined,
            error: undefined,
            prefinish: undefined,
            finish: undefined,
            drain: undefined,
            data: undefined,
            end: undefined,
            readable: undefined,
          },
          _readableState: {
            [Symbol(kState)]: 59779340,
            highWaterMark: 65536,
            buffer: [],
            bufferIndex: 0,
            length: 0,
            pipes: [],
            awaitDrainWriters: null,
            objectMode: [Getter/Setter],
            ended: [Getter/Setter],
            endEmitted: [Getter/Setter],
            reading: [Getter/Setter],
            constructed: [Getter/Setter],
            sync: [Getter/Setter],
            needReadable: [Getter/Setter],
            emittedReadable: [Getter/Setter],
            readableListening: [Getter/Setter],
            resumeScheduled: [Getter/Setter],
            errorEmitted: [Getter/Setter],
            emitClose: [Getter/Setter],
            autoDestroy: [Getter/Setter],
            destroyed: [Getter/Setter],
            closed: [Getter/Setter],
            closeEmitted: [Getter/Setter],
            multiAwaitDrain: [Getter/Setter],
            readingMore: [Getter/Setter],
            dataEmitted: [Getter/Setter],
            errored: [Getter/Setter],
            defaultEncoding: [Getter/Setter],
            decoder: [Getter/Setter],
            encoding: [Getter/Setter],
            flowing: [Getter/Setter],
            pipesCount: [Getter],
            paused: [Getter/Setter],
            [Symbol(kOnConstructed)]: [Function: onConstructed],
          },
          _writableState: {
            [Symbol(kState)]: 17580812,
            highWaterMark: 65536,
            length: 0,
            corked: 0,
            onwrite: [Function: onwrite],
            writelen: 0,
            [Symbol(kBufferedValue)]: null,
            bufferedIndex: 0,
            pendingcb: 0,
            objectMode: [Getter/Setter],
            finalCalled: [Getter/Setter],
            needDrain: [Getter/Setter],
            ending: [Getter/Setter],
            ended: [Getter/Setter],
            finished: [Getter/Setter],
            destroyed: [Getter/Setter],
            decodeStrings: [Getter/Setter],
            writing: [Getter/Setter],
            sync: [Getter/Setter],
            bufferProcessing: [Getter/Setter],
            constructed: [Getter/Setter],
            prefinished: [Getter/Setter],
            errorEmitted: [Getter/Setter],
            emitClose: [Getter/Setter],
            autoDestroy: [Getter/Setter],
            closed: [Getter/Setter],
            closeEmitted: [Getter/Setter],
            allBuffers: [Getter/Setter],
            allNoop: [Getter/Setter],
            errored: [Getter/Setter],
            writable: [Getter/Setter],
            defaultEncoding: [Getter/Setter],
            writecb: [Getter/Setter],
            afterWriteTickInfo: [Getter/Setter],
            buffered: [Getter/Setter],
            getBuffer: [Function: getBuffer],
            bufferedRequestCount: [Getter],
            [Symbol(kOnConstructed)]: [Function: onConstructed],
          },
          allowHalfOpen: true,
          _maxListeners: undefined,
          [Symbol(kCapture)]: false,
          [Symbol(::bunternal::)]: undefined,
          bytesRead: 0,
          bytesWritten: 0,
          connecting: false,
          timeout: 0,
          isServer: false,
          _httpMessage: [Circular],
          _onTimeout: [Function],
          encrypted: true,
          address: [Function: address],
          bufferSize: [Getter],
          connect: [Function: connect],
          _destroy: [Function: _destroy],
          _final: [Function: _final],
          localAddress: [Getter],
          localFamily: [Getter],
          localPort: [Getter],
          pending: [Getter],
          _read: [Function: _read],
          readyState: [Getter],
          ref: [Function: ref],
          remoteAddress: [Getter/Setter],
          remotePort: [Getter/Setter],
          remoteFamily: [Getter/Setter],
          resetAndDestroy: [Function: resetAndDestroy],
          setKeepAlive: [Function: setKeepAlive],
          setNoDelay: [Function: setNoDelay],
          setTimeout: [Function: setTimeout],
          unref: [Function: unref],
          _write: [Function: _write],
          destroy: [Function: destroy],
          write: [Function],
          cork: [Function],
          uncork: [Function],
          setDefaultEncoding: [Function: setDefaultEncoding],
          _writev: null,
          end: [Function],
          writable: [Getter/Setter],
          writableHighWaterMark: [Getter],
          writableObjectMode: [Getter],
          writableBuffer: [Getter],
          writableLength: [Getter],
          writableFinished: [Getter],
          writableCorked: [Getter],
          writableEnded: [Getter],
          writableNeedDrain: [Getter],
          destroyed: [Getter/Setter],
          _undestroy: [Function: undestroy],
          push: [Function],
          unshift: [Function],
          isPaused: [Function],
          setEncoding: [Function],
          read: [Function],
          pipe: [Function],
          unpipe: [Function],
          on: [Function],
          addListener: [Function],
          removeListener: [Function],
          off: [Function],
          removeAllListeners: [Function],
          resume: [Function],
          pause: [Function],
          wrap: [Function],
          iterator: [Function],
          readable: [Getter/Setter],
          readableDidRead: [Getter],
          readableAborted: [Getter],
          readableHighWaterMark: [Getter],
          readableBuffer: [Getter],
          readableFlowing: [Getter/Setter],
          readableLength: [Getter],
          readableObjectMode: [Getter],
          readableEncoding: [Getter],
          errored: [Getter],
          closed: [Getter],
          readableEnded: [Getter],
          drop: [Function],
          filter: [Function],
          flatMap: [Function],
          map: [Function],
          take: [Function],
          compose: [Function],
          every: [Function],
          forEach: [Function],
          reduce: [Function],
          toArray: [Function],
          some: [Function],
          find: [Function],
          [Symbol(nodejs.rejection)]: [Function],
          [Symbol(Symbol.asyncDispose)]: [Function],
          [Symbol(Symbol.asyncIterator)]: [Function],
          eventNames: [Function: eventNames],
        },
        req: [Circular],
        setTimeout: [Function],
        responseUrl: "https://fastrestapis.fasturl.link/aillm/gpt-4o-mini?ask=buatkan+saya+logo+group+warna+galaxy+dan+nama+yeena+%F0%9F%9A%A9",
        redirects: [],
        [Symbol(kAutoDestroyed)]: true,
        httpVersion: "1.1",
        _construct: [Function: _construct],
        _dump: [Function: _dump],
        _read: [Function: _read],
        _finish: [Function: _finish],
        _destroy: [Function: IncomingMessage_destroy],
        aborted: [Getter/Setter],
        connection: [Getter],
        statusCode: [Getter/Setter],
        statusMessage: [Getter/Setter],
        httpVersionMajor: [Getter/Setter],
        httpVersionMinor: [Getter/Setter],
        rawTrailers: [Getter/Setter],
        trailers: [Getter/Setter],
        socket: [Getter/Setter],
        destroy: [Function: destroy],
        _undestroy: [Function: undestroy],
        push: [Function],
        unshift: [Function],
        isPaused: [Function],
        setEncoding: [Function],
        read: [Function],
        pipe: [Function],
        unpipe: [Function],
        on: [Function],
        addListener: [Function],
        removeListener: [Function],
        off: [Function],
        removeAllListeners: [Function],
        resume: [Function],
        pause: [Function],
        wrap: [Function],
        iterator: [Function],
        readable: [Getter/Setter],
        readableDidRead: [Getter],
        readableAborted: [Getter],
        readableHighWaterMark: [Getter],
        readableBuffer: [Getter],
        readableFlowing: [Getter/Setter],
        readableLength: [Getter],
        readableObjectMode: [Getter],
        readableEncoding: [Getter],
        errored: [Getter],
        closed: [Getter],
        destroyed: [Getter/Setter],
        readableEnded: [Getter],
        drop: [Function],
        filter: [Function],
        flatMap: [Function],
        map: [Function],
        take: [Function],
        compose: [Function],
        every: [Function],
        forEach: [Function],
        reduce: [Function],
        toArray: [Function],
        some: [Function],
        find: [Function],
        [Symbol(nodejs.rejection)]: [Function],
        [Symbol(Symbol.asyncDispose)]: [Function],
        [Symbol(Symbol.asyncIterator)]: [Function],
        eventNames: [Function: eventNames],
        setMaxListeners: [Function: setMaxListeners],
        getMaxListeners: [Function: getMaxListeners],
        emit: [Function: emit],
        prependListener: [Function: prependListener],
        once: [Function: once],
        prependOnceListener: [Function: prependOnceListener],
        listeners: [Function: listeners],
        rawListeners: [Function: rawListeners],
        listenerCount: [Function: listenerCount],
      },
      _closed: true,
      complete: true,
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    data: "<!DOCTYPE html>\n<!--[if lt IE 7]> <html class=\"no-js ie6 oldie\" lang=\"en-US\"> <![endif]-->\n<!--[if IE 7]>    <html class=\"no-js ie7 oldie\" lang=\"en-US\"> <![endif]-->\n<!--[if IE 8]>    <html class=\"no-js ie8 oldie\" lang=\"en-US\"> <![endif]-->\n<!--[if gt IE 8]><!--> <html class=\"no-js\" lang=\"en-US\"> <!--<![endif]-->\n<head>\n\n<title>fasturl.link | 502: Bad gateway</title>\n<meta charset=\"UTF-8\" />\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\" />\n<meta name=\"robots\" content=\"noindex, nofollow\" />\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n<link rel=\"stylesheet\" id=\"cf_styles-css\" href=\"/cdn-cgi/styles/main.css\" />\n</head>\n<body>\n<div id=\"cf-wrapper\">\n    <div id=\"cf-error-details\" class=\"p-0\">\n        <header class=\"mx-auto pt-10 lg:pt-6 lg:px-8 w-240 lg:w-full mb-8\">\n            <h1 class=\"inline-block sm:block sm:mb-2 font-light text-60 lg:text-4xl text-black-dark leading-tight mr-2\">\n                <span class=\"inline-block\">Bad gateway</span>\n                <span class=\"code-label\">Error code 502</span>\n            </h1>\n            <div>\n                Visit <a href=\"https://www.cloudflare.com/5xx-error-landing?utm_source=errorcode_502&utm_campaign=fastrestapis.fasturl.link\" target=\"_blank\" rel=\"noopener noreferrer\">cloudflare.com</a> for more information.\n            </div>\n            <div class=\"mt-3\">2025-06-28 11:38:20 UTC</div>\n        </header>\n        <div class=\"my-8 bg-gradient-gray\">\n            <div class=\"w-240 lg:w-full mx-auto\">\n                <div class=\"clearfix md:px-8\">\n                    <div id=\"cf-browser-status\" class=\" relative w-1/3 md:w-full py-15 md:p-0 md:py-8 md:text-left md:border-solid md:border-0 md:border-b md:border-gray-400 overflow-hidden float-left md:float-none text-center\">\n  <div class=\"relative mb-10 md:m-0\">\n    \n    <span class=\"cf-icon-browser block md:hidden h-20 bg-center bg-no-repeat\"></span>\n    <span class=\"cf-icon-ok w-12 h-12 absolute left-1/2 md:left-auto md:right-0 md:top-0 -ml-6 -bottom-4\"></span>\n    \n  </div>\n  <span class=\"md:block w-full truncate\">You</span>\n  <h3 class=\"md:inline-block mt-3 md:mt-0 text-2xl text-gray-600 font-light leading-1.3\">\n  \n    Browser\n  \n  </h3>\n  \n  <span class=\"leading-1.3 text-2xl text-green-success\">Working</span>\n  \n</div>\n                    <div id=\"cf-cloudflare-status\" class=\" relative w-1/3 md:w-full py-15 md:p-0 md:py-8 md:text-left md:border-solid md:border-0 md:border-b md:border-gray-400 overflow-hidden float-left md:float-none text-center\">\n  <div class=\"relative mb-10 md:m-0\">\n    <a href=\"https://www.cloudflare.com/5xx-error-landing?utm_source=errorcode_502&#38;utm_campaign=fastrestapis.fasturl.link\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <span class=\"cf-icon-cloud block md:hidden h-20 bg-center bg-no-repeat\"></span>\n    <span class=\"cf-icon-ok w-12 h-12 absolute left-1/2 md:left-auto md:right-0 md:top-0 -ml-6 -bottom-4\"></span>\n    </a>\n  </div>\n  <span class=\"md:block w-full truncate\">Frankfurt</span>\n  <h3 class=\"md:inline-block mt-3 md:mt-0 text-2xl text-gray-600 font-light leading-1.3\">\n  <a href=\"https://www.cloudflare.com/5xx-error-landing?utm_source=errorcode_502&utm_campaign=fastrestapis.fasturl.link\" target=\"_blank\" rel=\"noopener noreferrer\">\n    Cloudflare\n  </a>\n  </h3>\n  \n  <span class=\"leading-1.3 text-2xl text-green-success\">Working</span>\n  \n</div>\n                    <div id=\"cf-host-status\" class=\"cf-error-source relative w-1/3 md:w-full py-15 md:p-0 md:py-8 md:text-left md:border-solid md:border-0 md:border-b md:border-gray-400 overflow-hidden float-left md:float-none text-center\">\n  <div class=\"relative mb-10 md:m-0\">\n    \n    <span class=\"cf-icon-server block md:hidden h-20 bg-center bg-no-repeat\"></span>\n    <span class=\"cf-icon-error w-12 h-12 absolute left-1/2 md:left-auto md:right-0 md:top-0 -ml-6 -bottom-4\"></span>\n    \n  </div>\n  <span class=\"md:block w-full truncate\">fastrestapis.fasturl.link</span>\n  <h3 class=\"md:inline-block mt-3 md:mt-0 text-2xl text-gray-600 font-light leading-1.3\">\n  \n    Host\n  \n  </h3>\n  \n  <span class=\"leading-1.3 text-2xl text-red-error\">Error</span>\n  \n</div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"w-240 lg:w-full mx-auto mb-8 lg:px-8\">\n            <div class=\"clearfix\">\n                <div class=\"w-1/2 md:w-full float-left pr-6 md:pb-10 md:pr-0 leading-relaxed\">\n                    <h2 class=\"text-3xl font-normal leading-1.3 mb-4\">What happened?</h2>\n                    <p>The web server reported a bad gateway error.</p>\n                </div>\n                <div class=\"w-1/2 md:w-full float-left leading-relaxed\">\n                    <h2 class=\"text-3xl font-normal leading-1.3 mb-4\">What can I do?</h2>\n                    <p class=\"mb-6\">Please try again in a few minutes.</p>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"cf-error-footer cf-wrapper w-240 lg:w-full py-10 sm:py-4 sm:px-8 mx-auto text-center sm:text-left border-solid border-0 border-t border-gray-300\">\n    <p class=\"text-13\">\n      <span class=\"cf-footer-item sm:block sm:mb-1\">Cloudflare Ray ID: <strong class=\"font-semibold\">956ce5b0dab303f8</strong></span>\n      <span class=\"cf-footer-separator sm:hidden\">&bull;</span>\n      <span id=\"cf-footer-item-ip\" class=\"cf-footer-item hidden sm:block sm:mb-1\">\n        Your IP:\n        <button type=\"button\" id=\"cf-footer-ip-reveal\" class=\"cf-footer-ip-reveal-btn\">Click to reveal</button>\n        <span class=\"hidden\" id=\"cf-footer-ip\">45.142.115.127</span>\n        <span class=\"cf-footer-separator sm:hidden\">&bull;</span>\n      </span>\n      <span class=\"cf-footer-item sm:block sm:mb-1\"><span>Performance &amp; security by</span> <a rel=\"noopener noreferrer\" href=\"https://www.cloudflare.com/5xx-error-landing?utm_source=errorcode_502&#38;utm_campaign=fastrestapis.fasturl.link\" id=\"brand_link\" target=\"_blank\">Cloudflare</a></span>\n      \n    </p>\n    <script>(function(){function d(){var b=a.getElementById(\"cf-footer-item-ip\"),c=a.getElementById(\"cf-footer-ip-reveal\");b&&\"classList\"in b&&(b.classList.remove(\"hidden\"),c.addEventListener(\"click\",function(){c.classList.add(\"hidden\");a.getElementById(\"cf-footer-ip\").classList.remove(\"hidden\")}))}var a=document;document.addEventListener&&a.addEventListener(\"DOMContentLoaded\",d)})();</script>\n  </div><!-- /.error-footer -->\n\n    </div>\n</div>\n</body>\n</html>",
  },
  status: 502,
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
[18.38.20] ✨ Command ai2 executed successfully
[18.39.17] ℹ️ Executing command: brat
[18.39.17] ✨ Command brat executed successfully
[18.39.43] ℹ️ Executing command: play
[18.40.25] ℹ️ AutoAI diaktifkan di private chat dengan Danzzxxyy
[18.40.25] ℹ️ Calling chatWithMemory for user private_60193734892
[18.40.25] ℹ️ Message: Hah maksud...
[18.40.25] ℹ️ Context: pushName=Danzzxxyy, noTel=60193734892, quotedText=present
[18.40.25] ℹ️ Chat with memory - userId: private_60193734892, message: Hah maksud...
[18.40.25] ℹ️ User name from context: Danzzxxyy
[18.40.25] ℹ️ Getting conversation for user private_60193734892 (Danzzxxyy)
[18.40.25] ℹ️ Creating new conversation for private_60193734892
[18.40.25] ℹ️ Sending message to Gemini: (Membalas pesan: "Hah maksud")...
[18.40.26] ℹ️ Got response from Gemini: Waduh, sorry nih kalo gw bikin...
[18.40.36] ℹ️ AutoAI diaktifkan di private chat dengan Danzzxxyy
[18.40.36] ℹ️ Calling chatWithMemory for user private_60193734892
[18.40.36] ℹ️ Message: Gapapa...
[18.40.36] ℹ️ Context: pushName=Danzzxxyy, noTel=60193734892, quotedText=present
[18.40.36] ℹ️ Chat with memory - userId: private_60193734892, message: Gapapa...
[18.40.36] ℹ️ User name from context: Danzzxxyy
[18.40.36] ℹ️ Getting conversation for user private_60193734892 (Danzzxxyy)
[18.40.36] ℹ️ Sending message to Gemini: (Membalas pesan: "Gapapa") Gap...
[18.40.37] ℹ️ Got response from Gemini: Oke deh, santai aja kalo gitu!...
[18.41.04] ℹ️ Executing command: tagall
[18.41.04] ✨ Command tagall executed successfully
Error in spotify play: AxiosError {
  originalLine: 6,
  originalColumn: 26,
  stack: "Error\n    at settle (/home/roy/kanata-reborn/node_modules/axios/lib/core/settle.js:19:16)\n    at handleStreamEnd (/home/roy/kanata-reborn/node_modules/axios/lib/adapters/http.js:599:11)\n    at emit (node:events:92:22)\n    at endReadableNT (internal:streams/readable:862:50)\n    at processTicksAndRejections (native:7:39)\n    at request (/home/roy/kanata-reborn/node_modules/axios/lib/core/Axios.js:45:41)\n    at processTicksAndRejections (native:7:39)",
  message: "Request failed with status code 524",
  name: "AxiosError",
  code: "ERR_BAD_RESPONSE",
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false,
    },
    adapter: [ "xhr", "http", "fetch" ],
    transformRequest: [
      [Function: transformRequest]
    ],
    transformResponse: [
      [Function: transformResponse]
    ],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData],
      Blob: [class Blob],
    },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": undefined,
      "x-api-key": "anohimitahananonamaewobokutachiwamadashiranai",
      "User-Agent": "axios/1.10.0",
      "Accept-Encoding": "gzip, compress, deflate, br",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    params: {
      url: "https://open.spotify.com/track/2GfIBIeCABdzxZ2qDB7NHN",
      player: true,
    },
    method: "get",
    url: "https://api.fasturl.link/downup/spotifydown",
    allowAbsoluteUrls: true,
    data: undefined,
  },
  request: ClientRequest {
    write: [Function],
    end: [Function],
    flushHeaders: [Function],
    destroy: [Function],
    _ensureTls: [Function],
    abort: [Function],
    [Symbol(tls)]: null,
    [Symbol(kAbortController)]: AbortController {
      signal: AbortSignal {
        aborted: false,
        reason: undefined,
        onabort: null,
        throwIfAborted: [Function: throwIfAborted],
        addEventListener: [Function: addEventListener],
        removeEventListener: [Function: removeEventListener],
        dispatchEvent: [Function: dispatchEvent],
      },
      abort: [Function: abort],
    },
    [Symbol(agent)]: Agent {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      defaultPort: 443,
      protocol: "https:",
      options: {
        keepAlive: true,
        scheduling: "lifo",
        timeout: 5000,
        path: null,
        noDelay: true,
      },
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype] {},
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: "lifo",
      maxTotalSockets: undefined,
      totalSocketCount: 0,
      maxCachedSessions: 100,
      createConnection: undefined,
      getName: [Function],
      addRequest: [Function],
      createSocket: [Function],
      removeSocket: [Function],
      keepSocketAlive: [Function],
      reuseSocket: [Function],
      destroy: [Function],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      eventNames: [Function: eventNames],
    },
    destroyed: false,
    [Symbol(protocol)]: "https:",
    [Symbol(port)]: 443,
    [Symbol(useDefaultPort)]: true,
    [Symbol(host)]: "api.fasturl.link",
    [Symbol(socketPath)]: undefined,
    [Symbol(method)]: "GET",
    maxHeaderSize: undefined,
    [Symbol(maxHeaderSize)]: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    [Symbol(path)]: "/downup/spotifydown?url=https:%2F%2Fopen.spotify.com%2Ftrack%2F2GfIBIeCABdzxZ2qDB7NHN&player=true",
    _events: [Object: null prototype] {
      abort: [
        [Function]
      ],
      aborted: [
        [Function]
      ],
      connect: [
        [Function]
      ],
      error: [
        [Function]
      ],
      socket: [
        [Function]
      ],
      timeout: [
        [Function]
      ],
    },
    _eventsCount: 6,
    finished: true,
    [Symbol(res)]: null,
    [Symbol(upgradeOrConnect)]: false,
    [Symbol(parser)]: null,
    [Symbol(maxHeadersCount)]: null,
    [Symbol(reusedSocket)]: false,
    [Symbol(headers)]: Headers {
      "accept": "application/json, text/plain, */*",
      "user-agent": "axios/1.10.0",
      "accept-encoding": "gzip, compress, deflate, br",
      "x-api-key": "anohimitahananonamaewobokutachiwamadashiranai",
    },
    [Symbol(options)]: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: "https:",
      path: "/downup/spotifydown?url=https:%2F%2Fopen.spotify.com%2Ftrack%2F2GfIBIeCABdzxZ2qDB7NHN&player=true",
      method: "GET",
      headers: [Object: null prototype] {
        Accept: "application/json, text/plain, */*",
        "x-api-key": "anohimitahananonamaewobokutachiwamadashiranai",
        "User-Agent": "axios/1.10.0",
        "Accept-Encoding": "gzip, compress, deflate, br",
      },
      agents: {
        http: undefined,
        https: undefined,
      },
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: {
        proxy: [Function: beforeRedirect],
      },
      hostname: "api.fasturl.link",
      port: "",
      agent: undefined,
      nativeProtocols: {
        "http:": {
          Agent: [EventEmitter: Agent],
          Server: [EventEmitter: Server2],
          METHODS: [
            "ACL", "BIND", "CHECKOUT", "CONNECT", "COPY", "DELETE", "GET", "HEAD", "LINK", "LOCK", "M-SEARCH",
            "MERGE", "MKACTIVITY", "MKCALENDAR", "MKCOL", "MOVE", "NOTIFY", "OPTIONS", "PATCH", "POST",
            "PROPFIND", "PROPPATCH", "PURGE", "PUT", "QUERY", "REBIND", "REPORT", "SEARCH", "SOURCE",
            "SUBSCRIBE", "TRACE", "UNBIND", "UNLINK", "UNLOCK", "UNSUBSCRIBE"
          ],
          STATUS_CODES: {
            "100": "Continue",
            "101": "Switching Protocols",
            "102": "Processing",
            "103": "Early Hints",
            "200": "OK",
            "201": "Created",
            "202": "Accepted",
            "203": "Non-Authoritative Information",
            "204": "No Content",
            "205": "Reset Content",
            "206": "Partial Content",
            "207": "Multi-Status",
            "208": "Already Reported",
            "226": "IM Used",
            "300": "Multiple Choices",
            "301": "Moved Permanently",
            "302": "Found",
            "303": "See Other",
            "304": "Not Modified",
            "305": "Use Proxy",
            "307": "Temporary Redirect",
            "308": "Permanent Redirect",
            "400": "Bad Request",
            "401": "Unauthorized",
            "402": "Payment Required",
            "403": "Forbidden",
            "404": "Not Found",
            "405": "Method Not Allowed",
            "406": "Not Acceptable",
            "407": "Proxy Authentication Required",
            "408": "Request Timeout",
            "409": "Conflict",
            "410": "Gone",
            "411": "Length Required",
            "412": "Precondition Failed",
            "413": "Payload Too Large",
            "414": "URI Too Long",
            "415": "Unsupported Media Type",
            "416": "Range Not Satisfiable",
            "417": "Expectation Failed",
            "418": "I'm a Teapot",
            "421": "Misdirected Request",
            "422": "Unprocessable Entity",
            "423": "Locked",
            "424": "Failed Dependency",
            "425": "Too Early",
            "426": "Upgrade Required",
            "428": "Precondition Required",
            "429": "Too Many Requests",
            "431": "Request Header Fields Too Large",
            "451": "Unavailable For Legal Reasons",
            "500": "Internal Server Error",
            "501": "Not Implemented",
            "502": "Bad Gateway",
            "503": "Service Unavailable",
            "504": "Gateway Timeout",
            "505": "HTTP Version Not Supported",
            "506": "Variant Also Negotiates",
            "507": "Insufficient Storage",
            "508": "Loop Detected",
            "509": "Bandwidth Limit Exceeded",
            "510": "Not Extended",
            "511": "Network Authentication Required",
          },
          createServer: [Function: createServer],
          ServerResponse: [Stream: ServerResponse],
          IncomingMessage: [Readable: IncomingMessage],
          request: [Function: request],
          get: [Function: get],
          maxHeaderSize: [Getter/Setter],
          validateHeaderName: [Function],
          validateHeaderValue: [Function],
          setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
          globalAgent: Agent {
            _events: [Object: null prototype] {},
            _eventsCount: 0,
            _maxListeners: undefined,
            [Symbol(kCapture)]: false,
            defaultPort: 80,
            protocol: "http:",
            options: {
              path: null,
              noDelay: true,
            },
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype] {},
            freeSockets: [Object: null prototype] {},
            keepAliveMsecs: 1000,
            keepAlive: false,
            maxSockets: Infinity,
            maxFreeSockets: 256,
            scheduling: "lifo",
            maxTotalSockets: undefined,
            totalSocketCount: 0,
            createConnection: [Function],
            getName: [Function],
            addRequest: [Function],
            createSocket: [Function],
            removeSocket: [Function],
            keepSocketAlive: [Function],
            reuseSocket: [Function],
            destroy: [Function],
            setMaxListeners: [Function: setMaxListeners],
            getMaxListeners: [Function: getMaxListeners],
            emit: [Function: emit],
            addListener: [Function: addListener],
            on: [Function: addListener],
            prependListener: [Function: prependListener],
            once: [Function: once],
            prependOnceListener: [Function: prependOnceListener],
            removeListener: [Function: removeListener],
            off: [Function: removeListener],
            removeAllListeners: [Function: removeAllListeners],
            listeners: [Function: listeners],
            rawListeners: [Function: rawListeners],
            listenerCount: [Function: listenerCount],
            eventNames: [Function: eventNames],
          },
          ClientRequest: [OutgoingMessage: ClientRequest],
          OutgoingMessage: [Stream: OutgoingMessage],
          WebSocket: [class Function extends Function],
          CloseEvent: [class Function extends Function],
          MessageEvent: [class Function extends Function],
        },
        "https:": {
          Agent: [Agent],
          globalAgent: Agent {
            _events: [Object: null prototype] {},
            _eventsCount: 0,
            _maxListeners: undefined,
            [Symbol(kCapture)]: false,
            defaultPort: 443,
            protocol: "https:",
            options: {
              keepAlive: true,
              scheduling: "lifo",
              timeout: 5000,
              path: null,
              noDelay: true,
            },
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype] {},
            freeSockets: [Object: null prototype] {},
            keepAliveMsecs: 1000,
            keepAlive: true,
            maxSockets: Infinity,
            maxFreeSockets: 256,
            scheduling: "lifo",
            maxTotalSockets: undefined,
            totalSocketCount: 0,
            maxCachedSessions: 100,
            createConnection: undefined,
            getName: [Function],
            addRequest: [Function],
            createSocket: [Function],
            removeSocket: [Function],
            keepSocketAlive: [Function],
            reuseSocket: [Function],
            destroy: [Function],
            setMaxListeners: [Function: setMaxListeners],
            getMaxListeners: [Function: getMaxListeners],
            emit: [Function: emit],
            addListener: [Function: addListener],
            on: [Function: addListener],
            prependListener: [Function: prependListener],
            once: [Function: once],
            prependOnceListener: [Function: prependOnceListener],
            removeListener: [Function: removeListener],
            off: [Function: removeListener],
            removeAllListeners: [Function: removeAllListeners],
            listeners: [Function: listeners],
            rawListeners: [Function: rawListeners],
            listenerCount: [Function: listenerCount],
            eventNames: [Function: eventNames],
          },
          Server: [EventEmitter: Server2],
          createServer: [Function: createServer],
          get: [Function: get],
          request: [Function: request],
        },
      },
      pathname: "/downup/spotifydown",
      search: "?url=https:%2F%2Fopen.spotify.com%2Ftrack%2F2GfIBIeCABdzxZ2qDB7NHN&player=true",
      _defaultAgent: Agent {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        [Symbol(kCapture)]: false,
        defaultPort: 443,
        protocol: "https:",
        options: {
          keepAlive: true,
          scheduling: "lifo",
          timeout: 5000,
          path: null,
          noDelay: true,
        },
        requests: [Object: null prototype] {},
        sockets: [Object: null prototype] {},
        freeSockets: [Object: null prototype] {},
        keepAliveMsecs: 1000,
        keepAlive: true,
        maxSockets: Infinity,
        maxFreeSockets: 256,
        scheduling: "lifo",
        maxTotalSockets: undefined,
        totalSocketCount: 0,
        maxCachedSessions: 100,
        createConnection: undefined,
        getName: [Function],
        addRequest: [Function],
        createSocket: [Function],
        removeSocket: [Function],
        keepSocketAlive: [Function],
        reuseSocket: [Function],
        destroy: [Function],
        setMaxListeners: [Function: setMaxListeners],
        getMaxListeners: [Function: getMaxListeners],
        emit: [Function: emit],
        addListener: [Function: addListener],
        on: [Function: addListener],
        prependListener: [Function: prependListener],
        once: [Function: once],
        prependOnceListener: [Function: prependOnceListener],
        removeListener: [Function: removeListener],
        off: [Function: removeListener],
        removeAllListeners: [Function: removeAllListeners],
        listeners: [Function: listeners],
        rawListeners: [Function: rawListeners],
        listenerCount: [Function: listenerCount],
        eventNames: [Function: eventNames],
      },
      host: "api.fasturl.link",
    },
    _httpMessage: [Circular],
    [Symbol(emitState)]: 14,
    setSocketKeepAlive: [Function],
    setNoDelay: [Function],
    [Symbol(kClearTimeout)]: [Function],
    _redirectable: Writable {
      _events: {
        close: undefined,
        error: [
          [Function: handleRequestError]
        ],
        prefinish: undefined,
        finish: undefined,
        drain: undefined,
        response: [
          [Function: handleResponse]
        ],
        socket: [
          [Function: handleRequestSocket]
        ],
      },
      _writableState: {
        [Symbol(kState)]: 17580812,
        highWaterMark: 65536,
        length: 0,
        corked: 0,
        onwrite: [Function: onwrite],
        writelen: 0,
        [Symbol(kBufferedValue)]: null,
        bufferedIndex: 0,
        pendingcb: 0,
        objectMode: [Getter/Setter],
        finalCalled: [Getter/Setter],
        needDrain: [Getter/Setter],
        ending: [Getter/Setter],
        ended: [Getter/Setter],
        finished: [Getter/Setter],
        destroyed: [Getter/Setter],
        decodeStrings: [Getter/Setter],
        writing: [Getter/Setter],
        sync: [Getter/Setter],
        bufferProcessing: [Getter/Setter],
        constructed: [Getter/Setter],
        prefinished: [Getter/Setter],
        errorEmitted: [Getter/Setter],
        emitClose: [Getter/Setter],
        autoDestroy: [Getter/Setter],
        closed: [Getter/Setter],
        closeEmitted: [Getter/Setter],
        allBuffers: [Getter/Setter],
        allNoop: [Getter/Setter],
        errored: [Getter/Setter],
        writable: [Getter/Setter],
        defaultEncoding: [Getter/Setter],
        writecb: [Getter/Setter],
        afterWriteTickInfo: [Getter/Setter],
        buffered: [Getter/Setter],
        getBuffer: [Function: getBuffer],
        bufferedRequestCount: [Getter],
        [Symbol(kOnConstructed)]: [Function: onConstructed],
      },
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _options: {
        maxRedirects: 21,
        maxBodyLength: Infinity,
        protocol: "https:",
        path: "/downup/spotifydown?url=https:%2F%2Fopen.spotify.com%2Ftrack%2F2GfIBIeCABdzxZ2qDB7NHN&player=true",
        method: "GET",
        headers: [Object: null prototype] {
          Accept: "application/json, text/plain, */*",
          "x-api-key": "anohimitahananonamaewobokutachiwamadashiranai",
          "User-Agent": "axios/1.10.0",
          "Accept-Encoding": "gzip, compress, deflate, br",
        },
        agents: {
          http: undefined,
          https: undefined,
        },
        auth: undefined,
        family: undefined,
        beforeRedirect: [Function: dispatchBeforeRedirect],
        beforeRedirects: {
          proxy: [Function: beforeRedirect],
        },
        hostname: "api.fasturl.link",
        port: "",
        agent: undefined,
        nativeProtocols: {
          "http:": {
            Agent: [EventEmitter: Agent],
            Server: [EventEmitter: Server2],
            METHODS: [
              "ACL", "BIND", "CHECKOUT", "CONNECT", "COPY", "DELETE", "GET", "HEAD", "LINK", "LOCK",
              "M-SEARCH", "MERGE", "MKACTIVITY", "MKCALENDAR", "MKCOL", "MOVE", "NOTIFY", "OPTIONS",
              "PATCH", "POST", "PROPFIND", "PROPPATCH", "PURGE", "PUT", "QUERY", "REBIND", "REPORT",
              "SEARCH", "SOURCE", "SUBSCRIBE", "TRACE", "UNBIND", "UNLINK", "UNLOCK", "UNSUBSCRIBE"
            ],
            STATUS_CODES: {
              "100": "Continue",
              "101": "Switching Protocols",
              "102": "Processing",
              "103": "Early Hints",
              "200": "OK",
              "201": "Created",
              "202": "Accepted",
              "203": "Non-Authoritative Information",
              "204": "No Content",
              "205": "Reset Content",
              "206": "Partial Content",
              "207": "Multi-Status",
              "208": "Already Reported",
              "226": "IM Used",
              "300": "Multiple Choices",
              "301": "Moved Permanently",
              "302": "Found",
              "303": "See Other",
              "304": "Not Modified",
              "305": "Use Proxy",
              "307": "Temporary Redirect",
              "308": "Permanent Redirect",
              "400": "Bad Request",
              "401": "Unauthorized",
              "402": "Payment Required",
              "403": "Forbidden",
              "404": "Not Found",
              "405": "Method Not Allowed",
              "406": "Not Acceptable",
              "407": "Proxy Authentication Required",
              "408": "Request Timeout",
              "409": "Conflict",
              "410": "Gone",
              "411": "Length Required",
              "412": "Precondition Failed",
              "413": "Payload Too Large",
              "414": "URI Too Long",
              "415": "Unsupported Media Type",
              "416": "Range Not Satisfiable",
              "417": "Expectation Failed",
              "418": "I'm a Teapot",
              "421": "Misdirected Request",
              "422": "Unprocessable Entity",
              "423": "Locked",
              "424": "Failed Dependency",
              "425": "Too Early",
              "426": "Upgrade Required",
              "428": "Precondition Required",
              "429": "Too Many Requests",
              "431": "Request Header Fields Too Large",
              "451": "Unavailable For Legal Reasons",
              "500": "Internal Server Error",
              "501": "Not Implemented",
              "502": "Bad Gateway",
              "503": "Service Unavailable",
              "504": "Gateway Timeout",
              "505": "HTTP Version Not Supported",
              "506": "Variant Also Negotiates",
              "507": "Insufficient Storage",
              "508": "Loop Detected",
              "509": "Bandwidth Limit Exceeded",
              "510": "Not Extended",
              "511": "Network Authentication Required",
            },
            createServer: [Function: createServer],
            ServerResponse: [Stream: ServerResponse],
            IncomingMessage: [Readable: IncomingMessage],
            request: [Function: request],
            get: [Function: get],
            maxHeaderSize: [Getter/Setter],
            validateHeaderName: [Function],
            validateHeaderValue: [Function],
            setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
            globalAgent: Agent {
              _events: [Object: null prototype] {},
              _eventsCount: 0,
              _maxListeners: undefined,
              [Symbol(kCapture)]: false,
              defaultPort: 80,
              protocol: "http:",
              options: {
                path: null,
                noDelay: true,
              },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: 1000,
              keepAlive: false,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              scheduling: "lifo",
              maxTotalSockets: undefined,
              totalSocketCount: 0,
              createConnection: [Function],
              getName: [Function],
              addRequest: [Function],
              createSocket: [Function],
              removeSocket: [Function],
              keepSocketAlive: [Function],
              reuseSocket: [Function],
              destroy: [Function],
              setMaxListeners: [Function: setMaxListeners],
              getMaxListeners: [Function: getMaxListeners],
              emit: [Function: emit],
              addListener: [Function: addListener],
              on: [Function: addListener],
              prependListener: [Function: prependListener],
              once: [Function: once],
              prependOnceListener: [Function: prependOnceListener],
              removeListener: [Function: removeListener],
              off: [Function: removeListener],
              removeAllListeners: [Function: removeAllListeners],
              listeners: [Function: listeners],
              rawListeners: [Function: rawListeners],
              listenerCount: [Function: listenerCount],
              eventNames: [Function: eventNames],
            },
            ClientRequest: [OutgoingMessage: ClientRequest],
            OutgoingMessage: [Stream: OutgoingMessage],
            WebSocket: [class Function extends Function],
            CloseEvent: [class Function extends Function],
            MessageEvent: [class Function extends Function],
          },
          "https:": {
            Agent: [Agent],
            globalAgent: Agent {
              _events: [Object: null prototype] {},
              _eventsCount: 0,
              _maxListeners: undefined,
              [Symbol(kCapture)]: false,
              defaultPort: 443,
              protocol: "https:",
              options: {
                keepAlive: true,
                scheduling: "lifo",
                timeout: 5000,
                path: null,
                noDelay: true,
              },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: 1000,
              keepAlive: true,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              scheduling: "lifo",
              maxTotalSockets: undefined,
              totalSocketCount: 0,
              maxCachedSessions: 100,
              createConnection: undefined,
              getName: [Function],
              addRequest: [Function],
              createSocket: [Function],
              removeSocket: [Function],
              keepSocketAlive: [Function],
              reuseSocket: [Function],
              destroy: [Function],
              setMaxListeners: [Function: setMaxListeners],
              getMaxListeners: [Function: getMaxListeners],
              emit: [Function: emit],
              addListener: [Function: addListener],
              on: [Function: addListener],
              prependListener: [Function: prependListener],
              once: [Function: once],
              prependOnceListener: [Function: prependOnceListener],
              removeListener: [Function: removeListener],
              off: [Function: removeListener],
              removeAllListeners: [Function: removeAllListeners],
              listeners: [Function: listeners],
              rawListeners: [Function: rawListeners],
              listenerCount: [Function: listenerCount],
              eventNames: [Function: eventNames],
            },
            Server: [EventEmitter: Server2],
            createServer: [Function: createServer],
            get: [Function: get],
            request: [Function: request],
          },
        },
        pathname: "/downup/spotifydown",
        search: "?url=https:%2F%2Fopen.spotify.com%2Ftrack%2F2GfIBIeCABdzxZ2qDB7NHN&player=true",
      },
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: NaN,
      _onNativeResponse: [Function],
      _currentRequest: [Circular],
      _currentUrl: "https://api.fasturl.link/downup/spotifydown?url=https:%2F%2Fopen.spotify.com%2Ftrack%2F2GfIBIeCABdzxZ2qDB7NHN&player=true",
      abort: [Function],
      destroy: [Function],
      write: [Function],
      end: [Function],
      setHeader: [Function],
      removeHeader: [Function],
      setTimeout: [Function],
      flushHeaders: [Function],
      getHeader: [Function],
      setNoDelay: [Function],
      setSocketKeepAlive: [Function],
      aborted: [Getter],
      connection: [Getter],
      socket: [Getter],
      _sanitizeOptions: [Function],
      _performRequest: [Function],
      _processResponse: [Function],
      pipe: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _write: [Function],
      _writev: null,
      closed: [Getter],
      destroyed: [Getter/Setter],
      writable: [Getter/Setter],
      writableFinished: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      writableHighWaterMark: [Getter],
      writableCorked: [Getter],
      writableLength: [Getter],
      errored: [Getter],
      writableAborted: [Getter],
      _undestroy: [Function: undestroy],
      _destroy: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    [Symbol(fetchRequest)]: null,
    [Symbol(fakeSocket)]: Socket {
      _events: {
        close: undefined,
        error: undefined,
        prefinish: undefined,
        finish: undefined,
        drain: undefined,
        data: undefined,
        end: undefined,
        readable: undefined,
      },
      _readableState: {
        [Symbol(kState)]: 1052940,
        highWaterMark: 65536,
        buffer: [],
        bufferIndex: 0,
        length: 0,
        pipes: [],
        awaitDrainWriters: null,
        objectMode: [Getter/Setter],
        ended: [Getter/Setter],
        endEmitted: [Getter/Setter],
        reading: [Getter/Setter],
        constructed: [Getter/Setter],
        sync: [Getter/Setter],
        needReadable: [Getter/Setter],
        emittedReadable: [Getter/Setter],
        readableListening: [Getter/Setter],
        resumeScheduled: [Getter/Setter],
        errorEmitted: [Getter/Setter],
        emitClose: [Getter/Setter],
        autoDestroy: [Getter/Setter],
        destroyed: [Getter/Setter],
        closed: [Getter/Setter],
        closeEmitted: [Getter/Setter],
        multiAwaitDrain: [Getter/Setter],
        readingMore: [Getter/Setter],
        dataEmitted: [Getter/Setter],
        errored: [Getter/Setter],
        defaultEncoding: [Getter/Setter],
        decoder: [Getter/Setter],
        encoding: [Getter/Setter],
        flowing: [Getter/Setter],
        pipesCount: [Getter],
        paused: [Getter/Setter],
        [Symbol(kOnConstructed)]: [Function: onConstructed],
      },
      _writableState: {
        [Symbol(kState)]: 17580812,
        highWaterMark: 65536,
        length: 0,
        corked: 0,
        onwrite: [Function: onwrite],
        writelen: 0,
        [Symbol(kBufferedValue)]: null,
        bufferedIndex: 0,
        pendingcb: 0,
        objectMode: [Getter/Setter],
        finalCalled: [Getter/Setter],
        needDrain: [Getter/Setter],
        ending: [Getter/Setter],
        ended: [Getter/Setter],
        finished: [Getter/Setter],
        destroyed: [Getter/Setter],
        decodeStrings: [Getter/Setter],
        writing: [Getter/Setter],
        sync: [Getter/Setter],
        bufferProcessing: [Getter/Setter],
        constructed: [Getter/Setter],
        prefinished: [Getter/Setter],
        errorEmitted: [Getter/Setter],
        emitClose: [Getter/Setter],
        autoDestroy: [Getter/Setter],
        closed: [Getter/Setter],
        closeEmitted: [Getter/Setter],
        allBuffers: [Getter/Setter],
        allNoop: [Getter/Setter],
        errored: [Getter/Setter],
        writable: [Getter/Setter],
        defaultEncoding: [Getter/Setter],
        writecb: [Getter/Setter],
        afterWriteTickInfo: [Getter/Setter],
        buffered: [Getter/Setter],
        getBuffer: [Function: getBuffer],
        bufferedRequestCount: [Getter],
        [Symbol(kOnConstructed)]: [Function: onConstructed],
      },
      allowHalfOpen: true,
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(::bunternal::)]: undefined,
      bytesRead: 0,
      bytesWritten: 0,
      connecting: false,
      timeout: 0,
      isServer: false,
      _httpMessage: [Circular],
      _onTimeout: [Function],
      address: [Function: address],
      bufferSize: [Getter],
      connect: [Function: connect],
      _destroy: [Function: _destroy],
      _final: [Function: _final],
      localAddress: [Getter],
      localFamily: [Getter],
      localPort: [Getter],
      pending: [Getter],
      _read: [Function: _read],
      readyState: [Getter],
      ref: [Function: ref],
      remoteAddress: [Getter/Setter],
      remotePort: [Getter/Setter],
      remoteFamily: [Getter/Setter],
      resetAndDestroy: [Function: resetAndDestroy],
      setKeepAlive: [Function: setKeepAlive],
      setNoDelay: [Function: setNoDelay],
      setTimeout: [Function: setTimeout],
      unref: [Function: unref],
      _write: [Function: _write],
      destroy: [Function: destroy],
      write: [Function],
      cork: [Function],
      uncork: [Function],
      setDefaultEncoding: [Function: setDefaultEncoding],
      _writev: null,
      end: [Function],
      writable: [Getter/Setter],
      writableHighWaterMark: [Getter],
      writableObjectMode: [Getter],
      writableBuffer: [Getter],
      writableLength: [Getter],
      writableFinished: [Getter],
      writableCorked: [Getter],
      writableEnded: [Getter],
      writableNeedDrain: [Getter],
      destroyed: [Getter/Setter],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
    },
    res: IncomingMessage {
      [Symbol(aborted)]: false,
      [Symbol(eofInProgress)]: true,
      _consuming: true,
      _dumped: false,
      complete: true,
      _closed: false,
      [Symbol(noBody)]: false,
      _events: {
        error: [
          [Function: handleStreamError]
        ],
        data: [
          [Function: handleStreamData]
        ],
        end: [
          [Function: handleStreamEnd]
        ],
        readable: undefined,
        aborted: [
          [Function: handlerStreamAborted]
        ],
      },
      _readableState: {
        [Symbol(kState)]: 194512764,
        highWaterMark: 65536,
        buffer: [],
        bufferIndex: 0,
        length: 0,
        pipes: [],
        awaitDrainWriters: null,
        objectMode: [Getter/Setter],
        ended: [Getter/Setter],
        endEmitted: [Getter/Setter],
        reading: [Getter/Setter],
        constructed: [Getter/Setter],
        sync: [Getter/Setter],
        needReadable: [Getter/Setter],
        emittedReadable: [Getter/Setter],
        readableListening: [Getter/Setter],
        resumeScheduled: [Getter/Setter],
        errorEmitted: [Getter/Setter],
        emitClose: [Getter/Setter],
        autoDestroy: [Getter/Setter],
        destroyed: [Getter/Setter],
        closed: [Getter/Setter],
        closeEmitted: [Getter/Setter],
        multiAwaitDrain: [Getter/Setter],
        readingMore: [Getter/Setter],
        dataEmitted: [Getter/Setter],
        errored: [Getter/Setter],
        defaultEncoding: [Getter/Setter],
        decoder: [Getter/Setter],
        encoding: [Getter/Setter],
        flowing: [Getter/Setter],
        pipesCount: [Getter],
        paused: [Getter/Setter],
        [Symbol(kOnConstructed)]: [Function: onConstructed],
      },
      _maxListeners: undefined,
      [Symbol(kCapture)]: false,
      _eventsCount: NaN,
      [Symbol(FetchAPI)]: Response (0 KB) {
        ok: false,
        url: "https://api.fasturl.link/downup/spotifydown?url=https:%2F%2Fopen.spotify.com%2Ftrack%2F2GfIBIeCABdzxZ2qDB7NHN&player=true",
        status: 524,
        statusText: "<none>",
        headers: Headers {
          "date": "Sat, 28 Jun 2025 11:41:25 GMT",
          "content-type": "text/html; charset=UTF-8",
          "content-length": "7254",
          "connection": "keep-alive",
          "cache-control": "private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
          "expires": "Thu, 01 Jan 1970 00:00:01 GMT",
          "referrer-policy": "same-origin",
          "x-frame-options": "SAMEORIGIN",
          "server": "cloudflare",
          "cf-ray": "956ce7c5cd70d262-FRA",
        },
        redirected: false,
        bodyUsed: true
      },
      [Symbol(type)]: 1,
      [Symbol(bodyStream)]: undefined,
      [Symbol(statusMessage)]: "<none>",
      [Symbol(statusCode)]: 524,
      url: "/downup/spotifydown?url=https:%2F%2Fopen.spotify.com%2Ftrack%2F2GfIBIeCABdzxZ2qDB7NHN&player=true",
      headers: {
        date: "Sat, 28 Jun 2025 11:41:25 GMT",
        "content-type": "text/html; charset=UTF-8",
        "content-length": "7254",
        connection: "keep-alive",
        "cache-control": "private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
        expires: "Thu, 01 Jan 1970 00:00:01 GMT",
        "referrer-policy": "same-origin",
        "x-frame-options": "SAMEORIGIN",
        server: "cloudflare",
        "cf-ray": "956ce7c5cd70d262-FRA",
      },
      rawHeaders: [
        "date", "Sat, 28 Jun 2025 11:41:25 GMT", "content-type", "text/html; charset=UTF-8",
        "content-length", "7254", "connection", "keep-alive", "cache-control", "private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
        "expires", "Thu, 01 Jan 1970 00:00:01 GMT", "referrer-policy", "same-origin", "x-frame-options",
        "SAMEORIGIN", "Server", "cloudflare", "CF-RAY", "956ce7c5cd70d262-FRA"
      ],
      [Symbol(fakeSocket)]: Socket {
        _events: {
          close: undefined,
          error: undefined,
          prefinish: undefined,
          finish: undefined,
          drain: undefined,
          data: undefined,
          end: undefined,
          readable: undefined,
        },
        _readableState: {
          [Symbol(kState)]: 59779340,
          highWaterMark: 65536,
          buffer: [],
          bufferIndex: 0,
          length: 0,
          pipes: [],
          awaitDrainWriters: null,
          objectMode: [Getter/Setter],
          ended: [Getter/Setter],
          endEmitted: [Getter/Setter],
          reading: [Getter/Setter],
          constructed: [Getter/Setter],
          sync: [Getter/Setter],
          needReadable: [Getter/Setter],
          emittedReadable: [Getter/Setter],
          readableListening: [Getter/Setter],
          resumeScheduled: [Getter/Setter],
          errorEmitted: [Getter/Setter],
          emitClose: [Getter/Setter],
          autoDestroy: [Getter/Setter],
          destroyed: [Getter/Setter],
          closed: [Getter/Setter],
          closeEmitted: [Getter/Setter],
          multiAwaitDrain: [Getter/Setter],
          readingMore: [Getter/Setter],
          dataEmitted: [Getter/Setter],
          errored: [Getter/Setter],
          defaultEncoding: [Getter/Setter],
          decoder: [Getter/Setter],
          encoding: [Getter/Setter],
          flowing: [Getter/Setter],
          pipesCount: [Getter],
          paused: [Getter/Setter],
          [Symbol(kOnConstructed)]: [Function: onConstructed],
        },
        _writableState: {
          [Symbol(kState)]: 17580812,
          highWaterMark: 65536,
          length: 0,
          corked: 0,
          onwrite: [Function: onwrite],
          writelen: 0,
          [Symbol(kBufferedValue)]: null,
          bufferedIndex: 0,
          pendingcb: 0,
          objectMode: [Getter/Setter],
          finalCalled: [Getter/Setter],
          needDrain: [Getter/Setter],
          ending: [Getter/Setter],
          ended: [Getter/Setter],
          finished: [Getter/Setter],
          destroyed: [Getter/Setter],
          decodeStrings: [Getter/Setter],
          writing: [Getter/Setter],
          sync: [Getter/Setter],
          bufferProcessing: [Getter/Setter],
          constructed: [Getter/Setter],
          prefinished: [Getter/Setter],
          errorEmitted: [Getter/Setter],
          emitClose: [Getter/Setter],
          autoDestroy: [Getter/Setter],
          closed: [Getter/Setter],
          closeEmitted: [Getter/Setter],
          allBuffers: [Getter/Setter],
          allNoop: [Getter/Setter],
          errored: [Getter/Setter],
          writable: [Getter/Setter],
          defaultEncoding: [Getter/Setter],
          writecb: [Getter/Setter],
          afterWriteTickInfo: [Getter/Setter],
          buffered: [Getter/Setter],
          getBuffer: [Function: getBuffer],
          bufferedRequestCount: [Getter],
          [Symbol(kOnConstructed)]: [Function: onConstructed],
        },
        allowHalfOpen: true,
        _maxListeners: undefined,
        [Symbol(kCapture)]: false,
        [Symbol(::bunternal::)]: undefined,
        bytesRead: 0,
        bytesWritten: 0,
        connecting: false,
        timeout: 0,
        isServer: false,
        _httpMessage: [Circular],
        _onTimeout: [Function],
        encrypted: true,
        address: [Function: address],
        bufferSize: [Getter],
        connect: [Function: connect],
        _destroy: [Function: _destroy],
        _final: [Function: _final],
        localAddress: [Getter],
        localFamily: [Getter],
        localPort: [Getter],
        pending: [Getter],
        _read: [Function: _read],
        readyState: [Getter],
        ref: [Function: ref],
        remoteAddress: [Getter/Setter],
        remotePort: [Getter/Setter],
        remoteFamily: [Getter/Setter],
        resetAndDestroy: [Function: resetAndDestroy],
        setKeepAlive: [Function: setKeepAlive],
        setNoDelay: [Function: setNoDelay],
        setTimeout: [Function: setTimeout],
        unref: [Function: unref],
        _write: [Function: _write],
        destroy: [Function: destroy],
        write: [Function],
        cork: [Function],
        uncork: [Function],
        setDefaultEncoding: [Function: setDefaultEncoding],
        _writev: null,
        end: [Function],
        writable: [Getter/Setter],
        writableHighWaterMark: [Getter],
        writableObjectMode: [Getter],
        writableBuffer: [Getter],
        writableLength: [Getter],
        writableFinished: [Getter],
        writableCorked: [Getter],
        writableEnded: [Getter],
        writableNeedDrain: [Getter],
        destroyed: [Getter/Setter],
        _undestroy: [Function: undestroy],
        push: [Function],
        unshift: [Function],
        isPaused: [Function],
        setEncoding: [Function],
        read: [Function],
        pipe: [Function],
        unpipe: [Function],
        on: [Function],
        addListener: [Function],
        removeListener: [Function],
        off: [Function],
        removeAllListeners: [Function],
        resume: [Function],
        pause: [Function],
        wrap: [Function],
        iterator: [Function],
        readable: [Getter/Setter],
        readableDidRead: [Getter],
        readableAborted: [Getter],
        readableHighWaterMark: [Getter],
        readableBuffer: [Getter],
        readableFlowing: [Getter/Setter],
        readableLength: [Getter],
        readableObjectMode: [Getter],
        readableEncoding: [Getter],
        errored: [Getter],
        closed: [Getter],
        readableEnded: [Getter],
        drop: [Function],
        filter: [Function],
        flatMap: [Function],
        map: [Function],
        take: [Function],
        compose: [Function],
        every: [Function],
        forEach: [Function],
        reduce: [Function],
        toArray: [Function],
        some: [Function],
        find: [Function],
        [Symbol(nodejs.rejection)]: [Function],
        [Symbol(Symbol.asyncDispose)]: [Function],
        [Symbol(Symbol.asyncIterator)]: [Function],
        eventNames: [Function: eventNames],
      },
      req: [Circular],
      setTimeout: [Function],
      responseUrl: "https://api.fasturl.link/downup/spotifydown?url=https:%2F%2Fopen.spotify.com%2Ftrack%2F2GfIBIeCABdzxZ2qDB7NHN&player=true",
      redirects: [],
      [Symbol(kAutoDestroyed)]: true,
      httpVersion: "1.1",
      _construct: [Function: _construct],
      _dump: [Function: _dump],
      _read: [Function: _read],
      _finish: [Function: _finish],
      _destroy: [Function: IncomingMessage_destroy],
      aborted: [Getter/Setter],
      connection: [Getter],
      statusCode: [Getter/Setter],
      statusMessage: [Getter/Setter],
      httpVersionMajor: [Getter/Setter],
      httpVersionMinor: [Getter/Setter],
      rawTrailers: [Getter/Setter],
      trailers: [Getter/Setter],
      socket: [Getter/Setter],
      destroy: [Function: destroy],
      _undestroy: [Function: undestroy],
      push: [Function],
      unshift: [Function],
      isPaused: [Function],
      setEncoding: [Function],
      read: [Function],
      pipe: [Function],
      unpipe: [Function],
      on: [Function],
      addListener: [Function],
      removeListener: [Function],
      off: [Function],
      removeAllListeners: [Function],
      resume: [Function],
      pause: [Function],
      wrap: [Function],
      iterator: [Function],
      readable: [Getter/Setter],
      readableDidRead: [Getter],
      readableAborted: [Getter],
      readableHighWaterMark: [Getter],
      readableBuffer: [Getter],
      readableFlowing: [Getter/Setter],
      readableLength: [Getter],
      readableObjectMode: [Getter],
      readableEncoding: [Getter],
      errored: [Getter],
      closed: [Getter],
      destroyed: [Getter/Setter],
      readableEnded: [Getter],
      drop: [Function],
      filter: [Function],
      flatMap: [Function],
      map: [Function],
      take: [Function],
      compose: [Function],
      every: [Function],
      forEach: [Function],
      reduce: [Function],
      toArray: [Function],
      some: [Function],
      find: [Function],
      [Symbol(nodejs.rejection)]: [Function],
      [Symbol(Symbol.asyncDispose)]: [Function],
      [Symbol(Symbol.asyncIterator)]: [Function],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
    },
    _closed: true,
    complete: true,
    setTimeout: [Function: setTimeout],
    clearTimeout: [Function: clearTimeout],
    path: [Getter],
    port: [Getter],
    method: [Getter],
    host: [Getter],
    protocol: [Getter],
    agent: [Getter/Setter],
    aborted: [Getter/Setter],
    writable: [Getter],
    _keepAliveTimeout: 0,
    _defaultKeepAlive: true,
    shouldKeepAlive: true,
    _onPendingData: [Function: nop2],
    outputSize: 0,
    outputData: [],
    strictContentLength: false,
    _removedTE: false,
    _removedContLen: false,
    _removedConnection: false,
    usesChunkedEncodingByDefault: true,
    _headerNames: [Getter/Setter],
    appendHeader: [Function: appendHeader],
    _implicitHeader: [Function: _implicitHeader],
    getHeader: [Function: getHeader],
    pipe: [Function: pipe],
    getHeaderNames: [Function: getHeaderNames],
    getRawHeaderNames: [Function: getRawHeaderNames],
    getHeaders: [Function: getHeaders],
    removeHeader: [Function: removeHeader],
    setHeader: [Function: setHeader],
    setHeaders: [Function: setHeaders],
    hasHeader: [Function: hasHeader],
    headers: [Getter/Setter],
    addTrailers: [Function: addTrailers],
    connection: [Getter/Setter],
    socket: [Getter/Setter],
    chunkedEncoding: [Getter/Setter],
    writableObjectMode: [Getter],
    writableLength: [Getter],
    writableHighWaterMark: [Getter],
    writableNeedDrain: [Getter],
    writableEnded: [Getter],
    writableFinished: [Getter],
    _send: [Function: _send],
    _writeRaw: [Function: _writeRaw],
    writableCorked: [Getter/Setter],
    cork: [Function: cork],
    uncork: [Function: uncork],
    _headers: [Getter/Setter],
    eventNames: [Function: eventNames],
    setMaxListeners: [Function: setMaxListeners],
    getMaxListeners: [Function: getMaxListeners],
    emit: [Function: emit],
    addListener: [Function: addListener],
    on: [Function: addListener],
    prependListener: [Function: prependListener],
    once: [Function: once],
    prependOnceListener: [Function: prependOnceListener],
    removeListener: [Function: removeListener],
    off: [Function: removeListener],
    removeAllListeners: [Function: removeAllListeners],
    listeners: [Function: listeners],
    rawListeners: [Function: rawListeners],
    listenerCount: [Function: listenerCount],
    [Symbol(kCapture)]: false,
  },
  response: {
    status: 524,
    statusText: "<none>",
    headers: {
      date: "Sat, 28 Jun 2025 11:41:25 GMT",
      "content-type": "text/html; charset=UTF-8",
      "content-length": "7254",
      connection: "keep-alive",
      "cache-control": "private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
      expires: "Thu, 01 Jan 1970 00:00:01 GMT",
      "referrer-policy": "same-origin",
      "x-frame-options": "SAMEORIGIN",
      server: "cloudflare",
      "cf-ray": "956ce7c5cd70d262-FRA",
      set: [Getter/Setter],
      get: [Getter/Setter],
      has: [Getter/Setter],
      delete: [Getter/Setter],
      clear: [Getter/Setter],
      normalize: [Getter/Setter],
      concat: [Getter/Setter],
      toJSON: [Getter/Setter],
      toString: [Getter/Setter],
      getSetCookie: [Getter/Setter],
      getContentType: [Getter/Setter],
      setContentType: [Getter/Setter],
      hasContentType: [Getter/Setter],
      getContentLength: [Getter/Setter],
      setContentLength: [Getter/Setter],
      hasContentLength: [Getter/Setter],
      getAccept: [Getter/Setter],
      setAccept: [Getter/Setter],
      hasAccept: [Getter/Setter],
      getAcceptEncoding: [Getter/Setter],
      setAcceptEncoding: [Getter/Setter],
      hasAcceptEncoding: [Getter/Setter],
      getUserAgent: [Getter/Setter],
      setUserAgent: [Getter/Setter],
      hasUserAgent: [Getter/Setter],
      getAuthorization: [Getter/Setter],
      setAuthorization: [Getter/Setter],
      hasAuthorization: [Getter/Setter],
      [Symbol(Symbol.iterator)]: [Function],
    },
    config: {
      transitional: {
        silentJSONParsing: true,
        forcedJSONParsing: true,
        clarifyTimeoutError: false,
      },
      adapter: [ "xhr", "http", "fetch" ],
      transformRequest: [
        [Function: transformRequest]
      ],
      transformResponse: [
        [Function: transformResponse]
      ],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: {
        FormData: [Function: FormData],
        Blob: [class Blob],
      },
      validateStatus: [Function: validateStatus],
      headers: {
        Accept: "application/json, text/plain, */*",
        "Content-Type": undefined,
        "x-api-key": "anohimitahananonamaewobokutachiwamadashiranai",
        "User-Agent": "axios/1.10.0",
        "Accept-Encoding": "gzip, compress, deflate, br",
        set: [Getter/Setter],
        get: [Getter/Setter],
        has: [Getter/Setter],
        delete: [Getter/Setter],
        clear: [Getter/Setter],
        normalize: [Getter/Setter],
        concat: [Getter/Setter],
        toJSON: [Getter/Setter],
        toString: [Getter/Setter],
        getSetCookie: [Getter/Setter],
        getContentType: [Getter/Setter],
        setContentType: [Getter/Setter],
        hasContentType: [Getter/Setter],
        getContentLength: [Getter/Setter],
        setContentLength: [Getter/Setter],
        hasContentLength: [Getter/Setter],
        getAccept: [Getter/Setter],
        setAccept: [Getter/Setter],
        hasAccept: [Getter/Setter],
        getAcceptEncoding: [Getter/Setter],
        setAcceptEncoding: [Getter/Setter],
        hasAcceptEncoding: [Getter/Setter],
        getUserAgent: [Getter/Setter],
        setUserAgent: [Getter/Setter],
        hasUserAgent: [Getter/Setter],
        getAuthorization: [Getter/Setter],
        setAuthorization: [Getter/Setter],
        hasAuthorization: [Getter/Setter],
        [Symbol(Symbol.iterator)]: [Function],
      },
      params: {
        url: "https://open.spotify.com/track/2GfIBIeCABdzxZ2qDB7NHN",
        player: true,
      },
      method: "get",
      url: "https://api.fasturl.link/downup/spotifydown",
      allowAbsoluteUrls: true,
      data: undefined,
    },
    request: ClientRequest {
      write: [Function],
      end: [Function],
      flushHeaders: [Function],
      destroy: [Function],
      _ensureTls: [Function],
      abort: [Function],
      [Symbol(tls)]: null,
      [Symbol(kAbortController)]: AbortController {
        signal: AbortSignal {
          aborted: false,
          reason: undefined,
          onabort: null,
          throwIfAborted: [Function: throwIfAborted],
          addEventListener: [Function: addEventListener],
          removeEventListener: [Function: removeEventListener],
          dispatchEvent: [Function: dispatchEvent],
        },
        abort: [Function: abort],
      },
      [Symbol(agent)]: Agent {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        [Symbol(kCapture)]: false,
        defaultPort: 443,
        protocol: "https:",
        options: {
          keepAlive: true,
          scheduling: "lifo",
          timeout: 5000,
          path: null,
          noDelay: true,
        },
        requests: [Object: null prototype] {},
        sockets: [Object: null prototype] {},
        freeSockets: [Object: null prototype] {},
        keepAliveMsecs: 1000,
        keepAlive: true,
        maxSockets: Infinity,
        maxFreeSockets: 256,
        scheduling: "lifo",
        maxTotalSockets: undefined,
        totalSocketCount: 0,
        maxCachedSessions: 100,
        createConnection: undefined,
        getName: [Function],
        addRequest: [Function],
        createSocket: [Function],
        removeSocket: [Function],
        keepSocketAlive: [Function],
        reuseSocket: [Function],
        destroy: [Function],
        setMaxListeners: [Function: setMaxListeners],
        getMaxListeners: [Function: getMaxListeners],
        emit: [Function: emit],
        addListener: [Function: addListener],
        on: [Function: addListener],
        prependListener: [Function: prependListener],
        once: [Function: once],
        prependOnceListener: [Function: prependOnceListener],
        removeListener: [Function: removeListener],
        off: [Function: removeListener],
        removeAllListeners: [Function: removeAllListeners],
        listeners: [Function: listeners],
        rawListeners: [Function: rawListeners],
        listenerCount: [Function: listenerCount],
        eventNames: [Function: eventNames],
      },
      destroyed: false,
      [Symbol(protocol)]: "https:",
      [Symbol(port)]: 443,
      [Symbol(useDefaultPort)]: true,
      [Symbol(host)]: "api.fasturl.link",
      [Symbol(socketPath)]: undefined,
      [Symbol(method)]: "GET",
      maxHeaderSize: undefined,
      [Symbol(maxHeaderSize)]: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      [Symbol(path)]: "/downup/spotifydown?url=https:%2F%2Fopen.spotify.com%2Ftrack%2F2GfIBIeCABdzxZ2qDB7NHN&player=true",
      _events: [Object: null prototype] {
        abort: [
          [Function]
        ],
        aborted: [
          [Function]
        ],
        connect: [
          [Function]
        ],
        error: [
          [Function]
        ],
        socket: [
          [Function]
        ],
        timeout: [
          [Function]
        ],
      },
      _eventsCount: 6,
      finished: true,
      [Symbol(res)]: null,
      [Symbol(upgradeOrConnect)]: false,
      [Symbol(parser)]: null,
      [Symbol(maxHeadersCount)]: null,
      [Symbol(reusedSocket)]: false,
      [Symbol(headers)]: Headers {
        "accept": "application/json, text/plain, */*",
        "user-agent": "axios/1.10.0",
        "accept-encoding": "gzip, compress, deflate, br",
        "x-api-key": "anohimitahananonamaewobokutachiwamadashiranai",
      },
      [Symbol(options)]: {
        maxRedirects: 21,
        maxBodyLength: Infinity,
        protocol: "https:",
        path: "/downup/spotifydown?url=https:%2F%2Fopen.spotify.com%2Ftrack%2F2GfIBIeCABdzxZ2qDB7NHN&player=true",
        method: "GET",
        headers: [Object: null prototype] {
          Accept: "application/json, text/plain, */*",
          "x-api-key": "anohimitahananonamaewobokutachiwamadashiranai",
          "User-Agent": "axios/1.10.0",
          "Accept-Encoding": "gzip, compress, deflate, br",
        },
        agents: {
          http: undefined,
          https: undefined,
        },
        auth: undefined,
        family: undefined,
        beforeRedirect: [Function: dispatchBeforeRedirect],
        beforeRedirects: {
          proxy: [Function: beforeRedirect],
        },
        hostname: "api.fasturl.link",
        port: "",
        agent: undefined,
        nativeProtocols: {
          "http:": {
            Agent: [EventEmitter: Agent],
            Server: [EventEmitter: Server2],
            METHODS: [
              "ACL", "BIND", "CHECKOUT", "CONNECT", "COPY", "DELETE", "GET", "HEAD", "LINK", "LOCK",
              "M-SEARCH", "MERGE", "MKACTIVITY", "MKCALENDAR", "MKCOL", "MOVE", "NOTIFY", "OPTIONS",
              "PATCH", "POST", "PROPFIND", "PROPPATCH", "PURGE", "PUT", "QUERY", "REBIND", "REPORT",
              "SEARCH", "SOURCE", "SUBSCRIBE", "TRACE", "UNBIND", "UNLINK", "UNLOCK", "UNSUBSCRIBE"
            ],
            STATUS_CODES: {
              "100": "Continue",
              "101": "Switching Protocols",
              "102": "Processing",
              "103": "Early Hints",
              "200": "OK",
              "201": "Created",
              "202": "Accepted",
              "203": "Non-Authoritative Information",
              "204": "No Content",
              "205": "Reset Content",
              "206": "Partial Content",
              "207": "Multi-Status",
              "208": "Already Reported",
              "226": "IM Used",
              "300": "Multiple Choices",
              "301": "Moved Permanently",
              "302": "Found",
              "303": "See Other",
              "304": "Not Modified",
              "305": "Use Proxy",
              "307": "Temporary Redirect",
              "308": "Permanent Redirect",
              "400": "Bad Request",
              "401": "Unauthorized",
              "402": "Payment Required",
              "403": "Forbidden",
              "404": "Not Found",
              "405": "Method Not Allowed",
              "406": "Not Acceptable",
              "407": "Proxy Authentication Required",
              "408": "Request Timeout",
              "409": "Conflict",
              "410": "Gone",
              "411": "Length Required",
              "412": "Precondition Failed",
              "413": "Payload Too Large",
              "414": "URI Too Long",
              "415": "Unsupported Media Type",
              "416": "Range Not Satisfiable",
              "417": "Expectation Failed",
              "418": "I'm a Teapot",
              "421": "Misdirected Request",
              "422": "Unprocessable Entity",
              "423": "Locked",
              "424": "Failed Dependency",
              "425": "Too Early",
              "426": "Upgrade Required",
              "428": "Precondition Required",
              "429": "Too Many Requests",
              "431": "Request Header Fields Too Large",
              "451": "Unavailable For Legal Reasons",
              "500": "Internal Server Error",
              "501": "Not Implemented",
              "502": "Bad Gateway",
              "503": "Service Unavailable",
              "504": "Gateway Timeout",
              "505": "HTTP Version Not Supported",
              "506": "Variant Also Negotiates",
              "507": "Insufficient Storage",
              "508": "Loop Detected",
              "509": "Bandwidth Limit Exceeded",
              "510": "Not Extended",
              "511": "Network Authentication Required",
            },
            createServer: [Function: createServer],
            ServerResponse: [Stream: ServerResponse],
            IncomingMessage: [Readable: IncomingMessage],
            request: [Function: request],
            get: [Function: get],
            maxHeaderSize: [Getter/Setter],
            validateHeaderName: [Function],
            validateHeaderValue: [Function],
            setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
            globalAgent: Agent {
              _events: [Object: null prototype] {},
              _eventsCount: 0,
              _maxListeners: undefined,
              [Symbol(kCapture)]: false,
              defaultPort: 80,
              protocol: "http:",
              options: {
                path: null,
                noDelay: true,
              },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: 1000,
              keepAlive: false,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              scheduling: "lifo",
              maxTotalSockets: undefined,
              totalSocketCount: 0,
              createConnection: [Function],
              getName: [Function],
              addRequest: [Function],
              createSocket: [Function],
              removeSocket: [Function],
              keepSocketAlive: [Function],
              reuseSocket: [Function],
              destroy: [Function],
              setMaxListeners: [Function: setMaxListeners],
              getMaxListeners: [Function: getMaxListeners],
              emit: [Function: emit],
              addListener: [Function: addListener],
              on: [Function: addListener],
              prependListener: [Function: prependListener],
              once: [Function: once],
              prependOnceListener: [Function: prependOnceListener],
              removeListener: [Function: removeListener],
              off: [Function: removeListener],
              removeAllListeners: [Function: removeAllListeners],
              listeners: [Function: listeners],
              rawListeners: [Function: rawListeners],
              listenerCount: [Function: listenerCount],
              eventNames: [Function: eventNames],
            },
            ClientRequest: [OutgoingMessage: ClientRequest],
            OutgoingMessage: [Stream: OutgoingMessage],
            WebSocket: [class Function extends Function],
            CloseEvent: [class Function extends Function],
            MessageEvent: [class Function extends Function],
          },
          "https:": {
            Agent: [Agent],
            globalAgent: Agent {
              _events: [Object: null prototype] {},
              _eventsCount: 0,
              _maxListeners: undefined,
              [Symbol(kCapture)]: false,
              defaultPort: 443,
              protocol: "https:",
              options: {
                keepAlive: true,
                scheduling: "lifo",
                timeout: 5000,
                path: null,
                noDelay: true,
              },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: 1000,
              keepAlive: true,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              scheduling: "lifo",
              maxTotalSockets: undefined,
              totalSocketCount: 0,
              maxCachedSessions: 100,
              createConnection: undefined,
              getName: [Function],
              addRequest: [Function],
              createSocket: [Function],
              removeSocket: [Function],
              keepSocketAlive: [Function],
              reuseSocket: [Function],
              destroy: [Function],
              setMaxListeners: [Function: setMaxListeners],
              getMaxListeners: [Function: getMaxListeners],
              emit: [Function: emit],
              addListener: [Function: addListener],
              on: [Function: addListener],
              prependListener: [Function: prependListener],
              once: [Function: once],
              prependOnceListener: [Function: prependOnceListener],
              removeListener: [Function: removeListener],
              off: [Function: removeListener],
              removeAllListeners: [Function: removeAllListeners],
              listeners: [Function: listeners],
              rawListeners: [Function: rawListeners],
              listenerCount: [Function: listenerCount],
              eventNames: [Function: eventNames],
            },
            Server: [EventEmitter: Server2],
            createServer: [Function: createServer],
            get: [Function: get],
            request: [Function: request],
          },
        },
        pathname: "/downup/spotifydown",
        search: "?url=https:%2F%2Fopen.spotify.com%2Ftrack%2F2GfIBIeCABdzxZ2qDB7NHN&player=true",
        _defaultAgent: Agent {
          _events: [Object: null prototype] {},
          _eventsCount: 0,
          _maxListeners: undefined,
          [Symbol(kCapture)]: false,
          defaultPort: 443,
          protocol: "https:",
          options: {
            keepAlive: true,
            scheduling: "lifo",
            timeout: 5000,
            path: null,
            noDelay: true,
          },
          requests: [Object: null prototype] {},
          sockets: [Object: null prototype] {},
          freeSockets: [Object: null prototype] {},
          keepAliveMsecs: 1000,
          keepAlive: true,
          maxSockets: Infinity,
          maxFreeSockets: 256,
          scheduling: "lifo",
          maxTotalSockets: undefined,
          totalSocketCount: 0,
          maxCachedSessions: 100,
          createConnection: undefined,
          getName: [Function],
          addRequest: [Function],
          createSocket: [Function],
          removeSocket: [Function],
          keepSocketAlive: [Function],
          reuseSocket: [Function],
          destroy: [Function],
          setMaxListeners: [Function: setMaxListeners],
          getMaxListeners: [Function: getMaxListeners],
          emit: [Function: emit],
          addListener: [Function: addListener],
          on: [Function: addListener],
          prependListener: [Function: prependListener],
          once: [Function: once],
          prependOnceListener: [Function: prependOnceListener],
          removeListener: [Function: removeListener],
          off: [Function: removeListener],
          removeAllListeners: [Function: removeAllListeners],
          listeners: [Function: listeners],
          rawListeners: [Function: rawListeners],
          listenerCount: [Function: listenerCount],
          eventNames: [Function: eventNames],
        },
        host: "api.fasturl.link",
      },
      _httpMessage: [Circular],
      [Symbol(emitState)]: 14,
      setSocketKeepAlive: [Function],
      setNoDelay: [Function],
      [Symbol(kClearTimeout)]: [Function],
      _redirectable: Writable {
        _events: {
          close: undefined,
          error: [
            [Function: handleRequestError]
          ],
          prefinish: undefined,
          finish: undefined,
          drain: undefined,
          response: [
            [Function: handleResponse]
          ],
          socket: [
            [Function: handleRequestSocket]
          ],
        },
        _writableState: {
          [Symbol(kState)]: 17580812,
          highWaterMark: 65536,
          length: 0,
          corked: 0,
          onwrite: [Function: onwrite],
          writelen: 0,
          [Symbol(kBufferedValue)]: null,
          bufferedIndex: 0,
          pendingcb: 0,
          objectMode: [Getter/Setter],
          finalCalled: [Getter/Setter],
          needDrain: [Getter/Setter],
          ending: [Getter/Setter],
          ended: [Getter/Setter],
          finished: [Getter/Setter],
          destroyed: [Getter/Setter],
          decodeStrings: [Getter/Setter],
          writing: [Getter/Setter],
          sync: [Getter/Setter],
          bufferProcessing: [Getter/Setter],
          constructed: [Getter/Setter],
          prefinished: [Getter/Setter],
          errorEmitted: [Getter/Setter],
          emitClose: [Getter/Setter],
          autoDestroy: [Getter/Setter],
          closed: [Getter/Setter],
          closeEmitted: [Getter/Setter],
          allBuffers: [Getter/Setter],
          allNoop: [Getter/Setter],
          errored: [Getter/Setter],
          writable: [Getter/Setter],
          defaultEncoding: [Getter/Setter],
          writecb: [Getter/Setter],
          afterWriteTickInfo: [Getter/Setter],
          buffered: [Getter/Setter],
          getBuffer: [Function: getBuffer],
          bufferedRequestCount: [Getter],
          [Symbol(kOnConstructed)]: [Function: onConstructed],
        },
        _maxListeners: undefined,
        [Symbol(kCapture)]: false,
        _options: {
          maxRedirects: 21,
          maxBodyLength: Infinity,
          protocol: "https:",
          path: "/downup/spotifydown?url=https:%2F%2Fopen.spotify.com%2Ftrack%2F2GfIBIeCABdzxZ2qDB7NHN&player=true",
          method: "GET",
          headers: [Object: null prototype] {
            Accept: "application/json, text/plain, */*",
            "x-api-key": "anohimitahananonamaewobokutachiwamadashiranai",
            "User-Agent": "axios/1.10.0",
            "Accept-Encoding": "gzip, compress, deflate, br",
          },
          agents: {
            http: undefined,
            https: undefined,
          },
          auth: undefined,
          family: undefined,
          beforeRedirect: [Function: dispatchBeforeRedirect],
          beforeRedirects: {
            proxy: [Function: beforeRedirect],
          },
          hostname: "api.fasturl.link",
          port: "",
          agent: undefined,
          nativeProtocols: {
            "http:": {
              Agent: [EventEmitter: Agent],
              Server: [EventEmitter: Server2],
              METHODS: [
                "ACL", "BIND", "CHECKOUT", "CONNECT", "COPY", "DELETE", "GET", "HEAD", "LINK", "LOCK",
                "M-SEARCH", "MERGE", "MKACTIVITY", "MKCALENDAR", "MKCOL", "MOVE", "NOTIFY", "OPTIONS",
                "PATCH", "POST", "PROPFIND", "PROPPATCH", "PURGE", "PUT", "QUERY", "REBIND", "REPORT",
                "SEARCH", "SOURCE", "SUBSCRIBE", "TRACE", "UNBIND", "UNLINK", "UNLOCK", "UNSUBSCRIBE"
              ],
              STATUS_CODES: {
                "100": "Continue",
                "101": "Switching Protocols",
                "102": "Processing",
                "103": "Early Hints",
                "200": "OK",
                "201": "Created",
                "202": "Accepted",
                "203": "Non-Authoritative Information",
                "204": "No Content",
                "205": "Reset Content",
                "206": "Partial Content",
                "207": "Multi-Status",
                "208": "Already Reported",
                "226": "IM Used",
                "300": "Multiple Choices",
                "301": "Moved Permanently",
                "302": "Found",
                "303": "See Other",
                "304": "Not Modified",
                "305": "Use Proxy",
                "307": "Temporary Redirect",
                "308": "Permanent Redirect",
                "400": "Bad Request",
                "401": "Unauthorized",
                "402": "Payment Required",
                "403": "Forbidden",
                "404": "Not Found",
                "405": "Method Not Allowed",
                "406": "Not Acceptable",
                "407": "Proxy Authentication Required",
                "408": "Request Timeout",
                "409": "Conflict",
                "410": "Gone",
                "411": "Length Required",
                "412": "Precondition Failed",
                "413": "Payload Too Large",
                "414": "URI Too Long",
                "415": "Unsupported Media Type",
                "416": "Range Not Satisfiable",
                "417": "Expectation Failed",
                "418": "I'm a Teapot",
                "421": "Misdirected Request",
                "422": "Unprocessable Entity",
                "423": "Locked",
                "424": "Failed Dependency",
                "425": "Too Early",
                "426": "Upgrade Required",
                "428": "Precondition Required",
                "429": "Too Many Requests",
                "431": "Request Header Fields Too Large",
                "451": "Unavailable For Legal Reasons",
                "500": "Internal Server Error",
                "501": "Not Implemented",
                "502": "Bad Gateway",
                "503": "Service Unavailable",
                "504": "Gateway Timeout",
                "505": "HTTP Version Not Supported",
                "506": "Variant Also Negotiates",
                "507": "Insufficient Storage",
                "508": "Loop Detected",
                "509": "Bandwidth Limit Exceeded",
                "510": "Not Extended",
                "511": "Network Authentication Required",
              },
              createServer: [Function: createServer],
              ServerResponse: [Stream: ServerResponse],
              IncomingMessage: [Readable: IncomingMessage],
              request: [Function: request],
              get: [Function: get],
              maxHeaderSize: [Getter/Setter],
              validateHeaderName: [Function],
              validateHeaderValue: [Function],
              setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
              globalAgent: Agent {
                _events: [Object: null prototype] {},
                _eventsCount: 0,
                _maxListeners: undefined,
                [Symbol(kCapture)]: false,
                defaultPort: 80,
                protocol: "http:",
                options: {
                  path: null,
                  noDelay: true,
                },
                requests: [Object: null prototype] {},
                sockets: [Object: null prototype] {},
                freeSockets: [Object: null prototype] {},
                keepAliveMsecs: 1000,
                keepAlive: false,
                maxSockets: Infinity,
                maxFreeSockets: 256,
                scheduling: "lifo",
                maxTotalSockets: undefined,
                totalSocketCount: 0,
                createConnection: [Function],
                getName: [Function],
                addRequest: [Function],
                createSocket: [Function],
                removeSocket: [Function],
                keepSocketAlive: [Function],
                reuseSocket: [Function],
                destroy: [Function],
                setMaxListeners: [Function: setMaxListeners],
                getMaxListeners: [Function: getMaxListeners],
                emit: [Function: emit],
                addListener: [Function: addListener],
                on: [Function: addListener],
                prependListener: [Function: prependListener],
                once: [Function: once],
                prependOnceListener: [Function: prependOnceListener],
                removeListener: [Function: removeListener],
                off: [Function: removeListener],
                removeAllListeners: [Function: removeAllListeners],
                listeners: [Function: listeners],
                rawListeners: [Function: rawListeners],
                listenerCount: [Function: listenerCount],
                eventNames: [Function: eventNames],
              },
              ClientRequest: [OutgoingMessage: ClientRequest],
              OutgoingMessage: [Stream: OutgoingMessage],
              WebSocket: [class Function extends Function],
              CloseEvent: [class Function extends Function],
              MessageEvent: [class Function extends Function],
            },
            "https:": {
              Agent: [Agent],
              globalAgent: Agent {
                _events: [Object: null prototype] {},
                _eventsCount: 0,
                _maxListeners: undefined,
                [Symbol(kCapture)]: false,
                defaultPort: 443,
                protocol: "https:",
                options: {
                  keepAlive: true,
                  scheduling: "lifo",
                  timeout: 5000,
                  path: null,
                  noDelay: true,
                },
                requests: [Object: null prototype] {},
                sockets: [Object: null prototype] {},
                freeSockets: [Object: null prototype] {},
                keepAliveMsecs: 1000,
                keepAlive: true,
                maxSockets: Infinity,
                maxFreeSockets: 256,
                scheduling: "lifo",
                maxTotalSockets: undefined,
                totalSocketCount: 0,
                maxCachedSessions: 100,
                createConnection: undefined,
                getName: [Function],
                addRequest: [Function],
                createSocket: [Function],
                removeSocket: [Function],
                keepSocketAlive: [Function],
                reuseSocket: [Function],
                destroy: [Function],
                setMaxListeners: [Function: setMaxListeners],
                getMaxListeners: [Function: getMaxListeners],
                emit: [Function: emit],
                addListener: [Function: addListener],
                on: [Function: addListener],
                prependListener: [Function: prependListener],
                once: [Function: once],
                prependOnceListener: [Function: prependOnceListener],
                removeListener: [Function: removeListener],
                off: [Function: removeListener],
                removeAllListeners: [Function: removeAllListeners],
                listeners: [Function: listeners],
                rawListeners: [Function: rawListeners],
                listenerCount: [Function: listenerCount],
                eventNames: [Function: eventNames],
              },
              Server: [EventEmitter: Server2],
              createServer: [Function: createServer],
              get: [Function: get],
              request: [Function: request],
            },
          },
          pathname: "/downup/spotifydown",
          search: "?url=https:%2F%2Fopen.spotify.com%2Ftrack%2F2GfIBIeCABdzxZ2qDB7NHN&player=true",
        },
        _ended: true,
        _ending: true,
        _redirectCount: 0,
        _redirects: [],
        _requestBodyLength: 0,
        _requestBodyBuffers: [],
        _eventsCount: NaN,
        _onNativeResponse: [Function],
        _currentRequest: [Circular],
        _currentUrl: "https://api.fasturl.link/downup/spotifydown?url=https:%2F%2Fopen.spotify.com%2Ftrack%2F2GfIBIeCABdzxZ2qDB7NHN&player=true",
        abort: [Function],
        destroy: [Function],
        write: [Function],
        end: [Function],
        setHeader: [Function],
        removeHeader: [Function],
        setTimeout: [Function],
        flushHeaders: [Function],
        getHeader: [Function],
        setNoDelay: [Function],
        setSocketKeepAlive: [Function],
        aborted: [Getter],
        connection: [Getter],
        socket: [Getter],
        _sanitizeOptions: [Function],
        _performRequest: [Function],
        _processResponse: [Function],
        pipe: [Function],
        cork: [Function],
        uncork: [Function],
        setDefaultEncoding: [Function: setDefaultEncoding],
        _write: [Function],
        _writev: null,
        closed: [Getter],
        destroyed: [Getter/Setter],
        writable: [Getter/Setter],
        writableFinished: [Getter],
        writableObjectMode: [Getter],
        writableBuffer: [Getter],
        writableEnded: [Getter],
        writableNeedDrain: [Getter],
        writableHighWaterMark: [Getter],
        writableCorked: [Getter],
        writableLength: [Getter],
        errored: [Getter],
        writableAborted: [Getter],
        _undestroy: [Function: undestroy],
        _destroy: [Function],
        [Symbol(nodejs.rejection)]: [Function],
        [Symbol(Symbol.asyncDispose)]: [Function],
        eventNames: [Function: eventNames],
        setMaxListeners: [Function: setMaxListeners],
        getMaxListeners: [Function: getMaxListeners],
        emit: [Function: emit],
        addListener: [Function: addListener],
        on: [Function: addListener],
        prependListener: [Function: prependListener],
        once: [Function: once],
        prependOnceListener: [Function: prependOnceListener],
        removeListener: [Function: removeListener],
        off: [Function: removeListener],
        removeAllListeners: [Function: removeAllListeners],
        listeners: [Function: listeners],
        rawListeners: [Function: rawListeners],
        listenerCount: [Function: listenerCount],
      },
      [Symbol(fetchRequest)]: null,
      [Symbol(fakeSocket)]: Socket {
        _events: {
          close: undefined,
          error: undefined,
          prefinish: undefined,
          finish: undefined,
          drain: undefined,
          data: undefined,
          end: undefined,
          readable: undefined,
        },
        _readableState: {
          [Symbol(kState)]: 1052940,
          highWaterMark: 65536,
          buffer: [],
          bufferIndex: 0,
          length: 0,
          pipes: [],
          awaitDrainWriters: null,
          objectMode: [Getter/Setter],
          ended: [Getter/Setter],
          endEmitted: [Getter/Setter],
          reading: [Getter/Setter],
          constructed: [Getter/Setter],
          sync: [Getter/Setter],
          needReadable: [Getter/Setter],
          emittedReadable: [Getter/Setter],
          readableListening: [Getter/Setter],
          resumeScheduled: [Getter/Setter],
          errorEmitted: [Getter/Setter],
          emitClose: [Getter/Setter],
          autoDestroy: [Getter/Setter],
          destroyed: [Getter/Setter],
          closed: [Getter/Setter],
          closeEmitted: [Getter/Setter],
          multiAwaitDrain: [Getter/Setter],
          readingMore: [Getter/Setter],
          dataEmitted: [Getter/Setter],
          errored: [Getter/Setter],
          defaultEncoding: [Getter/Setter],
          decoder: [Getter/Setter],
          encoding: [Getter/Setter],
          flowing: [Getter/Setter],
          pipesCount: [Getter],
          paused: [Getter/Setter],
          [Symbol(kOnConstructed)]: [Function: onConstructed],
        },
        _writableState: {
          [Symbol(kState)]: 17580812,
          highWaterMark: 65536,
          length: 0,
          corked: 0,
          onwrite: [Function: onwrite],
          writelen: 0,
          [Symbol(kBufferedValue)]: null,
          bufferedIndex: 0,
          pendingcb: 0,
          objectMode: [Getter/Setter],
          finalCalled: [Getter/Setter],
          needDrain: [Getter/Setter],
          ending: [Getter/Setter],
          ended: [Getter/Setter],
          finished: [Getter/Setter],
          destroyed: [Getter/Setter],
          decodeStrings: [Getter/Setter],
          writing: [Getter/Setter],
          sync: [Getter/Setter],
          bufferProcessing: [Getter/Setter],
          constructed: [Getter/Setter],
          prefinished: [Getter/Setter],
          errorEmitted: [Getter/Setter],
          emitClose: [Getter/Setter],
          autoDestroy: [Getter/Setter],
          closed: [Getter/Setter],
          closeEmitted: [Getter/Setter],
          allBuffers: [Getter/Setter],
          allNoop: [Getter/Setter],
          errored: [Getter/Setter],
          writable: [Getter/Setter],
          defaultEncoding: [Getter/Setter],
          writecb: [Getter/Setter],
          afterWriteTickInfo: [Getter/Setter],
          buffered: [Getter/Setter],
          getBuffer: [Function: getBuffer],
          bufferedRequestCount: [Getter],
          [Symbol(kOnConstructed)]: [Function: onConstructed],
        },
        allowHalfOpen: true,
        _maxListeners: undefined,
        [Symbol(kCapture)]: false,
        [Symbol(::bunternal::)]: undefined,
        bytesRead: 0,
        bytesWritten: 0,
        connecting: false,
        timeout: 0,
        isServer: false,
        _httpMessage: [Circular],
        _onTimeout: [Function],
        address: [Function: address],
        bufferSize: [Getter],
        connect: [Function: connect],
        _destroy: [Function: _destroy],
        _final: [Function: _final],
        localAddress: [Getter],
        localFamily: [Getter],
        localPort: [Getter],
        pending: [Getter],
        _read: [Function: _read],
        readyState: [Getter],
        ref: [Function: ref],
        remoteAddress: [Getter/Setter],
        remotePort: [Getter/Setter],
        remoteFamily: [Getter/Setter],
        resetAndDestroy: [Function: resetAndDestroy],
        setKeepAlive: [Function: setKeepAlive],
        setNoDelay: [Function: setNoDelay],
        setTimeout: [Function: setTimeout],
        unref: [Function: unref],
        _write: [Function: _write],
        destroy: [Function: destroy],
        write: [Function],
        cork: [Function],
        uncork: [Function],
        setDefaultEncoding: [Function: setDefaultEncoding],
        _writev: null,
        end: [Function],
        writable: [Getter/Setter],
        writableHighWaterMark: [Getter],
        writableObjectMode: [Getter],
        writableBuffer: [Getter],
        writableLength: [Getter],
        writableFinished: [Getter],
        writableCorked: [Getter],
        writableEnded: [Getter],
        writableNeedDrain: [Getter],
        destroyed: [Getter/Setter],
        _undestroy: [Function: undestroy],
        push: [Function],
        unshift: [Function],
        isPaused: [Function],
        setEncoding: [Function],
        read: [Function],
        pipe: [Function],
        unpipe: [Function],
        on: [Function],
        addListener: [Function],
        removeListener: [Function],
        off: [Function],
        removeAllListeners: [Function],
        resume: [Function],
        pause: [Function],
        wrap: [Function],
        iterator: [Function],
        readable: [Getter/Setter],
        readableDidRead: [Getter],
        readableAborted: [Getter],
        readableHighWaterMark: [Getter],
        readableBuffer: [Getter],
        readableFlowing: [Getter/Setter],
        readableLength: [Getter],
        readableObjectMode: [Getter],
        readableEncoding: [Getter],
        errored: [Getter],
        closed: [Getter],
        readableEnded: [Getter],
        drop: [Function],
        filter: [Function],
        flatMap: [Function],
        map: [Function],
        take: [Function],
        compose: [Function],
        every: [Function],
        forEach: [Function],
        reduce: [Function],
        toArray: [Function],
        some: [Function],
        find: [Function],
        [Symbol(nodejs.rejection)]: [Function],
        [Symbol(Symbol.asyncDispose)]: [Function],
        [Symbol(Symbol.asyncIterator)]: [Function],
        eventNames: [Function: eventNames],
      },
      res: IncomingMessage {
        [Symbol(aborted)]: false,
        [Symbol(eofInProgress)]: true,
        _consuming: true,
        _dumped: false,
        complete: true,
        _closed: false,
        [Symbol(noBody)]: false,
        _events: {
          error: [
            [Function: handleStreamError]
          ],
          data: [
            [Function: handleStreamData]
          ],
          end: [
            [Function: handleStreamEnd]
          ],
          readable: undefined,
          aborted: [
            [Function: handlerStreamAborted]
          ],
        },
        _readableState: {
          [Symbol(kState)]: 194512764,
          highWaterMark: 65536,
          buffer: [],
          bufferIndex: 0,
          length: 0,
          pipes: [],
          awaitDrainWriters: null,
          objectMode: [Getter/Setter],
          ended: [Getter/Setter],
          endEmitted: [Getter/Setter],
          reading: [Getter/Setter],
          constructed: [Getter/Setter],
          sync: [Getter/Setter],
          needReadable: [Getter/Setter],
          emittedReadable: [Getter/Setter],
          readableListening: [Getter/Setter],
          resumeScheduled: [Getter/Setter],
          errorEmitted: [Getter/Setter],
          emitClose: [Getter/Setter],
          autoDestroy: [Getter/Setter],
          destroyed: [Getter/Setter],
          closed: [Getter/Setter],
          closeEmitted: [Getter/Setter],
          multiAwaitDrain: [Getter/Setter],
          readingMore: [Getter/Setter],
          dataEmitted: [Getter/Setter],
          errored: [Getter/Setter],
          defaultEncoding: [Getter/Setter],
          decoder: [Getter/Setter],
          encoding: [Getter/Setter],
          flowing: [Getter/Setter],
          pipesCount: [Getter],
          paused: [Getter/Setter],
          [Symbol(kOnConstructed)]: [Function: onConstructed],
        },
        _maxListeners: undefined,
        [Symbol(kCapture)]: false,
        _eventsCount: NaN,
        [Symbol(FetchAPI)]: Response (0 KB) {
          ok: false,
          url: "https://api.fasturl.link/downup/spotifydown?url=https:%2F%2Fopen.spotify.com%2Ftrack%2F2GfIBIeCABdzxZ2qDB7NHN&player=true",
          status: 524,
          statusText: "<none>",
          headers: Headers {
            "date": "Sat, 28 Jun 2025 11:41:25 GMT",
            "content-type": "text/html; charset=UTF-8",
            "content-length": "7254",
            "connection": "keep-alive",
            "cache-control": "private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
            "expires": "Thu, 01 Jan 1970 00:00:01 GMT",
            "referrer-policy": "same-origin",
            "x-frame-options": "SAMEORIGIN",
            "server": "cloudflare",
            "cf-ray": "956ce7c5cd70d262-FRA",
          },
          redirected: false,
          bodyUsed: true
        },
        [Symbol(type)]: 1,
        [Symbol(bodyStream)]: undefined,
        [Symbol(statusMessage)]: "<none>",
        [Symbol(statusCode)]: 524,
        url: "/downup/spotifydown?url=https:%2F%2Fopen.spotify.com%2Ftrack%2F2GfIBIeCABdzxZ2qDB7NHN&player=true",
        headers: {
          date: "Sat, 28 Jun 2025 11:41:25 GMT",
          "content-type": "text/html; charset=UTF-8",
          "content-length": "7254",
          connection: "keep-alive",
          "cache-control": "private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
          expires: "Thu, 01 Jan 1970 00:00:01 GMT",
          "referrer-policy": "same-origin",
          "x-frame-options": "SAMEORIGIN",
          server: "cloudflare",
          "cf-ray": "956ce7c5cd70d262-FRA",
        },
        rawHeaders: [
          "date", "Sat, 28 Jun 2025 11:41:25 GMT", "content-type", "text/html; charset=UTF-8",
          "content-length", "7254", "connection", "keep-alive", "cache-control", "private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
          "expires", "Thu, 01 Jan 1970 00:00:01 GMT", "referrer-policy", "same-origin", "x-frame-options",
          "SAMEORIGIN", "Server", "cloudflare", "CF-RAY", "956ce7c5cd70d262-FRA"
        ],
        [Symbol(fakeSocket)]: Socket {
          _events: {
            close: undefined,
            error: undefined,
            prefinish: undefined,
            finish: undefined,
            drain: undefined,
            data: undefined,
            end: undefined,
            readable: undefined,
          },
          _readableState: {
            [Symbol(kState)]: 59779340,
            highWaterMark: 65536,
            buffer: [],
            bufferIndex: 0,
            length: 0,
            pipes: [],
            awaitDrainWriters: null,
            objectMode: [Getter/Setter],
            ended: [Getter/Setter],
            endEmitted: [Getter/Setter],
            reading: [Getter/Setter],
            constructed: [Getter/Setter],
            sync: [Getter/Setter],
            needReadable: [Getter/Setter],
            emittedReadable: [Getter/Setter],
            readableListening: [Getter/Setter],
            resumeScheduled: [Getter/Setter],
            errorEmitted: [Getter/Setter],
            emitClose: [Getter/Setter],
            autoDestroy: [Getter/Setter],
            destroyed: [Getter/Setter],
            closed: [Getter/Setter],
            closeEmitted: [Getter/Setter],
            multiAwaitDrain: [Getter/Setter],
            readingMore: [Getter/Setter],
            dataEmitted: [Getter/Setter],
            errored: [Getter/Setter],
            defaultEncoding: [Getter/Setter],
            decoder: [Getter/Setter],
            encoding: [Getter/Setter],
            flowing: [Getter/Setter],
            pipesCount: [Getter],
            paused: [Getter/Setter],
            [Symbol(kOnConstructed)]: [Function: onConstructed],
          },
          _writableState: {
            [Symbol(kState)]: 17580812,
            highWaterMark: 65536,
            length: 0,
            corked: 0,
            onwrite: [Function: onwrite],
            writelen: 0,
            [Symbol(kBufferedValue)]: null,
            bufferedIndex: 0,
            pendingcb: 0,
            objectMode: [Getter/Setter],
            finalCalled: [Getter/Setter],
            needDrain: [Getter/Setter],
            ending: [Getter/Setter],
            ended: [Getter/Setter],
            finished: [Getter/Setter],
            destroyed: [Getter/Setter],
            decodeStrings: [Getter/Setter],
            writing: [Getter/Setter],
            sync: [Getter/Setter],
            bufferProcessing: [Getter/Setter],
            constructed: [Getter/Setter],
            prefinished: [Getter/Setter],
            errorEmitted: [Getter/Setter],
            emitClose: [Getter/Setter],
            autoDestroy: [Getter/Setter],
            closed: [Getter/Setter],
            closeEmitted: [Getter/Setter],
            allBuffers: [Getter/Setter],
            allNoop: [Getter/Setter],
            errored: [Getter/Setter],
            writable: [Getter/Setter],
            defaultEncoding: [Getter/Setter],
            writecb: [Getter/Setter],
            afterWriteTickInfo: [Getter/Setter],
            buffered: [Getter/Setter],
            getBuffer: [Function: getBuffer],
            bufferedRequestCount: [Getter],
            [Symbol(kOnConstructed)]: [Function: onConstructed],
          },
          allowHalfOpen: true,
          _maxListeners: undefined,
          [Symbol(kCapture)]: false,
          [Symbol(::bunternal::)]: undefined,
          bytesRead: 0,
          bytesWritten: 0,
          connecting: false,
          timeout: 0,
          isServer: false,
          _httpMessage: [Circular],
          _onTimeout: [Function],
          encrypted: true,
          address: [Function: address],
          bufferSize: [Getter],
          connect: [Function: connect],
          _destroy: [Function: _destroy],
          _final: [Function: _final],
          localAddress: [Getter],
          localFamily: [Getter],
          localPort: [Getter],
          pending: [Getter],
          _read: [Function: _read],
          readyState: [Getter],
          ref: [Function: ref],
          remoteAddress: [Getter/Setter],
          remotePort: [Getter/Setter],
          remoteFamily: [Getter/Setter],
          resetAndDestroy: [Function: resetAndDestroy],
          setKeepAlive: [Function: setKeepAlive],
          setNoDelay: [Function: setNoDelay],
          setTimeout: [Function: setTimeout],
          unref: [Function: unref],
          _write: [Function: _write],
          destroy: [Function: destroy],
          write: [Function],
          cork: [Function],
          uncork: [Function],
          setDefaultEncoding: [Function: setDefaultEncoding],
          _writev: null,
          end: [Function],
          writable: [Getter/Setter],
          writableHighWaterMark: [Getter],
          writableObjectMode: [Getter],
          writableBuffer: [Getter],
          writableLength: [Getter],
          writableFinished: [Getter],
          writableCorked: [Getter],
          writableEnded: [Getter],
          writableNeedDrain: [Getter],
          destroyed: [Getter/Setter],
          _undestroy: [Function: undestroy],
          push: [Function],
          unshift: [Function],
          isPaused: [Function],
          setEncoding: [Function],
          read: [Function],
          pipe: [Function],
          unpipe: [Function],
          on: [Function],
          addListener: [Function],
          removeListener: [Function],
          off: [Function],
          removeAllListeners: [Function],
          resume: [Function],
          pause: [Function],
          wrap: [Function],
          iterator: [Function],
          readable: [Getter/Setter],
          readableDidRead: [Getter],
          readableAborted: [Getter],
          readableHighWaterMark: [Getter],
          readableBuffer: [Getter],
          readableFlowing: [Getter/Setter],
          readableLength: [Getter],
          readableObjectMode: [Getter],
          readableEncoding: [Getter],
          errored: [Getter],
          closed: [Getter],
          readableEnded: [Getter],
          drop: [Function],
          filter: [Function],
          flatMap: [Function],
          map: [Function],
          take: [Function],
          compose: [Function],
          every: [Function],
          forEach: [Function],
          reduce: [Function],
          toArray: [Function],
          some: [Function],
          find: [Function],
          [Symbol(nodejs.rejection)]: [Function],
          [Symbol(Symbol.asyncDispose)]: [Function],
          [Symbol(Symbol.asyncIterator)]: [Function],
          eventNames: [Function: eventNames],
        },
        req: [Circular],
        setTimeout: [Function],
        responseUrl: "https://api.fasturl.link/downup/spotifydown?url=https:%2F%2Fopen.spotify.com%2Ftrack%2F2GfIBIeCABdzxZ2qDB7NHN&player=true",
        redirects: [],
        [Symbol(kAutoDestroyed)]: true,
        httpVersion: "1.1",
        _construct: [Function: _construct],
        _dump: [Function: _dump],
        _read: [Function: _read],
        _finish: [Function: _finish],
        _destroy: [Function: IncomingMessage_destroy],
        aborted: [Getter/Setter],
        connection: [Getter],
        statusCode: [Getter/Setter],
        statusMessage: [Getter/Setter],
        httpVersionMajor: [Getter/Setter],
        httpVersionMinor: [Getter/Setter],
        rawTrailers: [Getter/Setter],
        trailers: [Getter/Setter],
        socket: [Getter/Setter],
        destroy: [Function: destroy],
        _undestroy: [Function: undestroy],
        push: [Function],
        unshift: [Function],
        isPaused: [Function],
        setEncoding: [Function],
        read: [Function],
        pipe: [Function],
        unpipe: [Function],
        on: [Function],
        addListener: [Function],
        removeListener: [Function],
        off: [Function],
        removeAllListeners: [Function],
        resume: [Function],
        pause: [Function],
        wrap: [Function],
        iterator: [Function],
        readable: [Getter/Setter],
        readableDidRead: [Getter],
        readableAborted: [Getter],
        readableHighWaterMark: [Getter],
        readableBuffer: [Getter],
        readableFlowing: [Getter/Setter],
        readableLength: [Getter],
        readableObjectMode: [Getter],
        readableEncoding: [Getter],
        errored: [Getter],
        closed: [Getter],
        destroyed: [Getter/Setter],
        readableEnded: [Getter],
        drop: [Function],
        filter: [Function],
        flatMap: [Function],
        map: [Function],
        take: [Function],
        compose: [Function],
        every: [Function],
        forEach: [Function],
        reduce: [Function],
        toArray: [Function],
        some: [Function],
        find: [Function],
        [Symbol(nodejs.rejection)]: [Function],
        [Symbol(Symbol.asyncDispose)]: [Function],
        [Symbol(Symbol.asyncIterator)]: [Function],
        eventNames: [Function: eventNames],
        setMaxListeners: [Function: setMaxListeners],
        getMaxListeners: [Function: getMaxListeners],
        emit: [Function: emit],
        prependListener: [Function: prependListener],
        once: [Function: once],
        prependOnceListener: [Function: prependOnceListener],
        listeners: [Function: listeners],
        rawListeners: [Function: rawListeners],
        listenerCount: [Function: listenerCount],
      },
      _closed: true,
      complete: true,
      setTimeout: [Function: setTimeout],
      clearTimeout: [Function: clearTimeout],
      path: [Getter],
      port: [Getter],
      method: [Getter],
      host: [Getter],
      protocol: [Getter],
      agent: [Getter/Setter],
      aborted: [Getter/Setter],
      writable: [Getter],
      _keepAliveTimeout: 0,
      _defaultKeepAlive: true,
      shouldKeepAlive: true,
      _onPendingData: [Function: nop2],
      outputSize: 0,
      outputData: [],
      strictContentLength: false,
      _removedTE: false,
      _removedContLen: false,
      _removedConnection: false,
      usesChunkedEncodingByDefault: true,
      _headerNames: [Getter/Setter],
      appendHeader: [Function: appendHeader],
      _implicitHeader: [Function: _implicitHeader],
      getHeader: [Function: getHeader],
      pipe: [Function: pipe],
      getHeaderNames: [Function: getHeaderNames],
      getRawHeaderNames: [Function: getRawHeaderNames],
      getHeaders: [Function: getHeaders],
      removeHeader: [Function: removeHeader],
      setHeader: [Function: setHeader],
      setHeaders: [Function: setHeaders],
      hasHeader: [Function: hasHeader],
      headers: [Getter/Setter],
      addTrailers: [Function: addTrailers],
      connection: [Getter/Setter],
      socket: [Getter/Setter],
      chunkedEncoding: [Getter/Setter],
      writableObjectMode: [Getter],
      writableLength: [Getter],
      writableHighWaterMark: [Getter],
      writableNeedDrain: [Getter],
      writableEnded: [Getter],
      writableFinished: [Getter],
      _send: [Function: _send],
      _writeRaw: [Function: _writeRaw],
      writableCorked: [Getter/Setter],
      cork: [Function: cork],
      uncork: [Function: uncork],
      _headers: [Getter/Setter],
      eventNames: [Function: eventNames],
      setMaxListeners: [Function: setMaxListeners],
      getMaxListeners: [Function: getMaxListeners],
      emit: [Function: emit],
      addListener: [Function: addListener],
      on: [Function: addListener],
      prependListener: [Function: prependListener],
      once: [Function: once],
      prependOnceListener: [Function: prependOnceListener],
      removeListener: [Function: removeListener],
      off: [Function: removeListener],
      removeAllListeners: [Function: removeAllListeners],
      listeners: [Function: listeners],
      rawListeners: [Function: rawListeners],
      listenerCount: [Function: listenerCount],
      [Symbol(kCapture)]: false,
    },
    data: "<!DOCTYPE html>\n<!--[if lt IE 7]> <html class=\"no-js ie6 oldie\" lang=\"en-US\"> <![endif]-->\n<!--[if IE 7]>    <html class=\"no-js ie7 oldie\" lang=\"en-US\"> <![endif]-->\n<!--[if IE 8]>    <html class=\"no-js ie8 oldie\" lang=\"en-US\"> <![endif]-->\n<!--[if gt IE 8]><!--> <html class=\"no-js\" lang=\"en-US\"> <!--<![endif]-->\n<head>\n\n<title>fasturl.link | 524: A timeout occurred</title>\n<meta charset=\"UTF-8\" />\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\" />\n<meta name=\"robots\" content=\"noindex, nofollow\" />\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n<link rel=\"stylesheet\" id=\"cf_styles-css\" href=\"/cdn-cgi/styles/main.css\" />\n</head>\n<body>\n<div id=\"cf-wrapper\">\n    <div id=\"cf-error-details\" class=\"p-0\">\n        <header class=\"mx-auto pt-10 lg:pt-6 lg:px-8 w-240 lg:w-full mb-8\">\n            <h1 class=\"inline-block sm:block sm:mb-2 font-light text-60 lg:text-4xl text-black-dark leading-tight mr-2\">\n                <span class=\"inline-block\">A timeout occurred</span>\n                <span class=\"code-label\">Error code 524</span>\n            </h1>\n            <div>\n                Visit <a href=\"https://www.cloudflare.com/5xx-error-landing?utm_source=errorcode_524&utm_campaign=api.fasturl.link\" target=\"_blank\" rel=\"noopener noreferrer\">cloudflare.com</a> for more information.\n            </div>\n            <div class=\"mt-3\">2025-06-28 11:41:25 UTC</div>\n        </header>\n        <div class=\"my-8 bg-gradient-gray\">\n            <div class=\"w-240 lg:w-full mx-auto\">\n                <div class=\"clearfix md:px-8\">\n                    <div id=\"cf-browser-status\" class=\" relative w-1/3 md:w-full py-15 md:p-0 md:py-8 md:text-left md:border-solid md:border-0 md:border-b md:border-gray-400 overflow-hidden float-left md:float-none text-center\">\n  <div class=\"relative mb-10 md:m-0\">\n    \n    <span class=\"cf-icon-browser block md:hidden h-20 bg-center bg-no-repeat\"></span>\n    <span class=\"cf-icon-ok w-12 h-12 absolute left-1/2 md:left-auto md:right-0 md:top-0 -ml-6 -bottom-4\"></span>\n    \n  </div>\n  <span class=\"md:block w-full truncate\">You</span>\n  <h3 class=\"md:inline-block mt-3 md:mt-0 text-2xl text-gray-600 font-light leading-1.3\">\n  \n    Browser\n  \n  </h3>\n  \n  <span class=\"leading-1.3 text-2xl text-green-success\">Working</span>\n  \n</div>\n                    <div id=\"cf-cloudflare-status\" class=\" relative w-1/3 md:w-full py-15 md:p-0 md:py-8 md:text-left md:border-solid md:border-0 md:border-b md:border-gray-400 overflow-hidden float-left md:float-none text-center\">\n  <div class=\"relative mb-10 md:m-0\">\n    <a href=\"https://www.cloudflare.com/5xx-error-landing?utm_source=errorcode_524&#38;utm_campaign=api.fasturl.link\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <span class=\"cf-icon-cloud block md:hidden h-20 bg-center bg-no-repeat\"></span>\n    <span class=\"cf-icon-ok w-12 h-12 absolute left-1/2 md:left-auto md:right-0 md:top-0 -ml-6 -bottom-4\"></span>\n    </a>\n  </div>\n  <span class=\"md:block w-full truncate\">Frankfurt</span>\n  <h3 class=\"md:inline-block mt-3 md:mt-0 text-2xl text-gray-600 font-light leading-1.3\">\n  <a href=\"https://www.cloudflare.com/5xx-error-landing?utm_source=errorcode_524&utm_campaign=api.fasturl.link\" target=\"_blank\" rel=\"noopener noreferrer\">\n    Cloudflare\n  </a>\n  </h3>\n  \n  <span class=\"leading-1.3 text-2xl text-green-success\">Working</span>\n  \n</div>\n                    <div id=\"cf-host-status\" class=\"cf-error-source relative w-1/3 md:w-full py-15 md:p-0 md:py-8 md:text-left md:border-solid md:border-0 md:border-b md:border-gray-400 overflow-hidden float-left md:float-none text-center\">\n  <div class=\"relative mb-10 md:m-0\">\n    \n    <span class=\"cf-icon-server block md:hidden h-20 bg-center bg-no-repeat\"></span>\n    <span class=\"cf-icon-error w-12 h-12 absolute left-1/2 md:left-auto md:right-0 md:top-0 -ml-6 -bottom-4\"></span>\n    \n  </div>\n  <span class=\"md:block w-full truncate\">api.fasturl.link</span>\n  <h3 class=\"md:inline-block mt-3 md:mt-0 text-2xl text-gray-600 font-light leading-1.3\">\n  \n    Host\n  \n  </h3>\n  \n  <span class=\"leading-1.3 text-2xl text-red-error\">Error</span>\n  \n</div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"w-240 lg:w-full mx-auto mb-8 lg:px-8\">\n            <div class=\"clearfix\">\n                <div class=\"w-1/2 md:w-full float-left pr-6 md:pb-10 md:pr-0 leading-relaxed\">\n                    <h2 class=\"text-3xl font-normal leading-1.3 mb-4\">What happened?</h2>\n                    <p>The origin web server timed out responding to this request.</p>\n                </div>\n                <div class=\"w-1/2 md:w-full float-left leading-relaxed\">\n                    <h2 class=\"text-3xl font-normal leading-1.3 mb-4\">What can I do?</h2>\n                    \n                <h3 class=\"text-15 font-semibold mb-2\">If you're a visitor of this website:</h3>\n                <p class=\"mb-6\">Please try again in a few minutes.</p>\n\n                <h3 class=\"text-15 font-semibold mb-2\">If you're the owner of this website:</h3>\n                <p><span>The connection to the origin web server was made, but the origin web server timed out before responding. The likely cause is an overloaded background task, database or application, stressing the resources on your web server. To resolve, please work with your hosting provider or web development team to free up resources for your database or overloaded application.</span> <a rel=\"noopener noreferrer\" href=  \"https://developers.cloudflare.com/support/troubleshooting/http-status-codes/cloudflare-5xx-errors/error-524/\">Additional troubleshooting information here.</a></p>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"cf-error-footer cf-wrapper w-240 lg:w-full py-10 sm:py-4 sm:px-8 mx-auto text-center sm:text-left border-solid border-0 border-t border-gray-300\">\n    <p class=\"text-13\">\n      <span class=\"cf-footer-item sm:block sm:mb-1\">Cloudflare Ray ID: <strong class=\"font-semibold\">956ce7c5cd70d262</strong></span>\n      <span class=\"cf-footer-separator sm:hidden\">&bull;</span>\n      <span id=\"cf-footer-item-ip\" class=\"cf-footer-item hidden sm:block sm:mb-1\">\n        Your IP:\n        <button type=\"button\" id=\"cf-footer-ip-reveal\" class=\"cf-footer-ip-reveal-btn\">Click to reveal</button>\n        <span class=\"hidden\" id=\"cf-footer-ip\">45.142.115.127</span>\n        <span class=\"cf-footer-separator sm:hidden\">&bull;</span>\n      </span>\n      <span class=\"cf-footer-item sm:block sm:mb-1\"><span>Performance &amp; security by</span> <a rel=\"noopener noreferrer\" href=\"https://www.cloudflare.com/5xx-error-landing?utm_source=errorcode_524&#38;utm_campaign=api.fasturl.link\" id=\"brand_link\" target=\"_blank\">Cloudflare</a></span>\n      \n    </p>\n    <script>(function(){function d(){var b=a.getElementById(\"cf-footer-item-ip\"),c=a.getElementById(\"cf-footer-ip-reveal\");b&&\"classList\"in b&&(b.classList.remove(\"hidden\"),c.addEventListener(\"click\",function(){c.classList.add(\"hidden\");a.getElementById(\"cf-footer-ip\").classList.remove(\"hidden\")}))}var a=document;document.addEventListener&&a.addEventListener(\"DOMContentLoaded\",d)})();</script>\n  </div><!-- /.error-footer -->\n\n    </div>\n</div>\n</body>\n</html>",
  },
  status: 524,
  toJSON: [Function: toJSON],
  isAxiosError: true,
  toString: [Function: toString],
}
[18.41.25] ✨ Command play executed successfully
[18.42.08] ℹ️ Executing command: brat
[18.42.15] ℹ️ Executing command: tagall
[18.42.16] ✨ Command tagall executed successfully
[18.42.19] ✨ Command brat executed successfully
Group participants update event: {
  id: "120363400445802838@g.us",
  author: "4359844839457@lid",
  participants: [ "271352326017112@lid" ],
  action: "add",
}
{
  id: "120363400445802838@g.us",
  addressingMode: "lid",
  subject: "Group Random",
  subjectOwner: "4359844839457@lid",
  subjectTime: 1750423103,
  size: 48,
  creation: 1748265695,
  owner: "4359844839457@lid",
  desc: "Group komuniti nih boleh toxic tapi toxic nya jangan berlebihan dan jangan buat orang sakit hati Malaysia & Indonesia boleh masuk tapi jangan ada yang  spanw sticker sus",
  descId: "B98BDD220316E95A4346555645239849",
  linkedParent: "120363419523237634@g.us",
  restrict: false,
  announce: true,
  isCommunity: false,
  isCommunityAnnounce: true,
  joinApprovalMode: false,
  memberAddMode: false,
  participants: [
    {
      id: "196542652780703@lid",
      jid: "",
      lid: "196542652780703@lid",
      admin: null,
    }, {
      id: "223355781251236@lid",
      jid: "",
      lid: "223355781251236@lid",
      admin: null,
    }, {
      id: "102349691441273@lid",
      jid: "",
      lid: "102349691441273@lid",
      admin: null,
    }, {
      id: "69248261042329@lid",
      jid: "",
      lid: "69248261042329@lid",
      admin: null,
    }, {
      id: "215753957609600@lid",
      jid: "",
      lid: "215753957609600@lid",
      admin: null,
    }, {
      id: "71623042433051@lid",
      jid: "",
      lid: "71623042433051@lid",
      admin: null,
    }, {
      id: "219219476123690@lid",
      jid: "",
      lid: "219219476123690@lid",
      admin: null,
    }, {
      id: "40124020707459@lid",
      jid: "",
      lid: "40124020707459@lid",
      admin: null,
    }, {
      id: "110423625969816@lid",
      jid: "",
      lid: "110423625969816@lid",
      admin: null,
    }, {
      id: "43139171639492@lid",
      jid: "",
      lid: "43139171639492@lid",
      admin: null,
    }, {
      id: "214272311324673@lid",
      jid: "",
      lid: "214272311324673@lid",
      admin: null,
    }, {
      id: "12417438355602@lid",
      jid: "",
      lid: "12417438355602@lid",
      admin: null,
    }, {
      id: "111394926153878@lid",
      jid: "",
      lid: "111394926153878@lid",
      admin: null,
    }, {
      id: "9694261284878@lid",
      jid: "",
      lid: "9694261284878@lid",
      admin: null,
    }, {
      id: "189017215750251@lid",
      jid: "",
      lid: "189017215750251@lid",
      admin: null,
    }, {
      id: "194334922113258@lid",
      jid: "",
      lid: "194334922113258@lid",
      admin: null,
    }, {
      id: "114993555058731@lid",
      jid: "",
      lid: "114993555058731@lid",
      admin: null,
    }, {
      id: "4359844839457@lid",
      jid: "60193734892@s.whatsapp.net",
      lid: "4359844839457@lid",
      admin: "superadmin",
    }, {
      id: "137869020627008@lid",
      jid: "",
      lid: "137869020627008@lid",
      admin: null,
    }, {
      id: "112606023033048@lid",
      jid: "",
      lid: "112606023033048@lid",
      admin: null,
    }, {
      id: "41502789107730@lid",
      jid: "",
      lid: "41502789107730@lid",
      admin: null,
    }, {
      id: "23940583927872@lid",
      jid: "",
      lid: "23940583927872@lid",
      admin: null,
    }, {
      id: "34798496182512@lid",
      jid: "",
      lid: "34798496182512@lid",
      admin: null,
    }, {
      id: "271352326017112@lid",
      jid: "",
      lid: "271352326017112@lid",
      admin: null,
    }, {
      id: "26345916653652@lid",
      jid: "",
      lid: "26345916653652@lid",
      admin: null,
    }, {
      id: "123553777209357@lid",
      jid: "",
      lid: "123553777209357@lid",
      admin: null,
    }, {
      id: "137113123180559@lid",
      jid: "",
      lid: "137113123180559@lid",
      admin: null,
    }, {
      id: "57918036684802@lid",
      jid: "",
      lid: "57918036684802@lid",
      admin: null,
    }, {
      id: "200081605132507@lid",
      jid: "",
      lid: "200081605132507@lid",
      admin: null,
    }, {
      id: "192406246924540@lid",
      jid: "",
      lid: "192406246924540@lid",
      admin: null,
    }, {
      id: "41167815233692@lid",
      jid: "",
      lid: "41167815233692@lid",
      admin: null,
    }, {
      id: "148580501336083@lid",
      jid: "",
      lid: "148580501336083@lid",
      admin: null,
    }, {
      id: "113520632942752@lid",
      jid: "",
      lid: "113520632942752@lid",
      admin: null,
    }, {
      id: "180187283083506@lid",
      jid: "",
      lid: "180187283083506@lid",
      admin: null,
    }, {
      id: "232706210296044@lid",
      jid: "",
      lid: "232706210296044@lid",
      admin: null,
    }, {
      id: "31143445418219@lid",
      jid: "",
      lid: "31143445418219@lid",
      admin: null,
    }, {
      id: "179457172181166@lid",
      jid: "",
      lid: "179457172181166@lid",
      admin: null,
    }, {
      id: "252540302147618@lid",
      jid: "",
      lid: "252540302147618@lid",
      admin: null,
    }, {
      id: "8307070738617@lid",
      jid: "",
      lid: "8307070738617@lid",
      admin: null,
    }, {
      id: "54709696098408@lid",
      jid: "",
      lid: "54709696098408@lid",
      admin: null,
    }, {
      id: "65649145544837@lid",
      jid: "",
      lid: "65649145544837@lid",
      admin: null,
    }, {
      id: "59056303644869@lid",
      jid: "",
      lid: "59056303644869@lid",
      admin: null,
    }, {
      id: "83645075316764@lid",
      jid: "",
      lid: "83645075316764@lid",
      admin: null,
    }, {
      id: "66404942401587@lid",
      jid: "",
      lid: "66404942401587@lid",
      admin: null,
    }, {
      id: "119155781009592@lid",
      jid: "",
      lid: "119155781009592@lid",
      admin: null,
    }, {
      id: "57488791629848@lid",
      jid: "",
      lid: "57488791629848@lid",
      admin: null,
    }, {
      id: "218335249707146@lid",
      jid: "",
      lid: "218335249707146@lid",
      admin: null,
    }, {
      id: "11919054385290@lid",
      jid: "",
      lid: "11919054385290@lid",
      admin: null,
    }
  ],
  ephemeralDuration: undefined,
}
[18.51.31] ℹ️ Executing command: brat
[18.51.31] ✨ Command brat executed successfully
[18.59.59] ℹ️ 📢 File berubah: src/plugins/hidden/statsnl.js
[18.59.59] ✨  Plugin di-reload: src/plugins/hidden/statsnl.js
[19.00.00] ℹ️ 📢 File berubah: src/plugins/hidden/statsnl.js
[19.00.00] ✨  Plugin di-reload: src/plugins/hidden/statsnl.js
